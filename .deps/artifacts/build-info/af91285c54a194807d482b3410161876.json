{
	"id": "af91285c54a194807d482b3410161876",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/token.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.23;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\n\r\ncontract LivingTheDream is ERC20, ERC20Burnable, Ownable, ReentrancyGuard, Pausable {\r\n    uint256 public constant MAX_SUPPLY = 333333333333 * 10**18; \r\n    uint256 public constant INITIAL_SUPPLY = 33333333333 * 10**18;\r\n    uint256 public constant MARKETING_WALLET_AMOUNT = 5533333333 * 10**18;\r\n    uint256 public constant AIRDROP_WALLET_AMOUNT = 27777777777 * 10**18;\r\n\r\n    mapping(address => bool) public isWhitelisted;\r\n    mapping(address => bool) public isBlacklisted;\r\n    mapping(address => bool) public isExcludedFromTax;\r\n\r\n     struct Taxes {\r\n        uint256 buyTax;\r\n        uint256 sellTax;\r\n    }\r\n\r\n    Taxes public currentTaxes;\r\n\r\n    event TaxesChanged(uint256 buyTax, uint256 sellTax);\r\n    \r\n\r\n    address payable public treasuryAddress;\r\n\r\n      constructor(address payable _treasuryAddress, address newOwner) ERC20(\"Living The Dream\", \"LTD\") Ownable(msg.sender) {\r\n        \r\n        _mint(msg.sender, INITIAL_SUPPLY);\r\n        _mint(0x3E55eFc604A3E021069AA4852AB5A97798301Fd5, MARKETING_WALLET_AMOUNT); // Se deben cambiar esta wallet, este es un ejemplo\r\n        _mint(0x54412E0892c534c89A076252e3824F1f7f549c52, AIRDROP_WALLET_AMOUNT);\r\n        currentTaxes = Taxes(7, 10);\r\n        treasuryAddress = _treasuryAddress;\r\n        _mint(newOwner, INITIAL_SUPPLY); // Acuñar el suministro inicial al nuevo propietario\r\n        transferOwnership(newOwner); // Transferir la propiedad al desplegar todo\r\n            \r\n    }\r\n\r\n    \r\n    \r\n    // ... (funcion para minteo solo del Owner)\r\n\r\n    function mint(address user, uint256 amount) external onlyOwner {\r\n        _mint(user, amount);\r\n    }\r\n\r\n    // se pausa las tranferencias, pero solo el owner puede hacer //\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    // solo el owner puede despausar el contrato\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n    \r\n    // Función burn con modificador onlyOwner\r\n    function burn(address account, uint256 amount) public onlyOwner { // Agregar un argumento para la dirección\r\n        _burn(account, amount); // Quemar desde la dirección especificada\r\n    }\r\n\r\n    // Funciones para listas blancas y negras\r\n    function addToWhitelist(address account) external onlyOwner {\r\n        isWhitelisted[account] = true;\r\n    }\r\n\r\n    function removeFromWhitelist(address account) external onlyOwner {\r\n        isWhitelisted[account] = false;\r\n    }\r\n\r\n    function addToBlacklist(address account) external onlyOwner {\r\n        isBlacklisted[account] = true;\r\n    }\r\n\r\n    function removeFromBlacklist(address account) external onlyOwner {\r\n        isBlacklisted[account] = false;\r\n    }\r\n\r\n    // Función para excluir direcciones de impuestos\r\n    function excludeFromTax(address account) external onlyOwner {\r\n        isExcludedFromTax[account] = true;\r\n    }\r\n\r\n    function includeInTax(address account) external onlyOwner {\r\n        isExcludedFromTax[account] = false;\r\n    }\r\n\r\n        function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual { // Eliminamos override\r\n        uint256 taxAmount = 0;\r\n        if (!isExcludedFromTax[from] && !isExcludedFromTax[to]) {\r\n            if (from == address(this)) { // Venta\r\n                taxAmount = (amount * currentTaxes.sellTax) / 100;\r\n            } else if (!isWhitelisted[from]) { // Compra (y no está en la whitelist)\r\n                taxAmount = (amount * currentTaxes.buyTax) / 100;\r\n            }\r\n        }\r\n\r\n        if (taxAmount > 0) {\r\n            _transfer(from, treasuryAddress, taxAmount); // Transferir impuestos a la tesorería\r\n        }\r\n    }\r\n    // Función para cambiar la dirección de tesorería (solo el propietario)\r\n    function setTreasuryAddress(address payable newTreasuryAddress) external onlyOwner {\r\n        treasuryAddress = newTreasuryAddress;\r\n    }\r\n\r\n    function adjustTaxes(uint256 newBuyTax, uint256 newSellTax) external onlyOwner {\r\n        require(newBuyTax <= 100, \"Buy tax cannot exceed 100%\");\r\n        require(newSellTax <= 100, \"Sell tax cannot exceed 100%\");\r\n        currentTaxes.buyTax = newBuyTax;\r\n        currentTaxes.sellTax = newSellTax;\r\n        emit TaxesChanged(newBuyTax, newSellTax);\r\n    }\r\n\r\n    function approveForDEX(address dexAddress, uint256 amount) external onlyOwner {\r\n        _approve(address(this), dexAddress, amount);\r\n    }\r\n}\r\n\r\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			".deps/token.sol": {
				"LivingTheDream": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_treasuryAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "buyTax",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sellTax",
									"type": "uint256"
								}
							],
							"name": "TaxesChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "AIRDROP_WALLET_AMOUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MARKETING_WALLET_AMOUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addToBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newBuyTax",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newSellTax",
									"type": "uint256"
								}
							],
							"name": "adjustTaxes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dexAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approveForDEX",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentTaxes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "buyTax",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "sellTax",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeFromTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "includeInTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExcludedFromTax",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeFromBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "newTreasuryAddress",
									"type": "address"
								}
							],
							"name": "setTreasuryAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryAddress",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/token.sol\":370:4732  contract LivingTheDream is ERC20, ERC20Burnable, Ownable, ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \".deps/token.sol\":1140:1815  constructor(address payable _treasuryAddress, address newOwner) ERC20(\"Living The Dream\", \"LTD\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \".deps/token.sol\":1245:1255  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x4c6976696e672054686520447265616d00000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4c54440000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1241:1246  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x07\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \".deps/token.sol\":1278:1311  _mint(msg.sender, INITIAL_SUPPLY) */\n  tag_22\n    /* \".deps/token.sol\":1284:1294  msg.sender */\n  caller\n    /* \".deps/token.sol\":568:588  33333333333 * 10**18 */\n  0x6bb4afe4ca85cb07a8340000\n    /* \".deps/token.sol\":1278:1283  _mint */\n  shl(0x20, tag_23)\n    /* \".deps/token.sol\":1278:1311  _mint(msg.sender, INITIAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \".deps/token.sol\":1322:1396  _mint(0x3E55eFc604A3E021069AA4852AB5A97798301Fd5, MARKETING_WALLET_AMOUNT) */\n  tag_24\n    /* \".deps/token.sol\":1328:1370  0x3E55eFc604A3E021069AA4852AB5A97798301Fd5 */\n  0x3e55efc604a3e021069aa4852ab5a97798301fd5\n    /* \".deps/token.sol\":645:664  5533333333 * 10**18 */\n  0x11e110e90947de0410340000\n    /* \".deps/token.sol\":1322:1327  _mint */\n  shl(0x20, tag_23)\n    /* \".deps/token.sol\":1322:1396  _mint(0x3E55eFc604A3E021069AA4852AB5A97798301Fd5, MARKETING_WALLET_AMOUNT) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \".deps/token.sol\":1459:1531  _mint(0x54412E0892c534c89A076252e3824F1f7f549c52, AIRDROP_WALLET_AMOUNT) */\n  tag_25\n    /* \".deps/token.sol\":1465:1507  0x54412E0892c534c89A076252e3824F1f7f549c52 */\n  0x54412e0892c534c89a076252e3824f1f7f549c52\n    /* \".deps/token.sol\":719:739  27777777777 * 10**18 */\n  0x59c13d3ea1d47881e3240000\n    /* \".deps/token.sol\":1459:1464  _mint */\n  shl(0x20, tag_23)\n    /* \".deps/token.sol\":1459:1531  _mint(0x54412E0892c534c89A076252e3824F1f7f549c52, AIRDROP_WALLET_AMOUNT) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \".deps/token.sol\":1557:1569  Taxes(7, 10) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \".deps/token.sol\":1563:1564  7 */\n  0x07\n    /* \".deps/token.sol\":1557:1569  Taxes(7, 10) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \".deps/token.sol\":1566:1568  10 */\n  0x0a\n    /* \".deps/token.sol\":1557:1569  Taxes(7, 10) */\n  dup2\n  mstore\n  pop\n    /* \".deps/token.sol\":1542:1554  currentTaxes */\n  0x0b\n    /* \".deps/token.sol\":1542:1569  currentTaxes = Taxes(7, 10) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \".deps/token.sol\":1598:1614  _treasuryAddress */\n  dup2\n    /* \".deps/token.sol\":1580:1595  treasuryAddress */\n  0x0d\n  0x00\n    /* \".deps/token.sol\":1580:1614  treasuryAddress = _treasuryAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \".deps/token.sol\":1625:1656  _mint(newOwner, INITIAL_SUPPLY) */\n  tag_26\n    /* \".deps/token.sol\":1631:1639  newOwner */\n  dup2\n    /* \".deps/token.sol\":568:588  33333333333 * 10**18 */\n  0x6bb4afe4ca85cb07a8340000\n    /* \".deps/token.sol\":1625:1630  _mint */\n  shl(0x20, tag_23)\n    /* \".deps/token.sol\":1625:1656  _mint(newOwner, INITIAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \".deps/token.sol\":1721:1748  transferOwnership(newOwner) */\n  tag_27\n    /* \".deps/token.sol\":1739:1747  newOwner */\n  dup2\n    /* \".deps/token.sol\":1721:1738  transferOwnership */\n  shl(0x20, tag_28)\n    /* \".deps/token.sol\":1721:1748  transferOwnership(newOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \".deps/token.sol\":1140:1815  constructor(address payable _treasuryAddress, address newOwner) ERC20(\"Living The Dream\", \"LTD\") Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \".deps/token.sol\":370:4732  contract LivingTheDream is ERC20, ERC20Burnable, Ownable, ReentrancyGuard, Pausable {... */\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_34\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_35)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\ntag_28:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_37\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  shl(0x20, tag_38)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_41\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_41:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\ntag_40:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n  tag_42\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_45\n  swap2\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_47)\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_48\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_49\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_50\n  jump\t// in\ntag_49:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_51\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_52)\ntag_51:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_52:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_53\n  swap2\n  swap1\n  tag_54\n  jump\t// in\ntag_53:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\ntag_38:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  tag_56\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n  shl(0x20, tag_57)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_56:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  tag_58\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n  shl(0x20, tag_59)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n  0x20\n  shr\n  jump\t// in\ntag_58:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n  tag_60\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  tag_61\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n  shl(0x20, tag_57)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_61:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  mload(0x40)\n  0x118cdaa700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_62\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_62:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\ntag_60:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_57:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\ntag_59:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_66:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_68:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:570   */\ntag_69:\n    /* \"#utility.yul\":511:518   */\n  0x00\n    /* \"#utility.yul\":540:564   */\n  tag_104\n    /* \"#utility.yul\":558:563   */\n  dup3\n    /* \"#utility.yul\":540:564   */\n  tag_68\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":529:564   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:570   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":576:714   */\ntag_70:\n    /* \"#utility.yul\":657:689   */\n  tag_106\n    /* \"#utility.yul\":683:688   */\n  dup2\n    /* \"#utility.yul\":657:689   */\n  tag_69\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":650:655   */\n  dup2\n    /* \"#utility.yul\":647:690   */\n  eq\n    /* \"#utility.yul\":637:708   */\n  tag_107\n  jumpi\n    /* \"#utility.yul\":704:705   */\n  0x00\n    /* \"#utility.yul\":701:702   */\n  dup1\n    /* \"#utility.yul\":694:706   */\n  revert\n    /* \"#utility.yul\":637:708   */\ntag_107:\n    /* \"#utility.yul\":576:714   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":720:879   */\ntag_71:\n    /* \"#utility.yul\":785:790   */\n  0x00\n    /* \"#utility.yul\":816:822   */\n  dup2\n    /* \"#utility.yul\":810:823   */\n  mload\n    /* \"#utility.yul\":801:823   */\n  swap1\n  pop\n    /* \"#utility.yul\":832:873   */\n  tag_109\n    /* \"#utility.yul\":867:872   */\n  dup2\n    /* \"#utility.yul\":832:873   */\n  tag_70\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":720:879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":885:981   */\ntag_72:\n    /* \"#utility.yul\":922:929   */\n  0x00\n    /* \"#utility.yul\":951:975   */\n  tag_111\n    /* \"#utility.yul\":969:974   */\n  dup3\n    /* \"#utility.yul\":951:975   */\n  tag_68\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":940:975   */\n  swap1\n  pop\n    /* \"#utility.yul\":885:981   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":987:1109   */\ntag_73:\n    /* \"#utility.yul\":1060:1084   */\n  tag_113\n    /* \"#utility.yul\":1078:1083   */\n  dup2\n    /* \"#utility.yul\":1060:1084   */\n  tag_72\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":1053:1058   */\n  dup2\n    /* \"#utility.yul\":1050:1085   */\n  eq\n    /* \"#utility.yul\":1040:1103   */\n  tag_114\n  jumpi\n    /* \"#utility.yul\":1099:1100   */\n  0x00\n    /* \"#utility.yul\":1096:1097   */\n  dup1\n    /* \"#utility.yul\":1089:1101   */\n  revert\n    /* \"#utility.yul\":1040:1103   */\ntag_114:\n    /* \"#utility.yul\":987:1109   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1115:1258   */\ntag_74:\n    /* \"#utility.yul\":1172:1177   */\n  0x00\n    /* \"#utility.yul\":1203:1209   */\n  dup2\n    /* \"#utility.yul\":1197:1210   */\n  mload\n    /* \"#utility.yul\":1188:1210   */\n  swap1\n  pop\n    /* \"#utility.yul\":1219:1252   */\n  tag_116\n    /* \"#utility.yul\":1246:1251   */\n  dup2\n    /* \"#utility.yul\":1219:1252   */\n  tag_73\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1115:1258   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1264:1787   */\ntag_3:\n    /* \"#utility.yul\":1351:1357   */\n  0x00\n    /* \"#utility.yul\":1359:1365   */\n  dup1\n    /* \"#utility.yul\":1408:1410   */\n  0x40\n    /* \"#utility.yul\":1396:1405   */\n  dup4\n    /* \"#utility.yul\":1387:1394   */\n  dup6\n    /* \"#utility.yul\":1383:1406   */\n  sub\n    /* \"#utility.yul\":1379:1411   */\n  slt\n    /* \"#utility.yul\":1376:1495   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":1414:1493   */\n  tag_119\n  tag_66\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":1376:1495   */\ntag_118:\n    /* \"#utility.yul\":1534:1535   */\n  0x00\n    /* \"#utility.yul\":1559:1631   */\n  tag_120\n    /* \"#utility.yul\":1623:1630   */\n  dup6\n    /* \"#utility.yul\":1614:1620   */\n  dup3\n    /* \"#utility.yul\":1603:1612   */\n  dup7\n    /* \"#utility.yul\":1599:1621   */\n  add\n    /* \"#utility.yul\":1559:1631   */\n  tag_71\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":1549:1631   */\n  swap3\n  pop\n    /* \"#utility.yul\":1505:1641   */\n  pop\n    /* \"#utility.yul\":1680:1682   */\n  0x20\n    /* \"#utility.yul\":1706:1770   */\n  tag_121\n    /* \"#utility.yul\":1762:1769   */\n  dup6\n    /* \"#utility.yul\":1753:1759   */\n  dup3\n    /* \"#utility.yul\":1742:1751   */\n  dup7\n    /* \"#utility.yul\":1738:1760   */\n  add\n    /* \"#utility.yul\":1706:1770   */\n  tag_74\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":1696:1770   */\n  swap2\n  pop\n    /* \"#utility.yul\":1651:1780   */\n  pop\n    /* \"#utility.yul\":1264:1787   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1793:1892   */\ntag_75:\n    /* \"#utility.yul\":1845:1851   */\n  0x00\n    /* \"#utility.yul\":1879:1884   */\n  dup2\n    /* \"#utility.yul\":1873:1885   */\n  mload\n    /* \"#utility.yul\":1863:1885   */\n  swap1\n  pop\n    /* \"#utility.yul\":1793:1892   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1898:2078   */\ntag_76:\n    /* \"#utility.yul\":1946:2023   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1943:1944   */\n  0x00\n    /* \"#utility.yul\":1936:2024   */\n  mstore\n    /* \"#utility.yul\":2043:2047   */\n  0x41\n    /* \"#utility.yul\":2040:2041   */\n  0x04\n    /* \"#utility.yul\":2033:2048   */\n  mstore\n    /* \"#utility.yul\":2067:2071   */\n  0x24\n    /* \"#utility.yul\":2064:2065   */\n  0x00\n    /* \"#utility.yul\":2057:2072   */\n  revert\n    /* \"#utility.yul\":2084:2264   */\ntag_77:\n    /* \"#utility.yul\":2132:2209   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2129:2130   */\n  0x00\n    /* \"#utility.yul\":2122:2210   */\n  mstore\n    /* \"#utility.yul\":2229:2233   */\n  0x22\n    /* \"#utility.yul\":2226:2227   */\n  0x04\n    /* \"#utility.yul\":2219:2234   */\n  mstore\n    /* \"#utility.yul\":2253:2257   */\n  0x24\n    /* \"#utility.yul\":2250:2251   */\n  0x00\n    /* \"#utility.yul\":2243:2258   */\n  revert\n    /* \"#utility.yul\":2270:2590   */\ntag_78:\n    /* \"#utility.yul\":2314:2320   */\n  0x00\n    /* \"#utility.yul\":2351:2352   */\n  0x02\n    /* \"#utility.yul\":2345:2349   */\n  dup3\n    /* \"#utility.yul\":2341:2353   */\n  div\n    /* \"#utility.yul\":2331:2353   */\n  swap1\n  pop\n    /* \"#utility.yul\":2398:2399   */\n  0x01\n    /* \"#utility.yul\":2392:2396   */\n  dup3\n    /* \"#utility.yul\":2388:2400   */\n  and\n    /* \"#utility.yul\":2419:2437   */\n  dup1\n    /* \"#utility.yul\":2409:2490   */\n  tag_126\n  jumpi\n    /* \"#utility.yul\":2475:2479   */\n  0x7f\n    /* \"#utility.yul\":2467:2473   */\n  dup3\n    /* \"#utility.yul\":2463:2480   */\n  and\n    /* \"#utility.yul\":2453:2480   */\n  swap2\n  pop\n    /* \"#utility.yul\":2409:2490   */\ntag_126:\n    /* \"#utility.yul\":2537:2539   */\n  0x20\n    /* \"#utility.yul\":2529:2535   */\n  dup3\n    /* \"#utility.yul\":2526:2540   */\n  lt\n    /* \"#utility.yul\":2506:2524   */\n  dup2\n    /* \"#utility.yul\":2503:2541   */\n  sub\n    /* \"#utility.yul\":2500:2584   */\n  tag_127\n  jumpi\n    /* \"#utility.yul\":2556:2574   */\n  tag_128\n  tag_77\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":2500:2584   */\ntag_127:\n    /* \"#utility.yul\":2321:2590   */\n  pop\n    /* \"#utility.yul\":2270:2590   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2596:2737   */\ntag_79:\n    /* \"#utility.yul\":2645:2649   */\n  0x00\n    /* \"#utility.yul\":2668:2671   */\n  dup2\n    /* \"#utility.yul\":2660:2671   */\n  swap1\n  pop\n    /* \"#utility.yul\":2691:2694   */\n  dup2\n    /* \"#utility.yul\":2688:2689   */\n  0x00\n    /* \"#utility.yul\":2681:2695   */\n  mstore\n    /* \"#utility.yul\":2725:2729   */\n  0x20\n    /* \"#utility.yul\":2722:2723   */\n  0x00\n    /* \"#utility.yul\":2712:2730   */\n  keccak256\n    /* \"#utility.yul\":2704:2730   */\n  swap1\n  pop\n    /* \"#utility.yul\":2596:2737   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2743:2836   */\ntag_80:\n    /* \"#utility.yul\":2780:2786   */\n  0x00\n    /* \"#utility.yul\":2827:2829   */\n  0x20\n    /* \"#utility.yul\":2822:2824   */\n  0x1f\n    /* \"#utility.yul\":2815:2820   */\n  dup4\n    /* \"#utility.yul\":2811:2825   */\n  add\n    /* \"#utility.yul\":2807:2830   */\n  div\n    /* \"#utility.yul\":2797:2830   */\n  swap1\n  pop\n    /* \"#utility.yul\":2743:2836   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2842:2949   */\ntag_81:\n    /* \"#utility.yul\":2886:2894   */\n  0x00\n    /* \"#utility.yul\":2936:2941   */\n  dup3\n    /* \"#utility.yul\":2930:2934   */\n  dup3\n    /* \"#utility.yul\":2926:2942   */\n  shl\n    /* \"#utility.yul\":2905:2942   */\n  swap1\n  pop\n    /* \"#utility.yul\":2842:2949   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2955:3348   */\ntag_82:\n    /* \"#utility.yul\":3024:3030   */\n  0x00\n    /* \"#utility.yul\":3074:3075   */\n  0x08\n    /* \"#utility.yul\":3062:3072   */\n  dup4\n    /* \"#utility.yul\":3058:3076   */\n  mul\n    /* \"#utility.yul\":3097:3194   */\n  tag_133\n    /* \"#utility.yul\":3127:3193   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3116:3125   */\n  dup3\n    /* \"#utility.yul\":3097:3194   */\n  tag_81\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3215:3254   */\n  tag_134\n    /* \"#utility.yul\":3245:3253   */\n  dup7\n    /* \"#utility.yul\":3234:3243   */\n  dup4\n    /* \"#utility.yul\":3215:3254   */\n  tag_81\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":3203:3254   */\n  swap6\n  pop\n    /* \"#utility.yul\":3287:3291   */\n  dup1\n    /* \"#utility.yul\":3283:3292   */\n  not\n    /* \"#utility.yul\":3276:3281   */\n  dup5\n    /* \"#utility.yul\":3272:3293   */\n  and\n    /* \"#utility.yul\":3263:3293   */\n  swap4\n  pop\n    /* \"#utility.yul\":3336:3340   */\n  dup1\n    /* \"#utility.yul\":3326:3334   */\n  dup7\n    /* \"#utility.yul\":3322:3341   */\n  and\n    /* \"#utility.yul\":3315:3320   */\n  dup5\n    /* \"#utility.yul\":3312:3342   */\n  or\n    /* \"#utility.yul\":3302:3342   */\n  swap3\n  pop\n    /* \"#utility.yul\":3031:3348   */\n  pop\n  pop\n    /* \"#utility.yul\":2955:3348   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3354:3431   */\ntag_83:\n    /* \"#utility.yul\":3391:3398   */\n  0x00\n    /* \"#utility.yul\":3420:3425   */\n  dup2\n    /* \"#utility.yul\":3409:3425   */\n  swap1\n  pop\n    /* \"#utility.yul\":3354:3431   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3437:3497   */\ntag_84:\n    /* \"#utility.yul\":3465:3468   */\n  0x00\n    /* \"#utility.yul\":3486:3491   */\n  dup2\n    /* \"#utility.yul\":3479:3491   */\n  swap1\n  pop\n    /* \"#utility.yul\":3437:3497   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3503:3645   */\ntag_85:\n    /* \"#utility.yul\":3553:3562   */\n  0x00\n    /* \"#utility.yul\":3586:3639   */\n  tag_138\n    /* \"#utility.yul\":3604:3638   */\n  tag_139\n    /* \"#utility.yul\":3613:3637   */\n  tag_140\n    /* \"#utility.yul\":3631:3636   */\n  dup5\n    /* \"#utility.yul\":3613:3637   */\n  tag_83\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":3604:3638   */\n  tag_84\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":3586:3639   */\n  tag_83\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":3573:3639   */\n  swap1\n  pop\n    /* \"#utility.yul\":3503:3645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3651:3726   */\ntag_86:\n    /* \"#utility.yul\":3694:3697   */\n  0x00\n    /* \"#utility.yul\":3715:3720   */\n  dup2\n    /* \"#utility.yul\":3708:3720   */\n  swap1\n  pop\n    /* \"#utility.yul\":3651:3726   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3732:4001   */\ntag_87:\n    /* \"#utility.yul\":3842:3881   */\n  tag_143\n    /* \"#utility.yul\":3873:3880   */\n  dup4\n    /* \"#utility.yul\":3842:3881   */\n  tag_85\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":3903:3994   */\n  tag_144\n    /* \"#utility.yul\":3952:3993   */\n  tag_145\n    /* \"#utility.yul\":3976:3992   */\n  dup3\n    /* \"#utility.yul\":3952:3993   */\n  tag_86\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":3944:3950   */\n  dup5\n    /* \"#utility.yul\":3937:3941   */\n  dup5\n    /* \"#utility.yul\":3931:3942   */\n  sload\n    /* \"#utility.yul\":3903:3994   */\n  tag_82\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":3897:3901   */\n  dup3\n    /* \"#utility.yul\":3890:3995   */\n  sstore\n    /* \"#utility.yul\":3808:4001   */\n  pop\n    /* \"#utility.yul\":3732:4001   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4007:4080   */\ntag_88:\n    /* \"#utility.yul\":4052:4055   */\n  0x00\n    /* \"#utility.yul\":4007:4080   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4086:4275   */\ntag_89:\n    /* \"#utility.yul\":4163:4195   */\n  tag_148\n  tag_88\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4204:4269   */\n  tag_149\n    /* \"#utility.yul\":4262:4268   */\n  dup2\n    /* \"#utility.yul\":4254:4260   */\n  dup5\n    /* \"#utility.yul\":4248:4252   */\n  dup5\n    /* \"#utility.yul\":4204:4269   */\n  tag_87\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4139:4275   */\n  pop\n    /* \"#utility.yul\":4086:4275   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4281:4467   */\ntag_90:\n    /* \"#utility.yul\":4341:4461   */\ntag_151:\n    /* \"#utility.yul\":4358:4361   */\n  dup2\n    /* \"#utility.yul\":4351:4356   */\n  dup2\n    /* \"#utility.yul\":4348:4362   */\n  lt\n    /* \"#utility.yul\":4341:4461   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":4412:4451   */\n  tag_154\n    /* \"#utility.yul\":4449:4450   */\n  0x00\n    /* \"#utility.yul\":4442:4447   */\n  dup3\n    /* \"#utility.yul\":4412:4451   */\n  tag_89\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":4385:4386   */\n  0x01\n    /* \"#utility.yul\":4378:4383   */\n  dup2\n    /* \"#utility.yul\":4374:4387   */\n  add\n    /* \"#utility.yul\":4365:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4341:4461   */\n  jump(tag_151)\ntag_153:\n    /* \"#utility.yul\":4281:4467   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4473:5016   */\ntag_91:\n    /* \"#utility.yul\":4574:4576   */\n  0x1f\n    /* \"#utility.yul\":4569:4572   */\n  dup3\n    /* \"#utility.yul\":4566:4577   */\n  gt\n    /* \"#utility.yul\":4563:5009   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":4608:4646   */\n  tag_157\n    /* \"#utility.yul\":4640:4645   */\n  dup2\n    /* \"#utility.yul\":4608:4646   */\n  tag_79\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":4692:4721   */\n  tag_158\n    /* \"#utility.yul\":4710:4720   */\n  dup5\n    /* \"#utility.yul\":4692:4721   */\n  tag_80\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":4682:4690   */\n  dup2\n    /* \"#utility.yul\":4678:4722   */\n  add\n    /* \"#utility.yul\":4875:4877   */\n  0x20\n    /* \"#utility.yul\":4863:4873   */\n  dup6\n    /* \"#utility.yul\":4860:4878   */\n  lt\n    /* \"#utility.yul\":4857:4906   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":4896:4904   */\n  dup2\n    /* \"#utility.yul\":4881:4904   */\n  swap1\n  pop\n    /* \"#utility.yul\":4857:4906   */\ntag_159:\n    /* \"#utility.yul\":4919:4999   */\n  tag_160\n    /* \"#utility.yul\":4975:4997   */\n  tag_161\n    /* \"#utility.yul\":4993:4996   */\n  dup6\n    /* \"#utility.yul\":4975:4997   */\n  tag_80\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":4965:4973   */\n  dup4\n    /* \"#utility.yul\":4961:4998   */\n  add\n    /* \"#utility.yul\":4948:4959   */\n  dup3\n    /* \"#utility.yul\":4919:4999   */\n  tag_90\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":4578:5009   */\n  pop\n  pop\n    /* \"#utility.yul\":4563:5009   */\ntag_156:\n    /* \"#utility.yul\":4473:5016   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5022:5139   */\ntag_92:\n    /* \"#utility.yul\":5076:5084   */\n  0x00\n    /* \"#utility.yul\":5126:5131   */\n  dup3\n    /* \"#utility.yul\":5120:5124   */\n  dup3\n    /* \"#utility.yul\":5116:5132   */\n  shr\n    /* \"#utility.yul\":5095:5132   */\n  swap1\n  pop\n    /* \"#utility.yul\":5022:5139   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5145:5314   */\ntag_93:\n    /* \"#utility.yul\":5189:5195   */\n  0x00\n    /* \"#utility.yul\":5222:5273   */\n  tag_164\n    /* \"#utility.yul\":5270:5271   */\n  0x00\n    /* \"#utility.yul\":5266:5272   */\n  not\n    /* \"#utility.yul\":5258:5263   */\n  dup5\n    /* \"#utility.yul\":5255:5256   */\n  0x08\n    /* \"#utility.yul\":5251:5264   */\n  mul\n    /* \"#utility.yul\":5222:5273   */\n  tag_92\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":5218:5274   */\n  not\n    /* \"#utility.yul\":5303:5307   */\n  dup1\n    /* \"#utility.yul\":5297:5301   */\n  dup4\n    /* \"#utility.yul\":5293:5308   */\n  and\n    /* \"#utility.yul\":5283:5308   */\n  swap2\n  pop\n    /* \"#utility.yul\":5196:5314   */\n  pop\n    /* \"#utility.yul\":5145:5314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5319:5614   */\ntag_94:\n    /* \"#utility.yul\":5395:5399   */\n  0x00\n    /* \"#utility.yul\":5541:5570   */\n  tag_166\n    /* \"#utility.yul\":5566:5569   */\n  dup4\n    /* \"#utility.yul\":5560:5564   */\n  dup4\n    /* \"#utility.yul\":5541:5570   */\n  tag_93\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":5533:5570   */\n  swap2\n  pop\n    /* \"#utility.yul\":5603:5606   */\n  dup3\n    /* \"#utility.yul\":5600:5601   */\n  0x02\n    /* \"#utility.yul\":5596:5607   */\n  mul\n    /* \"#utility.yul\":5590:5594   */\n  dup3\n    /* \"#utility.yul\":5587:5608   */\n  or\n    /* \"#utility.yul\":5579:5608   */\n  swap1\n  pop\n    /* \"#utility.yul\":5319:5614   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5619:7014   */\ntag_11:\n    /* \"#utility.yul\":5736:5773   */\n  tag_168\n    /* \"#utility.yul\":5769:5772   */\n  dup3\n    /* \"#utility.yul\":5736:5773   */\n  tag_75\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":5838:5856   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5830:5836   */\n  dup2\n    /* \"#utility.yul\":5827:5857   */\n  gt\n    /* \"#utility.yul\":5824:5880   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":5860:5878   */\n  tag_170\n  tag_76\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":5824:5880   */\ntag_169:\n    /* \"#utility.yul\":5904:5942   */\n  tag_171\n    /* \"#utility.yul\":5936:5940   */\n  dup3\n    /* \"#utility.yul\":5930:5941   */\n  sload\n    /* \"#utility.yul\":5904:5942   */\n  tag_78\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":5989:6056   */\n  tag_172\n    /* \"#utility.yul\":6049:6055   */\n  dup3\n    /* \"#utility.yul\":6041:6047   */\n  dup3\n    /* \"#utility.yul\":6035:6039   */\n  dup6\n    /* \"#utility.yul\":5989:6056   */\n  tag_91\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":6083:6084   */\n  0x00\n    /* \"#utility.yul\":6107:6111   */\n  0x20\n    /* \"#utility.yul\":6094:6111   */\n  swap1\n  pop\n    /* \"#utility.yul\":6139:6141   */\n  0x1f\n    /* \"#utility.yul\":6131:6137   */\n  dup4\n    /* \"#utility.yul\":6128:6142   */\n  gt\n    /* \"#utility.yul\":6156:6157   */\n  0x01\n    /* \"#utility.yul\":6151:6769   */\n  dup2\n  eq\n  tag_174\n  jumpi\n    /* \"#utility.yul\":6813:6814   */\n  0x00\n    /* \"#utility.yul\":6830:6836   */\n  dup5\n    /* \"#utility.yul\":6827:6904   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":6879:6888   */\n  dup3\n    /* \"#utility.yul\":6874:6877   */\n  dup8\n    /* \"#utility.yul\":6870:6889   */\n  add\n    /* \"#utility.yul\":6864:6890   */\n  mload\n    /* \"#utility.yul\":6855:6890   */\n  swap1\n  pop\n    /* \"#utility.yul\":6827:6904   */\ntag_175:\n    /* \"#utility.yul\":6930:6997   */\n  tag_176\n    /* \"#utility.yul\":6990:6996   */\n  dup6\n    /* \"#utility.yul\":6983:6988   */\n  dup3\n    /* \"#utility.yul\":6930:6997   */\n  tag_94\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6924:6928   */\n  dup7\n    /* \"#utility.yul\":6917:6998   */\n  sstore\n    /* \"#utility.yul\":6786:7008   */\n  pop\n    /* \"#utility.yul\":6121:7008   */\n  jump(tag_173)\n    /* \"#utility.yul\":6151:6769   */\ntag_174:\n    /* \"#utility.yul\":6203:6207   */\n  0x1f\n    /* \"#utility.yul\":6199:6208   */\n  not\n    /* \"#utility.yul\":6191:6197   */\n  dup5\n    /* \"#utility.yul\":6187:6209   */\n  and\n    /* \"#utility.yul\":6237:6274   */\n  tag_177\n    /* \"#utility.yul\":6269:6273   */\n  dup7\n    /* \"#utility.yul\":6237:6274   */\n  tag_79\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6296:6297   */\n  0x00\n    /* \"#utility.yul\":6310:6518   */\ntag_178:\n    /* \"#utility.yul\":6324:6331   */\n  dup3\n    /* \"#utility.yul\":6321:6322   */\n  dup2\n    /* \"#utility.yul\":6318:6332   */\n  lt\n    /* \"#utility.yul\":6310:6518   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":6403:6412   */\n  dup5\n    /* \"#utility.yul\":6398:6401   */\n  dup10\n    /* \"#utility.yul\":6394:6413   */\n  add\n    /* \"#utility.yul\":6388:6414   */\n  mload\n    /* \"#utility.yul\":6380:6386   */\n  dup3\n    /* \"#utility.yul\":6373:6415   */\n  sstore\n    /* \"#utility.yul\":6454:6455   */\n  0x01\n    /* \"#utility.yul\":6446:6452   */\n  dup3\n    /* \"#utility.yul\":6442:6456   */\n  add\n    /* \"#utility.yul\":6432:6456   */\n  swap2\n  pop\n    /* \"#utility.yul\":6501:6503   */\n  0x20\n    /* \"#utility.yul\":6490:6499   */\n  dup6\n    /* \"#utility.yul\":6486:6504   */\n  add\n    /* \"#utility.yul\":6473:6504   */\n  swap5\n  pop\n    /* \"#utility.yul\":6347:6351   */\n  0x20\n    /* \"#utility.yul\":6344:6345   */\n  dup2\n    /* \"#utility.yul\":6340:6352   */\n  add\n    /* \"#utility.yul\":6335:6352   */\n  swap1\n  pop\n    /* \"#utility.yul\":6310:6518   */\n  jump(tag_178)\ntag_180:\n    /* \"#utility.yul\":6546:6552   */\n  dup7\n    /* \"#utility.yul\":6537:6544   */\n  dup4\n    /* \"#utility.yul\":6534:6553   */\n  lt\n    /* \"#utility.yul\":6531:6710   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":6604:6613   */\n  dup5\n    /* \"#utility.yul\":6599:6602   */\n  dup10\n    /* \"#utility.yul\":6595:6614   */\n  add\n    /* \"#utility.yul\":6589:6615   */\n  mload\n    /* \"#utility.yul\":6647:6695   */\n  tag_182\n    /* \"#utility.yul\":6689:6693   */\n  0x1f\n    /* \"#utility.yul\":6681:6687   */\n  dup10\n    /* \"#utility.yul\":6677:6694   */\n  and\n    /* \"#utility.yul\":6666:6675   */\n  dup3\n    /* \"#utility.yul\":6647:6695   */\n  tag_93\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":6639:6645   */\n  dup4\n    /* \"#utility.yul\":6632:6696   */\n  sstore\n    /* \"#utility.yul\":6554:6710   */\n  pop\n    /* \"#utility.yul\":6531:6710   */\ntag_181:\n    /* \"#utility.yul\":6756:6757   */\n  0x01\n    /* \"#utility.yul\":6752:6753   */\n  0x02\n    /* \"#utility.yul\":6744:6750   */\n  dup9\n    /* \"#utility.yul\":6740:6754   */\n  mul\n    /* \"#utility.yul\":6736:6758   */\n  add\n    /* \"#utility.yul\":6730:6734   */\n  dup9\n    /* \"#utility.yul\":6723:6759   */\n  sstore\n    /* \"#utility.yul\":6158:6769   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6121:7008   */\ntag_173:\n  pop\n    /* \"#utility.yul\":5711:7014   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5619:7014   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7020:7138   */\ntag_95:\n    /* \"#utility.yul\":7107:7131   */\n  tag_184\n    /* \"#utility.yul\":7125:7130   */\n  dup2\n    /* \"#utility.yul\":7107:7131   */\n  tag_72\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":7102:7105   */\n  dup3\n    /* \"#utility.yul\":7095:7132   */\n  mstore\n    /* \"#utility.yul\":7020:7138   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7144:7366   */\ntag_16:\n    /* \"#utility.yul\":7237:7241   */\n  0x00\n    /* \"#utility.yul\":7275:7277   */\n  0x20\n    /* \"#utility.yul\":7264:7273   */\n  dup3\n    /* \"#utility.yul\":7260:7278   */\n  add\n    /* \"#utility.yul\":7252:7278   */\n  swap1\n  pop\n    /* \"#utility.yul\":7288:7359   */\n  tag_186\n    /* \"#utility.yul\":7356:7357   */\n  0x00\n    /* \"#utility.yul\":7345:7354   */\n  dup4\n    /* \"#utility.yul\":7341:7358   */\n  add\n    /* \"#utility.yul\":7332:7338   */\n  dup5\n    /* \"#utility.yul\":7288:7359   */\n  tag_95\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7144:7366   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7372:7552   */\ntag_96:\n    /* \"#utility.yul\":7420:7497   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7417:7418   */\n  0x00\n    /* \"#utility.yul\":7410:7498   */\n  mstore\n    /* \"#utility.yul\":7517:7521   */\n  0x11\n    /* \"#utility.yul\":7514:7515   */\n  0x04\n    /* \"#utility.yul\":7507:7522   */\n  mstore\n    /* \"#utility.yul\":7541:7545   */\n  0x24\n    /* \"#utility.yul\":7538:7539   */\n  0x00\n    /* \"#utility.yul\":7531:7546   */\n  revert\n    /* \"#utility.yul\":7558:7749   */\ntag_46:\n    /* \"#utility.yul\":7598:7601   */\n  0x00\n    /* \"#utility.yul\":7617:7637   */\n  tag_189\n    /* \"#utility.yul\":7635:7636   */\n  dup3\n    /* \"#utility.yul\":7617:7637   */\n  tag_83\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":7612:7637   */\n  swap2\n  pop\n    /* \"#utility.yul\":7651:7671   */\n  tag_190\n    /* \"#utility.yul\":7669:7670   */\n  dup4\n    /* \"#utility.yul\":7651:7671   */\n  tag_83\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7646:7671   */\n  swap3\n  pop\n    /* \"#utility.yul\":7694:7695   */\n  dup3\n    /* \"#utility.yul\":7691:7692   */\n  dup3\n    /* \"#utility.yul\":7687:7696   */\n  add\n    /* \"#utility.yul\":7680:7696   */\n  swap1\n  pop\n    /* \"#utility.yul\":7715:7718   */\n  dup1\n    /* \"#utility.yul\":7712:7713   */\n  dup3\n    /* \"#utility.yul\":7709:7719   */\n  gt\n    /* \"#utility.yul\":7706:7742   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":7722:7740   */\n  tag_192\n  tag_96\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":7706:7742   */\ntag_191:\n    /* \"#utility.yul\":7558:7749   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7755:7873   */\ntag_97:\n    /* \"#utility.yul\":7842:7866   */\n  tag_194\n    /* \"#utility.yul\":7860:7865   */\n  dup2\n    /* \"#utility.yul\":7842:7866   */\n  tag_83\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":7837:7840   */\n  dup3\n    /* \"#utility.yul\":7830:7867   */\n  mstore\n    /* \"#utility.yul\":7755:7873   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7879:8321   */\ntag_50:\n    /* \"#utility.yul\":8028:8032   */\n  0x00\n    /* \"#utility.yul\":8066:8068   */\n  0x60\n    /* \"#utility.yul\":8055:8064   */\n  dup3\n    /* \"#utility.yul\":8051:8069   */\n  add\n    /* \"#utility.yul\":8043:8069   */\n  swap1\n  pop\n    /* \"#utility.yul\":8079:8150   */\n  tag_196\n    /* \"#utility.yul\":8147:8148   */\n  0x00\n    /* \"#utility.yul\":8136:8145   */\n  dup4\n    /* \"#utility.yul\":8132:8149   */\n  add\n    /* \"#utility.yul\":8123:8129   */\n  dup7\n    /* \"#utility.yul\":8079:8150   */\n  tag_95\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":8160:8232   */\n  tag_197\n    /* \"#utility.yul\":8228:8230   */\n  0x20\n    /* \"#utility.yul\":8217:8226   */\n  dup4\n    /* \"#utility.yul\":8213:8231   */\n  add\n    /* \"#utility.yul\":8204:8210   */\n  dup6\n    /* \"#utility.yul\":8160:8232   */\n  tag_97\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":8242:8314   */\n  tag_198\n    /* \"#utility.yul\":8310:8312   */\n  0x40\n    /* \"#utility.yul\":8299:8308   */\n  dup4\n    /* \"#utility.yul\":8295:8313   */\n  add\n    /* \"#utility.yul\":8286:8292   */\n  dup5\n    /* \"#utility.yul\":8242:8314   */\n  tag_97\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":7879:8321   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8327:8549   */\ntag_54:\n    /* \"#utility.yul\":8420:8424   */\n  0x00\n    /* \"#utility.yul\":8458:8460   */\n  0x20\n    /* \"#utility.yul\":8447:8456   */\n  dup3\n    /* \"#utility.yul\":8443:8461   */\n  add\n    /* \"#utility.yul\":8435:8461   */\n  swap1\n  pop\n    /* \"#utility.yul\":8471:8542   */\n  tag_200\n    /* \"#utility.yul\":8539:8540   */\n  0x00\n    /* \"#utility.yul\":8528:8537   */\n  dup4\n    /* \"#utility.yul\":8524:8541   */\n  add\n    /* \"#utility.yul\":8515:8521   */\n  dup5\n    /* \"#utility.yul\":8471:8542   */\n  tag_97\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":8327:8549   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \".deps/token.sol\":370:4732  contract LivingTheDream is ERC20, ERC20Burnable, Ownable, ReentrancyGuard, Pausable {... */\ntag_29:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/token.sol\":370:4732  contract LivingTheDream is ERC20, ERC20Burnable, Ownable, ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xe17c4c74\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xe17c4c74\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xe43252d7\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xeb1e7387\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_39\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0xa9059cbb\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xb3a88c1b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xc5f956af\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xcb4ca631\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x8456cb59\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8ab1d681\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x70a08231\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x72a8a933\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x40c10f19\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x5c975abb\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x60d1259e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x6605bfda\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6c95702b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x6f0b00ac\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x44337ea1\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x537df3b6\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x2ff2e9dc\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x32cb6b0c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3af32abf\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/token.sol\":527:588  uint256 public constant INITIAL_SUPPLY = 33333333333 * 10**18 */\n    tag_7:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/token.sol\":461:519  uint256 public constant MAX_SUPPLY = 333333333333 * 10**18 */\n    tag_9:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/token.sol\":748:793  mapping(address => bool) public isWhitelisted */\n    tag_10:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/token.sol\":2186:2253  function unpause() external onlyOwner {... */\n    tag_11:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      stop\n        /* \".deps/token.sol\":1886:1987  function mint(address user, uint256 amount) external onlyOwner {... */\n    tag_12:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_13:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n    tag_86:\n      stop\n        /* \".deps/token.sol\":2797:2905  function addToBlacklist(address account) external onlyOwner {... */\n    tag_14:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \".deps/token.sol\":2913:3027  function removeFromBlacklist(address account) external onlyOwner {... */\n    tag_15:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_16:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/token.sol\":3090:3202  function excludeFromTax(address account) external onlyOwner {... */\n    tag_17:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      stop\n        /* \".deps/token.sol\":4077:4215  function setTreasuryAddress(address payable newTreasuryAddress) external onlyOwner {... */\n    tag_18:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n    tag_102:\n      stop\n        /* \".deps/token.sol\":4589:4729  function approveForDEX(address dexAddress, uint256 amount) external onlyOwner {... */\n    tag_19:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      stop\n        /* \".deps/token.sol\":4223:4581  function adjustTaxes(uint256 newBuyTax, uint256 newSellTax) external onlyOwner {... */\n    tag_20:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      tag_112\n      jump\t// in\n    tag_109:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_21:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      stop\n        /* \".deps/token.sol\":671:739  uint256 public constant AIRDROP_WALLET_AMOUNT = 27777777777 * 10**18 */\n    tag_23:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_24:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      stop\n        /* \".deps/token.sol\":2065:2128  function pause() external onlyOwner {... */\n    tag_25:\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      stop\n        /* \".deps/token.sol\":2675:2789  function removeFromWhitelist(address account) external onlyOwner {... */\n    tag_26:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_27:\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_28:\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/token.sol\":2313:2504  function burn(address account, uint256 amount) public onlyOwner { // Agregar un argumento para la dirección... */\n    tag_29:\n      tag_137\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n    tag_137:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n      tag_140\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/token.sol\":595:664  uint256 public constant MARKETING_WALLET_AMOUNT = 5533333333 * 10**18 */\n    tag_31:\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/token.sol\":1091:1129  address payable public treasuryAddress */\n    tag_32:\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/token.sol\":852:901  mapping(address => bool) public isExcludedFromTax */\n    tag_33:\n      tag_151\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_34:\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      tag_158\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/token.sol\":3210:3321  function includeInTax(address account) external onlyOwner {... */\n    tag_35:\n      tag_160\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n    tag_160:\n      stop\n        /* \".deps/token.sol\":2559:2667  function addToWhitelist(address account) external onlyOwner {... */\n    tag_36:\n      tag_163\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_164:\n      tag_165\n      jump\t// in\n    tag_163:\n      stop\n        /* \".deps/token.sol\":991:1016  Taxes public currentTaxes */\n    tag_37:\n      tag_166\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      tag_168\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_38:\n      tag_170\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_171:\n      tag_172\n      jump\t// in\n    tag_170:\n      stop\n        /* \".deps/token.sol\":800:845  mapping(address => bool) public isBlacklisted */\n    tag_39:\n      tag_173\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_174:\n      tag_175\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_180\n      swap1\n      tag_179\n      jump\t// in\n    tag_180:\n      dup1\n      iszero\n      tag_181\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_182\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_181)\n    tag_182:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_183:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_183\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/token.sol\":527:588  uint256 public constant INITIAL_SUPPLY = 33333333333 * 10**18 */\n    tag_67:\n        /* \".deps/token.sol\":568:588  33333333333 * 10**18 */\n      0x6bb4afe4ca85cb07a8340000\n        /* \".deps/token.sol\":527:588  uint256 public constant INITIAL_SUPPLY = 33333333333 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \".deps/token.sol\":461:519  uint256 public constant MAX_SUPPLY = 333333333333 * 10**18 */\n    tag_74:\n        /* \".deps/token.sol\":498:519  333333333333 * 10**18 */\n      0x04350edef012dc126788340000\n        /* \".deps/token.sol\":461:519  uint256 public constant MAX_SUPPLY = 333333333333 * 10**18 */\n      dup2\n      jump\t// out\n        /* \".deps/token.sol\":748:793  mapping(address => bool) public isWhitelisted */\n    tag_79:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \".deps/token.sol\":2186:2253  function unpause() external onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_198:\n        /* \".deps/token.sol\":2235:2245  _unpause() */\n      tag_201\n        /* \".deps/token.sol\":2235:2243  _unpause */\n      tag_202\n        /* \".deps/token.sol\":2235:2245  _unpause() */\n      jump\t// in\n    tag_201:\n        /* \".deps/token.sol\":2186:2253  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \".deps/token.sol\":1886:1987  function mint(address user, uint256 amount) external onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_204:\n        /* \".deps/token.sol\":1960:1979  _mint(user, amount) */\n      tag_206\n        /* \".deps/token.sol\":1966:1970  user */\n      dup3\n        /* \".deps/token.sol\":1972:1978  amount */\n      dup3\n        /* \".deps/token.sol\":1960:1965  _mint */\n      tag_207\n        /* \".deps/token.sol\":1960:1979  _mint(user, amount) */\n      jump\t// in\n    tag_206:\n        /* \".deps/token.sol\":1886:1987  function mint(address user, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \".deps/token.sol\":2797:2905  function addToBlacklist(address account) external onlyOwner {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_213:\n        /* \".deps/token.sol\":2893:2897  true */\n      0x01\n        /* \".deps/token.sol\":2868:2881  isBlacklisted */\n      0x09\n        /* \".deps/token.sol\":2868:2890  isBlacklisted[account] */\n      0x00\n        /* \".deps/token.sol\":2882:2889  account */\n      dup4\n        /* \".deps/token.sol\":2868:2890  isBlacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/token.sol\":2868:2897  isBlacklisted[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/token.sol\":2797:2905  function addToBlacklist(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \".deps/token.sol\":2913:3027  function removeFromBlacklist(address account) external onlyOwner {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_216:\n        /* \".deps/token.sol\":3014:3019  false */\n      0x00\n        /* \".deps/token.sol\":2989:3002  isBlacklisted */\n      0x09\n        /* \".deps/token.sol\":2989:3011  isBlacklisted[account] */\n      0x00\n        /* \".deps/token.sol\":3003:3010  account */\n      dup4\n        /* \".deps/token.sol\":2989:3011  isBlacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/token.sol\":2989:3019  isBlacklisted[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/token.sol\":2913:3027  function removeFromBlacklist(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \".deps/token.sol\":3090:3202  function excludeFromTax(address account) external onlyOwner {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_220:\n        /* \".deps/token.sol\":3190:3194  true */\n      0x01\n        /* \".deps/token.sol\":3161:3178  isExcludedFromTax */\n      0x0a\n        /* \".deps/token.sol\":3161:3187  isExcludedFromTax[account] */\n      0x00\n        /* \".deps/token.sol\":3179:3186  account */\n      dup4\n        /* \".deps/token.sol\":3161:3187  isExcludedFromTax[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/token.sol\":3161:3194  isExcludedFromTax[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/token.sol\":3090:3202  function excludeFromTax(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \".deps/token.sol\":4077:4215  function setTreasuryAddress(address payable newTreasuryAddress) external onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_223\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_223:\n        /* \".deps/token.sol\":4189:4207  newTreasuryAddress */\n      dup1\n        /* \".deps/token.sol\":4171:4186  treasuryAddress */\n      0x0d\n      0x00\n        /* \".deps/token.sol\":4171:4207  treasuryAddress = newTreasuryAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/token.sol\":4077:4215  function setTreasuryAddress(address payable newTreasuryAddress) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \".deps/token.sol\":4589:4729  function approveForDEX(address dexAddress, uint256 amount) external onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_226:\n        /* \".deps/token.sol\":4678:4721  _approve(address(this), dexAddress, amount) */\n      tag_228\n        /* \".deps/token.sol\":4695:4699  this */\n      address\n        /* \".deps/token.sol\":4702:4712  dexAddress */\n      dup4\n        /* \".deps/token.sol\":4714:4720  amount */\n      dup4\n        /* \".deps/token.sol\":4678:4686  _approve */\n      tag_188\n        /* \".deps/token.sol\":4678:4721  _approve(address(this), dexAddress, amount) */\n      jump\t// in\n    tag_228:\n        /* \".deps/token.sol\":4589:4729  function approveForDEX(address dexAddress, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/token.sol\":4223:4581  function adjustTaxes(uint256 newBuyTax, uint256 newSellTax) external onlyOwner {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_230:\n        /* \".deps/token.sol\":4334:4337  100 */\n      0x64\n        /* \".deps/token.sol\":4321:4330  newBuyTax */\n      dup3\n        /* \".deps/token.sol\":4321:4337  newBuyTax <= 100 */\n      gt\n      iszero\n        /* \".deps/token.sol\":4313:4368  require(newBuyTax <= 100, \"Buy tax cannot exceed 100%\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \".deps/token.sol\":4401:4404  100 */\n      0x64\n        /* \".deps/token.sol\":4387:4397  newSellTax */\n      dup2\n        /* \".deps/token.sol\":4387:4404  newSellTax <= 100 */\n      gt\n      iszero\n        /* \".deps/token.sol\":4379:4436  require(newSellTax <= 100, \"Sell tax cannot exceed 100%\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \".deps/token.sol\":4469:4478  newBuyTax */\n      dup2\n        /* \".deps/token.sol\":4447:4459  currentTaxes */\n      0x0b\n        /* \".deps/token.sol\":4447:4466  currentTaxes.buyTax */\n      0x00\n      add\n        /* \".deps/token.sol\":4447:4478  currentTaxes.buyTax = newBuyTax */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/token.sol\":4512:4522  newSellTax */\n      dup1\n        /* \".deps/token.sol\":4489:4501  currentTaxes */\n      0x0b\n        /* \".deps/token.sol\":4489:4509  currentTaxes.sellTax */\n      0x01\n      add\n        /* \".deps/token.sol\":4489:4522  currentTaxes.sellTax = newSellTax */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/token.sol\":4538:4573  TaxesChanged(newBuyTax, newSellTax) */\n      0x5eee0b95930ee59011f34615b0b7dc6cc58c01d1f07d04a01a3a1e70d2554cf0\n        /* \".deps/token.sol\":4551:4560  newBuyTax */\n      dup3\n        /* \".deps/token.sol\":4562:4572  newSellTax */\n      dup3\n        /* \".deps/token.sol\":4538:4573  TaxesChanged(newBuyTax, newSellTax) */\n      mload(0x40)\n      tag_238\n      swap3\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \".deps/token.sol\":4223:4581  function adjustTaxes(uint256 newBuyTax, uint256 newSellTax) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_241\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_244\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \".deps/token.sol\":671:739  uint256 public constant AIRDROP_WALLET_AMOUNT = 27777777777 * 10**18 */\n    tag_120:\n        /* \".deps/token.sol\":719:739  27777777777 * 10**18 */\n      0x59c13d3ea1d47881e3240000\n        /* \".deps/token.sol\":671:739  uint256 public constant AIRDROP_WALLET_AMOUNT = 27777777777 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/token.sol\":2065:2128  function pause() external onlyOwner {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_250\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_250:\n        /* \".deps/token.sol\":2112:2120  _pause() */\n      tag_252\n        /* \".deps/token.sol\":2112:2118  _pause */\n      tag_253\n        /* \".deps/token.sol\":2112:2120  _pause() */\n      jump\t// in\n    tag_252:\n        /* \".deps/token.sol\":2065:2128  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \".deps/token.sol\":2675:2789  function removeFromWhitelist(address account) external onlyOwner {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_255:\n        /* \".deps/token.sol\":2776:2781  false */\n      0x00\n        /* \".deps/token.sol\":2751:2764  isWhitelisted */\n      0x08\n        /* \".deps/token.sol\":2751:2773  isWhitelisted[account] */\n      0x00\n        /* \".deps/token.sol\":2765:2772  account */\n      dup4\n        /* \".deps/token.sol\":2751:2773  isWhitelisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/token.sol\":2751:2781  isWhitelisted[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/token.sol\":2675:2789  function removeFromWhitelist(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_259\n      swap1\n      tag_179\n      jump\t// in\n    tag_259:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_260\n      swap1\n      tag_179\n      jump\t// in\n    tag_260:\n      dup1\n      iszero\n      tag_261\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_262\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_261)\n    tag_262:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_263:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_263\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_261:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/token.sol\":2313:2504  function burn(address account, uint256 amount) public onlyOwner { // Agregar un argumento para la dirección... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_265\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_265:\n        /* \".deps/token.sol\":2431:2453  _burn(account, amount) */\n      tag_267\n        /* \".deps/token.sol\":2437:2444  account */\n      dup3\n        /* \".deps/token.sol\":2446:2452  amount */\n      dup3\n        /* \".deps/token.sol\":2431:2436  _burn */\n      tag_211\n        /* \".deps/token.sol\":2431:2453  _burn(account, amount) */\n      jump\t// in\n    tag_267:\n        /* \".deps/token.sol\":2313:2504  function burn(address account, uint256 amount) public onlyOwner { // Agregar un argumento para la dirección... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/token.sol\":595:664  uint256 public constant MARKETING_WALLET_AMOUNT = 5533333333 * 10**18 */\n    tag_145:\n        /* \".deps/token.sol\":645:664  5533333333 * 10**18 */\n      0x11e110e90947de0410340000\n        /* \".deps/token.sol\":595:664  uint256 public constant MARKETING_WALLET_AMOUNT = 5533333333 * 10**18 */\n      dup2\n      jump\t// out\n        /* \".deps/token.sol\":1091:1129  address payable public treasuryAddress */\n    tag_148:\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \".deps/token.sol\":852:901  mapping(address => bool) public isExcludedFromTax */\n    tag_153:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/token.sol\":3210:3321  function includeInTax(address account) external onlyOwner {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_273\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_273:\n        /* \".deps/token.sol\":3308:3313  false */\n      0x00\n        /* \".deps/token.sol\":3279:3296  isExcludedFromTax */\n      0x0a\n        /* \".deps/token.sol\":3279:3305  isExcludedFromTax[account] */\n      0x00\n        /* \".deps/token.sol\":3297:3304  account */\n      dup4\n        /* \".deps/token.sol\":3279:3305  isExcludedFromTax[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/token.sol\":3279:3313  isExcludedFromTax[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/token.sol\":3210:3321  function includeInTax(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \".deps/token.sol\":2559:2667  function addToWhitelist(address account) external onlyOwner {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_276\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_276:\n        /* \".deps/token.sol\":2655:2659  true */\n      0x01\n        /* \".deps/token.sol\":2630:2643  isWhitelisted */\n      0x08\n        /* \".deps/token.sol\":2630:2652  isWhitelisted[account] */\n      0x00\n        /* \".deps/token.sol\":2644:2651  account */\n      dup4\n        /* \".deps/token.sol\":2630:2652  isWhitelisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/token.sol\":2630:2659  isWhitelisted[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/token.sol\":2559:2667  function addToWhitelist(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \".deps/token.sol\":991:1016  Taxes public currentTaxes */\n    tag_167:\n      0x0b\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_279\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_283\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_244\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \".deps/token.sol\":800:845  mapping(address => bool) public isBlacklisted */\n    tag_175:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_286\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_287\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_293\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_294\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_287\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_300\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_303\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_304\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_306\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_307\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_309\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_310\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2778:2783  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x07\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      tag_312\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2817  _msgSender */\n      tag_186\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_313\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_315\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_316\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_317\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_321\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_324\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_325\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x07\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_327\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2568  _msgSender */\n      tag_186\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      mload(0x40)\n      tag_328\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_334\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_335\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_335:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_338\n      swap2\n      swap1\n      tag_339\n      jump\t// in\n    tag_338:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_340)\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_342\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_293\n      jump\t// in\n    tag_342:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_344)\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_345\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_345:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      tag_347\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2271  paused */\n      tag_97\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_348\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n    tag_348:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      tag_350\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n      tag_97\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      jump\t// in\n    tag_350:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_352:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_353:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_354:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_387:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_387)\n    tag_389:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_355:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_356:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_392\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_352\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":818:889   */\n      tag_393\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_353\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_394\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_354\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":988:1017   */\n      tag_395\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_355\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_50:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_397\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_356\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_358:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_360:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_361:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_403\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_360\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_362:\n        /* \"#utility.yul\":1983:2007   */\n      tag_405\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_361\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_406:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_363:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_408\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_362\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_364:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_365:\n        /* \"#utility.yul\":2339:2363   */\n      tag_411\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_364\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_412\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_412:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_366:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_414\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_365\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_53:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_417\n      tag_358\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":2632:2751   */\n    tag_416:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_418\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_363\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_419\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_366\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_367:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_368:\n        /* \"#utility.yul\":3196:3217   */\n      tag_422\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_367\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_56:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_424\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_368\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_369:\n        /* \"#utility.yul\":3533:3557   */\n      tag_426\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_364\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_60:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_428\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_369\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_63:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_431\n      tag_358\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":3908:4027   */\n    tag_430:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_432\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_363\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_433\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_363\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_434\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_366\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_370:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_371:\n        /* \"#utility.yul\":4598:4620   */\n      tag_437\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_370\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_72:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_439\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_371\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_78:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_442\n      tag_358\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4929:5048   */\n    tag_441:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_443\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_363\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_88:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_446\n      tag_358\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":5264:5383   */\n    tag_445:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_447\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_366\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5627   */\n    tag_372:\n        /* \"#utility.yul\":5568:5575   */\n      0x00\n        /* \"#utility.yul\":5597:5621   */\n      tag_449\n        /* \"#utility.yul\":5615:5620   */\n      dup3\n        /* \"#utility.yul\":5597:5621   */\n      tag_360\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":5586:5621   */\n      swap1\n      pop\n        /* \"#utility.yul\":5523:5627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5633:5771   */\n    tag_373:\n        /* \"#utility.yul\":5714:5746   */\n      tag_451\n        /* \"#utility.yul\":5740:5745   */\n      dup2\n        /* \"#utility.yul\":5714:5746   */\n      tag_372\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":5707:5712   */\n      dup2\n        /* \"#utility.yul\":5704:5747   */\n      eq\n        /* \"#utility.yul\":5694:5765   */\n      tag_452\n      jumpi\n        /* \"#utility.yul\":5761:5762   */\n      0x00\n        /* \"#utility.yul\":5758:5759   */\n      dup1\n        /* \"#utility.yul\":5751:5763   */\n      revert\n        /* \"#utility.yul\":5694:5765   */\n    tag_452:\n        /* \"#utility.yul\":5633:5771   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5777:5932   */\n    tag_374:\n        /* \"#utility.yul\":5831:5836   */\n      0x00\n        /* \"#utility.yul\":5869:5875   */\n      dup2\n        /* \"#utility.yul\":5856:5876   */\n      calldataload\n        /* \"#utility.yul\":5847:5876   */\n      swap1\n      pop\n        /* \"#utility.yul\":5885:5926   */\n      tag_454\n        /* \"#utility.yul\":5920:5925   */\n      dup2\n        /* \"#utility.yul\":5885:5926   */\n      tag_373\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":5777:5932   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5938:6283   */\n    tag_104:\n        /* \"#utility.yul\":6005:6011   */\n      0x00\n        /* \"#utility.yul\":6054:6056   */\n      0x20\n        /* \"#utility.yul\":6042:6051   */\n      dup3\n        /* \"#utility.yul\":6033:6040   */\n      dup5\n        /* \"#utility.yul\":6029:6052   */\n      sub\n        /* \"#utility.yul\":6025:6057   */\n      slt\n        /* \"#utility.yul\":6022:6141   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":6060:6139   */\n      tag_457\n      tag_358\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6022:6141   */\n    tag_456:\n        /* \"#utility.yul\":6180:6181   */\n      0x00\n        /* \"#utility.yul\":6205:6266   */\n      tag_458\n        /* \"#utility.yul\":6258:6265   */\n      dup5\n        /* \"#utility.yul\":6249:6255   */\n      dup3\n        /* \"#utility.yul\":6238:6247   */\n      dup6\n        /* \"#utility.yul\":6234:6256   */\n      add\n        /* \"#utility.yul\":6205:6266   */\n      tag_374\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":6195:6266   */\n      swap2\n      pop\n        /* \"#utility.yul\":6151:6276   */\n      pop\n        /* \"#utility.yul\":5938:6283   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6289:6763   */\n    tag_111:\n        /* \"#utility.yul\":6357:6363   */\n      0x00\n        /* \"#utility.yul\":6365:6371   */\n      dup1\n        /* \"#utility.yul\":6414:6416   */\n      0x40\n        /* \"#utility.yul\":6402:6411   */\n      dup4\n        /* \"#utility.yul\":6393:6400   */\n      dup6\n        /* \"#utility.yul\":6389:6412   */\n      sub\n        /* \"#utility.yul\":6385:6417   */\n      slt\n        /* \"#utility.yul\":6382:6501   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":6420:6499   */\n      tag_461\n      tag_358\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":6382:6501   */\n    tag_460:\n        /* \"#utility.yul\":6540:6541   */\n      0x00\n        /* \"#utility.yul\":6565:6618   */\n      tag_462\n        /* \"#utility.yul\":6610:6617   */\n      dup6\n        /* \"#utility.yul\":6601:6607   */\n      dup3\n        /* \"#utility.yul\":6590:6599   */\n      dup7\n        /* \"#utility.yul\":6586:6608   */\n      add\n        /* \"#utility.yul\":6565:6618   */\n      tag_366\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":6555:6618   */\n      swap3\n      pop\n        /* \"#utility.yul\":6511:6628   */\n      pop\n        /* \"#utility.yul\":6667:6669   */\n      0x20\n        /* \"#utility.yul\":6693:6746   */\n      tag_463\n        /* \"#utility.yul\":6738:6745   */\n      dup6\n        /* \"#utility.yul\":6729:6735   */\n      dup3\n        /* \"#utility.yul\":6718:6727   */\n      dup7\n        /* \"#utility.yul\":6714:6736   */\n      add\n        /* \"#utility.yul\":6693:6746   */\n      tag_366\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":6683:6746   */\n      swap2\n      pop\n        /* \"#utility.yul\":6638:6756   */\n      pop\n        /* \"#utility.yul\":6289:6763   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6769:6887   */\n    tag_375:\n        /* \"#utility.yul\":6856:6880   */\n      tag_465\n        /* \"#utility.yul\":6874:6879   */\n      dup2\n        /* \"#utility.yul\":6856:6880   */\n      tag_361\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":6851:6854   */\n      dup3\n        /* \"#utility.yul\":6844:6881   */\n      mstore\n        /* \"#utility.yul\":6769:6887   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6893:7115   */\n    tag_133:\n        /* \"#utility.yul\":6986:6990   */\n      0x00\n        /* \"#utility.yul\":7024:7026   */\n      0x20\n        /* \"#utility.yul\":7013:7022   */\n      dup3\n        /* \"#utility.yul\":7009:7027   */\n      add\n        /* \"#utility.yul\":7001:7027   */\n      swap1\n      pop\n        /* \"#utility.yul\":7037:7108   */\n      tag_467\n        /* \"#utility.yul\":7105:7106   */\n      0x00\n        /* \"#utility.yul\":7094:7103   */\n      dup4\n        /* \"#utility.yul\":7090:7107   */\n      add\n        /* \"#utility.yul\":7081:7087   */\n      dup5\n        /* \"#utility.yul\":7037:7108   */\n      tag_375\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":6893:7115   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7121:7263   */\n    tag_376:\n        /* \"#utility.yul\":7224:7256   */\n      tag_469\n        /* \"#utility.yul\":7250:7255   */\n      dup2\n        /* \"#utility.yul\":7224:7256   */\n      tag_372\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":7219:7222   */\n      dup3\n        /* \"#utility.yul\":7212:7257   */\n      mstore\n        /* \"#utility.yul\":7121:7263   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7269:7523   */\n    tag_150:\n        /* \"#utility.yul\":7378:7382   */\n      0x00\n        /* \"#utility.yul\":7416:7418   */\n      0x20\n        /* \"#utility.yul\":7405:7414   */\n      dup3\n        /* \"#utility.yul\":7401:7419   */\n      add\n        /* \"#utility.yul\":7393:7419   */\n      swap1\n      pop\n        /* \"#utility.yul\":7429:7516   */\n      tag_471\n        /* \"#utility.yul\":7513:7514   */\n      0x00\n        /* \"#utility.yul\":7502:7511   */\n      dup4\n        /* \"#utility.yul\":7498:7515   */\n      add\n        /* \"#utility.yul\":7489:7495   */\n      dup5\n        /* \"#utility.yul\":7429:7516   */\n      tag_376\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":7269:7523   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7529:8003   */\n    tag_157:\n        /* \"#utility.yul\":7597:7603   */\n      0x00\n        /* \"#utility.yul\":7605:7611   */\n      dup1\n        /* \"#utility.yul\":7654:7656   */\n      0x40\n        /* \"#utility.yul\":7642:7651   */\n      dup4\n        /* \"#utility.yul\":7633:7640   */\n      dup6\n        /* \"#utility.yul\":7629:7652   */\n      sub\n        /* \"#utility.yul\":7625:7657   */\n      slt\n        /* \"#utility.yul\":7622:7741   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":7660:7739   */\n      tag_474\n      tag_358\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":7622:7741   */\n    tag_473:\n        /* \"#utility.yul\":7780:7781   */\n      0x00\n        /* \"#utility.yul\":7805:7858   */\n      tag_475\n        /* \"#utility.yul\":7850:7857   */\n      dup6\n        /* \"#utility.yul\":7841:7847   */\n      dup3\n        /* \"#utility.yul\":7830:7839   */\n      dup7\n        /* \"#utility.yul\":7826:7848   */\n      add\n        /* \"#utility.yul\":7805:7858   */\n      tag_363\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7795:7858   */\n      swap3\n      pop\n        /* \"#utility.yul\":7751:7868   */\n      pop\n        /* \"#utility.yul\":7907:7909   */\n      0x20\n        /* \"#utility.yul\":7933:7986   */\n      tag_476\n        /* \"#utility.yul\":7978:7985   */\n      dup6\n        /* \"#utility.yul\":7969:7975   */\n      dup3\n        /* \"#utility.yul\":7958:7967   */\n      dup7\n        /* \"#utility.yul\":7954:7976   */\n      add\n        /* \"#utility.yul\":7933:7986   */\n      tag_363\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":7923:7986   */\n      swap2\n      pop\n        /* \"#utility.yul\":7878:7996   */\n      pop\n        /* \"#utility.yul\":7529:8003   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8009:8341   */\n    tag_169:\n        /* \"#utility.yul\":8130:8134   */\n      0x00\n        /* \"#utility.yul\":8168:8170   */\n      0x40\n        /* \"#utility.yul\":8157:8166   */\n      dup3\n        /* \"#utility.yul\":8153:8171   */\n      add\n        /* \"#utility.yul\":8145:8171   */\n      swap1\n      pop\n        /* \"#utility.yul\":8181:8252   */\n      tag_478\n        /* \"#utility.yul\":8249:8250   */\n      0x00\n        /* \"#utility.yul\":8238:8247   */\n      dup4\n        /* \"#utility.yul\":8234:8251   */\n      add\n        /* \"#utility.yul\":8225:8231   */\n      dup6\n        /* \"#utility.yul\":8181:8252   */\n      tag_369\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":8262:8334   */\n      tag_479\n        /* \"#utility.yul\":8330:8332   */\n      0x20\n        /* \"#utility.yul\":8319:8328   */\n      dup4\n        /* \"#utility.yul\":8315:8333   */\n      add\n        /* \"#utility.yul\":8306:8312   */\n      dup5\n        /* \"#utility.yul\":8262:8334   */\n      tag_369\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":8009:8341   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8347:8527   */\n    tag_377:\n        /* \"#utility.yul\":8395:8472   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8392:8393   */\n      0x00\n        /* \"#utility.yul\":8385:8473   */\n      mstore\n        /* \"#utility.yul\":8492:8496   */\n      0x22\n        /* \"#utility.yul\":8489:8490   */\n      0x04\n        /* \"#utility.yul\":8482:8497   */\n      mstore\n        /* \"#utility.yul\":8516:8520   */\n      0x24\n        /* \"#utility.yul\":8513:8514   */\n      0x00\n        /* \"#utility.yul\":8506:8521   */\n      revert\n        /* \"#utility.yul\":8533:8853   */\n    tag_179:\n        /* \"#utility.yul\":8577:8583   */\n      0x00\n        /* \"#utility.yul\":8614:8615   */\n      0x02\n        /* \"#utility.yul\":8608:8612   */\n      dup3\n        /* \"#utility.yul\":8604:8616   */\n      div\n        /* \"#utility.yul\":8594:8616   */\n      swap1\n      pop\n        /* \"#utility.yul\":8661:8662   */\n      0x01\n        /* \"#utility.yul\":8655:8659   */\n      dup3\n        /* \"#utility.yul\":8651:8663   */\n      and\n        /* \"#utility.yul\":8682:8700   */\n      dup1\n        /* \"#utility.yul\":8672:8753   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":8738:8742   */\n      0x7f\n        /* \"#utility.yul\":8730:8736   */\n      dup3\n        /* \"#utility.yul\":8726:8743   */\n      and\n        /* \"#utility.yul\":8716:8743   */\n      swap2\n      pop\n        /* \"#utility.yul\":8672:8753   */\n    tag_482:\n        /* \"#utility.yul\":8800:8802   */\n      0x20\n        /* \"#utility.yul\":8792:8798   */\n      dup3\n        /* \"#utility.yul\":8789:8803   */\n      lt\n        /* \"#utility.yul\":8769:8787   */\n      dup2\n        /* \"#utility.yul\":8766:8804   */\n      sub\n        /* \"#utility.yul\":8763:8847   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":8819:8837   */\n      tag_484\n      tag_377\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":8763:8847   */\n    tag_483:\n        /* \"#utility.yul\":8584:8853   */\n      pop\n        /* \"#utility.yul\":8533:8853   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8859:9035   */\n    tag_378:\n        /* \"#utility.yul\":8999:9027   */\n      0x427579207461782063616e6e6f74206578636565642031303025000000000000\n        /* \"#utility.yul\":8995:8996   */\n      0x00\n        /* \"#utility.yul\":8987:8993   */\n      dup3\n        /* \"#utility.yul\":8983:8997   */\n      add\n        /* \"#utility.yul\":8976:9028   */\n      mstore\n        /* \"#utility.yul\":8859:9035   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9041:9407   */\n    tag_379:\n        /* \"#utility.yul\":9183:9186   */\n      0x00\n        /* \"#utility.yul\":9204:9271   */\n      tag_487\n        /* \"#utility.yul\":9268:9270   */\n      0x1a\n        /* \"#utility.yul\":9263:9266   */\n      dup4\n        /* \"#utility.yul\":9204:9271   */\n      tag_353\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":9197:9271   */\n      swap2\n      pop\n        /* \"#utility.yul\":9280:9373   */\n      tag_488\n        /* \"#utility.yul\":9369:9372   */\n      dup3\n        /* \"#utility.yul\":9280:9373   */\n      tag_378\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":9398:9400   */\n      0x20\n        /* \"#utility.yul\":9393:9396   */\n      dup3\n        /* \"#utility.yul\":9389:9401   */\n      add\n        /* \"#utility.yul\":9382:9401   */\n      swap1\n      pop\n        /* \"#utility.yul\":9041:9407   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9413:9832   */\n    tag_234:\n        /* \"#utility.yul\":9579:9583   */\n      0x00\n        /* \"#utility.yul\":9617:9619   */\n      0x20\n        /* \"#utility.yul\":9606:9615   */\n      dup3\n        /* \"#utility.yul\":9602:9620   */\n      add\n        /* \"#utility.yul\":9594:9620   */\n      swap1\n      pop\n        /* \"#utility.yul\":9666:9675   */\n      dup2\n        /* \"#utility.yul\":9660:9664   */\n      dup2\n        /* \"#utility.yul\":9656:9676   */\n      sub\n        /* \"#utility.yul\":9652:9653   */\n      0x00\n        /* \"#utility.yul\":9641:9650   */\n      dup4\n        /* \"#utility.yul\":9637:9654   */\n      add\n        /* \"#utility.yul\":9630:9677   */\n      mstore\n        /* \"#utility.yul\":9694:9825   */\n      tag_490\n        /* \"#utility.yul\":9820:9824   */\n      dup2\n        /* \"#utility.yul\":9694:9825   */\n      tag_379\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":9686:9825   */\n      swap1\n      pop\n        /* \"#utility.yul\":9413:9832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9838:10015   */\n    tag_380:\n        /* \"#utility.yul\":9978:10007   */\n      0x53656c6c207461782063616e6e6f742065786365656420313030250000000000\n        /* \"#utility.yul\":9974:9975   */\n      0x00\n        /* \"#utility.yul\":9966:9972   */\n      dup3\n        /* \"#utility.yul\":9962:9976   */\n      add\n        /* \"#utility.yul\":9955:10008   */\n      mstore\n        /* \"#utility.yul\":9838:10015   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10021:10387   */\n    tag_381:\n        /* \"#utility.yul\":10163:10166   */\n      0x00\n        /* \"#utility.yul\":10184:10251   */\n      tag_493\n        /* \"#utility.yul\":10248:10250   */\n      0x1b\n        /* \"#utility.yul\":10243:10246   */\n      dup4\n        /* \"#utility.yul\":10184:10251   */\n      tag_353\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":10177:10251   */\n      swap2\n      pop\n        /* \"#utility.yul\":10260:10353   */\n      tag_494\n        /* \"#utility.yul\":10349:10352   */\n      dup3\n        /* \"#utility.yul\":10260:10353   */\n      tag_380\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":10378:10380   */\n      0x20\n        /* \"#utility.yul\":10373:10376   */\n      dup3\n        /* \"#utility.yul\":10369:10381   */\n      add\n        /* \"#utility.yul\":10362:10381   */\n      swap1\n      pop\n        /* \"#utility.yul\":10021:10387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10393:10812   */\n    tag_237:\n        /* \"#utility.yul\":10559:10563   */\n      0x00\n        /* \"#utility.yul\":10597:10599   */\n      0x20\n        /* \"#utility.yul\":10586:10595   */\n      dup3\n        /* \"#utility.yul\":10582:10600   */\n      add\n        /* \"#utility.yul\":10574:10600   */\n      swap1\n      pop\n        /* \"#utility.yul\":10646:10655   */\n      dup2\n        /* \"#utility.yul\":10640:10644   */\n      dup2\n        /* \"#utility.yul\":10636:10656   */\n      sub\n        /* \"#utility.yul\":10632:10633   */\n      0x00\n        /* \"#utility.yul\":10621:10630   */\n      dup4\n        /* \"#utility.yul\":10617:10634   */\n      add\n        /* \"#utility.yul\":10610:10657   */\n      mstore\n        /* \"#utility.yul\":10674:10805   */\n      tag_496\n        /* \"#utility.yul\":10800:10804   */\n      dup2\n        /* \"#utility.yul\":10674:10805   */\n      tag_381\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":10666:10805   */\n      swap1\n      pop\n        /* \"#utility.yul\":10393:10812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10818:11260   */\n    tag_293:\n        /* \"#utility.yul\":10967:10971   */\n      0x00\n        /* \"#utility.yul\":11005:11007   */\n      0x60\n        /* \"#utility.yul\":10994:11003   */\n      dup3\n        /* \"#utility.yul\":10990:11008   */\n      add\n        /* \"#utility.yul\":10982:11008   */\n      swap1\n      pop\n        /* \"#utility.yul\":11018:11089   */\n      tag_498\n        /* \"#utility.yul\":11086:11087   */\n      0x00\n        /* \"#utility.yul\":11075:11084   */\n      dup4\n        /* \"#utility.yul\":11071:11088   */\n      add\n        /* \"#utility.yul\":11062:11068   */\n      dup7\n        /* \"#utility.yul\":11018:11089   */\n      tag_375\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":11099:11171   */\n      tag_499\n        /* \"#utility.yul\":11167:11169   */\n      0x20\n        /* \"#utility.yul\":11156:11165   */\n      dup4\n        /* \"#utility.yul\":11152:11170   */\n      add\n        /* \"#utility.yul\":11143:11149   */\n      dup6\n        /* \"#utility.yul\":11099:11171   */\n      tag_369\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":11181:11253   */\n      tag_500\n        /* \"#utility.yul\":11249:11251   */\n      0x40\n        /* \"#utility.yul\":11238:11247   */\n      dup4\n        /* \"#utility.yul\":11234:11252   */\n      add\n        /* \"#utility.yul\":11225:11231   */\n      dup5\n        /* \"#utility.yul\":11181:11253   */\n      tag_369\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":10818:11260   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11266:11446   */\n    tag_382:\n        /* \"#utility.yul\":11314:11391   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11311:11312   */\n      0x00\n        /* \"#utility.yul\":11304:11392   */\n      mstore\n        /* \"#utility.yul\":11411:11415   */\n      0x11\n        /* \"#utility.yul\":11408:11409   */\n      0x04\n        /* \"#utility.yul\":11401:11416   */\n      mstore\n        /* \"#utility.yul\":11435:11439   */\n      0x24\n        /* \"#utility.yul\":11432:11433   */\n      0x00\n        /* \"#utility.yul\":11425:11440   */\n      revert\n        /* \"#utility.yul\":11452:11643   */\n    tag_339:\n        /* \"#utility.yul\":11492:11495   */\n      0x00\n        /* \"#utility.yul\":11511:11531   */\n      tag_503\n        /* \"#utility.yul\":11529:11530   */\n      dup3\n        /* \"#utility.yul\":11511:11531   */\n      tag_364\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":11506:11531   */\n      swap2\n      pop\n        /* \"#utility.yul\":11545:11565   */\n      tag_504\n        /* \"#utility.yul\":11563:11564   */\n      dup4\n        /* \"#utility.yul\":11545:11565   */\n      tag_364\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":11540:11565   */\n      swap3\n      pop\n        /* \"#utility.yul\":11588:11589   */\n      dup3\n        /* \"#utility.yul\":11585:11586   */\n      dup3\n        /* \"#utility.yul\":11581:11590   */\n      add\n        /* \"#utility.yul\":11574:11590   */\n      swap1\n      pop\n        /* \"#utility.yul\":11609:11612   */\n      dup1\n        /* \"#utility.yul\":11606:11607   */\n      dup3\n        /* \"#utility.yul\":11603:11613   */\n      gt\n        /* \"#utility.yul\":11600:11636   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":11616:11634   */\n      tag_506\n      tag_382\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":11600:11636   */\n    tag_505:\n        /* \"#utility.yul\":11452:11643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201530a0bc90fcc78f134184eac346c454e24edcff8d0b8172e19f25714da28bfb64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_1478": {
									"entryPoint": null,
									"id": 1478,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_450": {
									"entryPoint": null,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_703": {
									"entryPoint": null,
									"id": 703,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_801": {
									"entryPoint": null,
									"id": 801,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_484": {
									"entryPoint": 1694,
									"id": 484,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1104": {
									"entryPoint": 857,
									"id": 1104,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1426": {
									"entryPoint": 1856,
									"id": 1426,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_546": {
									"entryPoint": 662,
									"id": 546,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1071": {
									"entryPoint": 1146,
									"id": 1071,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@owner_467": {
									"entryPoint": 1863,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_526": {
									"entryPoint": 995,
									"id": 526,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 1982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_address_fromMemory": {
									"entryPoint": 2070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3143,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2600,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 1938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3023,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2149,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2336,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2487,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 1957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2530,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8552:10",
										"nodeType": "YulBlock",
										"src": "0:8552:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "519:51:10",
													"nodeType": "YulBlock",
													"src": "519:51:10",
													"statements": [
														{
															"nativeSrc": "529:35:10",
															"nodeType": "YulAssignment",
															"src": "529:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "558:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "558:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "540:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "540:17:10"
																},
																"nativeSrc": "540:24:10",
																"nodeType": "YulFunctionCall",
																"src": "540:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "529:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "529:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "466:104:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "501:5:10",
														"nodeType": "YulTypedName",
														"src": "501:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "511:7:10",
														"nodeType": "YulTypedName",
														"src": "511:7:10",
														"type": ""
													}
												],
												"src": "466:104:10"
											},
											{
												"body": {
													"nativeSrc": "627:87:10",
													"nodeType": "YulBlock",
													"src": "627:87:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "692:16:10",
																"nodeType": "YulBlock",
																"src": "692:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "701:1:10",
																					"nodeType": "YulLiteral",
																					"src": "701:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "704:1:10",
																					"nodeType": "YulLiteral",
																					"src": "704:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "694:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "694:6:10"
																			},
																			"nativeSrc": "694:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "694:12:10"
																		},
																		"nativeSrc": "694:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "694:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "650:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "650:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "683:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "683:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "657:25:10",
																					"nodeType": "YulIdentifier",
																					"src": "657:25:10"
																				},
																				"nativeSrc": "657:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "657:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "647:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "647:2:10"
																		},
																		"nativeSrc": "647:43:10",
																		"nodeType": "YulFunctionCall",
																		"src": "647:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "640:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:10"
																},
																"nativeSrc": "640:51:10",
																"nodeType": "YulFunctionCall",
																"src": "640:51:10"
															},
															"nativeSrc": "637:71:10",
															"nodeType": "YulIf",
															"src": "637:71:10"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "576:138:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:10",
														"nodeType": "YulTypedName",
														"src": "620:5:10",
														"type": ""
													}
												],
												"src": "576:138:10"
											},
											{
												"body": {
													"nativeSrc": "791:88:10",
													"nodeType": "YulBlock",
													"src": "791:88:10",
													"statements": [
														{
															"nativeSrc": "801:22:10",
															"nodeType": "YulAssignment",
															"src": "801:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "816:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "816:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "810:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "810:5:10"
																},
																"nativeSrc": "810:13:10",
																"nodeType": "YulFunctionCall",
																"src": "810:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "801:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "801:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "867:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "867:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "832:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "832:34:10"
																},
																"nativeSrc": "832:41:10",
																"nodeType": "YulFunctionCall",
																"src": "832:41:10"
															},
															"nativeSrc": "832:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "832:41:10"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nativeSrc": "720:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "769:6:10",
														"nodeType": "YulTypedName",
														"src": "769:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "777:3:10",
														"nodeType": "YulTypedName",
														"src": "777:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "785:5:10",
														"nodeType": "YulTypedName",
														"src": "785:5:10",
														"type": ""
													}
												],
												"src": "720:159:10"
											},
											{
												"body": {
													"nativeSrc": "930:51:10",
													"nodeType": "YulBlock",
													"src": "930:51:10",
													"statements": [
														{
															"nativeSrc": "940:35:10",
															"nodeType": "YulAssignment",
															"src": "940:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "969:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "969:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "951:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "951:17:10"
																},
																"nativeSrc": "951:24:10",
																"nodeType": "YulFunctionCall",
																"src": "951:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "940:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "940:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "885:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "912:5:10",
														"nodeType": "YulTypedName",
														"src": "912:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "922:7:10",
														"nodeType": "YulTypedName",
														"src": "922:7:10",
														"type": ""
													}
												],
												"src": "885:96:10"
											},
											{
												"body": {
													"nativeSrc": "1030:79:10",
													"nodeType": "YulBlock",
													"src": "1030:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1087:16:10",
																"nodeType": "YulBlock",
																"src": "1087:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1096:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1096:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1099:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1099:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1089:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1089:6:10"
																			},
																			"nativeSrc": "1089:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1089:12:10"
																		},
																		"nativeSrc": "1089:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1089:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1053:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1053:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1078:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1078:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1060:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1060:17:10"
																				},
																				"nativeSrc": "1060:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1060:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1050:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1050:2:10"
																		},
																		"nativeSrc": "1050:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1050:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1043:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1043:6:10"
																},
																"nativeSrc": "1043:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1043:43:10"
															},
															"nativeSrc": "1040:63:10",
															"nodeType": "YulIf",
															"src": "1040:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "987:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1023:5:10",
														"nodeType": "YulTypedName",
														"src": "1023:5:10",
														"type": ""
													}
												],
												"src": "987:122:10"
											},
											{
												"body": {
													"nativeSrc": "1178:80:10",
													"nodeType": "YulBlock",
													"src": "1178:80:10",
													"statements": [
														{
															"nativeSrc": "1188:22:10",
															"nodeType": "YulAssignment",
															"src": "1188:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1203:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1203:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1197:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1197:5:10"
																},
																"nativeSrc": "1197:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1197:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1188:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1188:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1246:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1246:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1219:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1219:26:10"
																},
																"nativeSrc": "1219:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1219:33:10"
															},
															"nativeSrc": "1219:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1219:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1115:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1156:6:10",
														"nodeType": "YulTypedName",
														"src": "1156:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1164:3:10",
														"nodeType": "YulTypedName",
														"src": "1164:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1172:5:10",
														"nodeType": "YulTypedName",
														"src": "1172:5:10",
														"type": ""
													}
												],
												"src": "1115:143:10"
											},
											{
												"body": {
													"nativeSrc": "1366:421:10",
													"nodeType": "YulBlock",
													"src": "1366:421:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1412:83:10",
																"nodeType": "YulBlock",
																"src": "1412:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1414:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1414:77:10"
																			},
																			"nativeSrc": "1414:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1414:79:10"
																		},
																		"nativeSrc": "1414:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1414:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1387:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1387:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1396:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1396:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1383:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:10"
																		},
																		"nativeSrc": "1383:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1383:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1408:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1408:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1379:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1379:3:10"
																},
																"nativeSrc": "1379:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1379:32:10"
															},
															"nativeSrc": "1376:119:10",
															"nodeType": "YulIf",
															"src": "1376:119:10"
														},
														{
															"nativeSrc": "1505:136:10",
															"nodeType": "YulBlock",
															"src": "1505:136:10",
															"statements": [
																{
																	"nativeSrc": "1520:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1520:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1534:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1534:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1524:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1524:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1549:82:10",
																	"nodeType": "YulAssignment",
																	"src": "1549:82:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1603:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1603:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1614:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1614:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1599:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1599:3:10"
																				},
																				"nativeSrc": "1599:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1599:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1623:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1623:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nativeSrc": "1559:39:10",
																			"nodeType": "YulIdentifier",
																			"src": "1559:39:10"
																		},
																		"nativeSrc": "1559:72:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1559:72:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1549:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1549:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1651:129:10",
															"nodeType": "YulBlock",
															"src": "1651:129:10",
															"statements": [
																{
																	"nativeSrc": "1666:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1666:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1680:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1680:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1670:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1670:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1696:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1696:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1742:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1742:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1753:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1753:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1738:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1738:3:10"
																				},
																				"nativeSrc": "1738:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1738:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1762:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1762:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1706:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1706:31:10"
																		},
																		"nativeSrc": "1706:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1706:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1696:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1696:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_address_fromMemory",
												"nativeSrc": "1264:523:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1328:9:10",
														"nodeType": "YulTypedName",
														"src": "1328:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1339:7:10",
														"nodeType": "YulTypedName",
														"src": "1339:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1351:6:10",
														"nodeType": "YulTypedName",
														"src": "1351:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1359:6:10",
														"nodeType": "YulTypedName",
														"src": "1359:6:10",
														"type": ""
													}
												],
												"src": "1264:523:10"
											},
											{
												"body": {
													"nativeSrc": "1852:40:10",
													"nodeType": "YulBlock",
													"src": "1852:40:10",
													"statements": [
														{
															"nativeSrc": "1863:22:10",
															"nodeType": "YulAssignment",
															"src": "1863:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1879:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1879:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1873:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1873:5:10"
																},
																"nativeSrc": "1873:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1873:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1863:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1863:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1793:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:10",
														"nodeType": "YulTypedName",
														"src": "1835:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1845:6:10",
														"nodeType": "YulTypedName",
														"src": "1845:6:10",
														"type": ""
													}
												],
												"src": "1793:99:10"
											},
											{
												"body": {
													"nativeSrc": "1926:152:10",
													"nodeType": "YulBlock",
													"src": "1926:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1943:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1943:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1946:77:10",
																		"nodeType": "YulLiteral",
																		"src": "1946:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1936:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:10"
																},
																"nativeSrc": "1936:88:10",
																"nodeType": "YulFunctionCall",
																"src": "1936:88:10"
															},
															"nativeSrc": "1936:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "1936:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2040:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2040:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2043:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2043:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2033:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2033:6:10"
																},
																"nativeSrc": "2033:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2033:15:10"
															},
															"nativeSrc": "2033:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "2033:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2064:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2064:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2067:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2067:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2057:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2057:6:10"
																},
																"nativeSrc": "2057:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2057:15:10"
															},
															"nativeSrc": "2057:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "2057:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1898:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1898:180:10"
											},
											{
												"body": {
													"nativeSrc": "2112:152:10",
													"nodeType": "YulBlock",
													"src": "2112:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2129:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2129:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2132:77:10",
																		"nodeType": "YulLiteral",
																		"src": "2132:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2122:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2122:6:10"
																},
																"nativeSrc": "2122:88:10",
																"nodeType": "YulFunctionCall",
																"src": "2122:88:10"
															},
															"nativeSrc": "2122:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "2122:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2226:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2226:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2229:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2229:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2219:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2219:6:10"
																},
																"nativeSrc": "2219:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2219:15:10"
															},
															"nativeSrc": "2219:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "2219:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2250:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2250:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2253:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2253:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2243:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:10"
																},
																"nativeSrc": "2243:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2243:15:10"
															},
															"nativeSrc": "2243:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "2243:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2084:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "2084:180:10"
											},
											{
												"body": {
													"nativeSrc": "2321:269:10",
													"nodeType": "YulBlock",
													"src": "2321:269:10",
													"statements": [
														{
															"nativeSrc": "2331:22:10",
															"nodeType": "YulAssignment",
															"src": "2331:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2345:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2345:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2351:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2351:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2341:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2341:3:10"
																},
																"nativeSrc": "2341:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2341:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2331:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2331:6:10"
																}
															]
														},
														{
															"nativeSrc": "2362:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2362:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2392:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2392:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2398:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2398:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2388:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2388:3:10"
																},
																"nativeSrc": "2388:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2388:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2366:18:10",
																	"nodeType": "YulTypedName",
																	"src": "2366:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2439:51:10",
																"nodeType": "YulBlock",
																"src": "2439:51:10",
																"statements": [
																	{
																		"nativeSrc": "2453:27:10",
																		"nodeType": "YulAssignment",
																		"src": "2453:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2467:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "2467:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2475:4:10",
																					"nodeType": "YulLiteral",
																					"src": "2475:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2463:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2463:3:10"
																			},
																			"nativeSrc": "2463:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2463:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2453:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2453:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2419:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "2419:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2412:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2412:6:10"
																},
																"nativeSrc": "2412:26:10",
																"nodeType": "YulFunctionCall",
																"src": "2412:26:10"
															},
															"nativeSrc": "2409:81:10",
															"nodeType": "YulIf",
															"src": "2409:81:10"
														},
														{
															"body": {
																"nativeSrc": "2542:42:10",
																"nodeType": "YulBlock",
																"src": "2542:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2556:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "2556:16:10"
																			},
																			"nativeSrc": "2556:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2556:18:10"
																		},
																		"nativeSrc": "2556:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2556:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2506:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "2506:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2529:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2529:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2537:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2537:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2526:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2526:2:10"
																		},
																		"nativeSrc": "2526:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2526:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2503:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2503:2:10"
																},
																"nativeSrc": "2503:38:10",
																"nodeType": "YulFunctionCall",
																"src": "2503:38:10"
															},
															"nativeSrc": "2500:84:10",
															"nodeType": "YulIf",
															"src": "2500:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2270:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2305:4:10",
														"nodeType": "YulTypedName",
														"src": "2305:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2314:6:10",
														"nodeType": "YulTypedName",
														"src": "2314:6:10",
														"type": ""
													}
												],
												"src": "2270:320:10"
											},
											{
												"body": {
													"nativeSrc": "2650:87:10",
													"nodeType": "YulBlock",
													"src": "2650:87:10",
													"statements": [
														{
															"nativeSrc": "2660:11:10",
															"nodeType": "YulAssignment",
															"src": "2660:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "2668:3:10",
																"nodeType": "YulIdentifier",
																"src": "2668:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2660:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2660:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2688:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2688:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2691:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2691:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2681:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2681:6:10"
																},
																"nativeSrc": "2681:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2681:14:10"
															},
															"nativeSrc": "2681:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "2681:14:10"
														},
														{
															"nativeSrc": "2704:26:10",
															"nodeType": "YulAssignment",
															"src": "2704:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2722:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2722:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2725:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2725:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2712:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2712:9:10"
																},
																"nativeSrc": "2712:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2712:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2704:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2704:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2596:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2637:3:10",
														"nodeType": "YulTypedName",
														"src": "2637:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2645:4:10",
														"nodeType": "YulTypedName",
														"src": "2645:4:10",
														"type": ""
													}
												],
												"src": "2596:141:10"
											},
											{
												"body": {
													"nativeSrc": "2787:49:10",
													"nodeType": "YulBlock",
													"src": "2787:49:10",
													"statements": [
														{
															"nativeSrc": "2797:33:10",
															"nodeType": "YulAssignment",
															"src": "2797:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2815:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2815:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2822:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2822:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2811:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2811:3:10"
																		},
																		"nativeSrc": "2811:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2811:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2827:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2827:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2807:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2807:3:10"
																},
																"nativeSrc": "2807:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2807:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2797:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2797:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2743:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2770:5:10",
														"nodeType": "YulTypedName",
														"src": "2770:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2780:6:10",
														"nodeType": "YulTypedName",
														"src": "2780:6:10",
														"type": ""
													}
												],
												"src": "2743:93:10"
											},
											{
												"body": {
													"nativeSrc": "2895:54:10",
													"nodeType": "YulBlock",
													"src": "2895:54:10",
													"statements": [
														{
															"nativeSrc": "2905:37:10",
															"nodeType": "YulAssignment",
															"src": "2905:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2930:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2930:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2936:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2936:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2926:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2926:3:10"
																},
																"nativeSrc": "2926:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2926:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2905:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "2905:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2842:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2870:4:10",
														"nodeType": "YulTypedName",
														"src": "2870:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2876:5:10",
														"nodeType": "YulTypedName",
														"src": "2876:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2886:8:10",
														"nodeType": "YulTypedName",
														"src": "2886:8:10",
														"type": ""
													}
												],
												"src": "2842:107:10"
											},
											{
												"body": {
													"nativeSrc": "3031:317:10",
													"nodeType": "YulBlock",
													"src": "3031:317:10",
													"statements": [
														{
															"nativeSrc": "3041:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3041:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "3062:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "3062:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3074:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3074:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3058:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3058:3:10"
																},
																"nativeSrc": "3058:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3058:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "3045:9:10",
																	"nodeType": "YulTypedName",
																	"src": "3045:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3085:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3085:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3116:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3116:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3127:66:10",
																		"nodeType": "YulLiteral",
																		"src": "3127:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3097:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3097:18:10"
																},
																"nativeSrc": "3097:97:10",
																"nodeType": "YulFunctionCall",
																"src": "3097:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3089:4:10",
																	"nodeType": "YulTypedName",
																	"src": "3089:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3203:51:10",
															"nodeType": "YulAssignment",
															"src": "3203:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3234:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3234:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3245:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "3245:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3215:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3215:18:10"
																},
																"nativeSrc": "3215:39:10",
																"nodeType": "YulFunctionCall",
																"src": "3215:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3203:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "3203:8:10"
																}
															]
														},
														{
															"nativeSrc": "3263:30:10",
															"nodeType": "YulAssignment",
															"src": "3263:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3276:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3276:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3287:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3287:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3283:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3283:3:10"
																		},
																		"nativeSrc": "3283:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3283:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3272:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3272:3:10"
																},
																"nativeSrc": "3272:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3272:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3263:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3263:5:10"
																}
															]
														},
														{
															"nativeSrc": "3302:40:10",
															"nodeType": "YulAssignment",
															"src": "3302:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3315:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3315:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3326:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "3326:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3336:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3336:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3322:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3322:3:10"
																		},
																		"nativeSrc": "3322:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3322:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3312:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3312:2:10"
																},
																"nativeSrc": "3312:30:10",
																"nodeType": "YulFunctionCall",
																"src": "3312:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3302:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3302:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2955:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2992:5:10",
														"nodeType": "YulTypedName",
														"src": "2992:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2999:10:10",
														"nodeType": "YulTypedName",
														"src": "2999:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "3011:8:10",
														"nodeType": "YulTypedName",
														"src": "3011:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3024:6:10",
														"nodeType": "YulTypedName",
														"src": "3024:6:10",
														"type": ""
													}
												],
												"src": "2955:393:10"
											},
											{
												"body": {
													"nativeSrc": "3399:32:10",
													"nodeType": "YulBlock",
													"src": "3399:32:10",
													"statements": [
														{
															"nativeSrc": "3409:16:10",
															"nodeType": "YulAssignment",
															"src": "3409:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "3420:5:10",
																"nodeType": "YulIdentifier",
																"src": "3420:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3409:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3409:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3354:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3381:5:10",
														"nodeType": "YulTypedName",
														"src": "3381:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3391:7:10",
														"nodeType": "YulTypedName",
														"src": "3391:7:10",
														"type": ""
													}
												],
												"src": "3354:77:10"
											},
											{
												"body": {
													"nativeSrc": "3469:28:10",
													"nodeType": "YulBlock",
													"src": "3469:28:10",
													"statements": [
														{
															"nativeSrc": "3479:12:10",
															"nodeType": "YulAssignment",
															"src": "3479:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "3486:5:10",
																"nodeType": "YulIdentifier",
																"src": "3486:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3479:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3479:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3437:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3455:5:10",
														"nodeType": "YulTypedName",
														"src": "3455:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3465:3:10",
														"nodeType": "YulTypedName",
														"src": "3465:3:10",
														"type": ""
													}
												],
												"src": "3437:60:10"
											},
											{
												"body": {
													"nativeSrc": "3563:82:10",
													"nodeType": "YulBlock",
													"src": "3563:82:10",
													"statements": [
														{
															"nativeSrc": "3573:66:10",
															"nodeType": "YulAssignment",
															"src": "3573:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3631:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3631:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3613:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3613:17:10"
																				},
																				"nativeSrc": "3613:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3613:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3604:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "3604:8:10"
																		},
																		"nativeSrc": "3604:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3604:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3586:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3586:17:10"
																},
																"nativeSrc": "3586:53:10",
																"nodeType": "YulFunctionCall",
																"src": "3586:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3573:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "3573:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3503:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3543:5:10",
														"nodeType": "YulTypedName",
														"src": "3543:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3553:9:10",
														"nodeType": "YulTypedName",
														"src": "3553:9:10",
														"type": ""
													}
												],
												"src": "3503:142:10"
											},
											{
												"body": {
													"nativeSrc": "3698:28:10",
													"nodeType": "YulBlock",
													"src": "3698:28:10",
													"statements": [
														{
															"nativeSrc": "3708:12:10",
															"nodeType": "YulAssignment",
															"src": "3708:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "3715:5:10",
																"nodeType": "YulIdentifier",
																"src": "3715:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3708:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3708:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3651:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3684:5:10",
														"nodeType": "YulTypedName",
														"src": "3684:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3694:3:10",
														"nodeType": "YulTypedName",
														"src": "3694:3:10",
														"type": ""
													}
												],
												"src": "3651:75:10"
											},
											{
												"body": {
													"nativeSrc": "3808:193:10",
													"nodeType": "YulBlock",
													"src": "3808:193:10",
													"statements": [
														{
															"nativeSrc": "3818:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3818:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3873:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "3873:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3842:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "3842:30:10"
																},
																"nativeSrc": "3842:39:10",
																"nodeType": "YulFunctionCall",
																"src": "3842:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3822:16:10",
																	"nodeType": "YulTypedName",
																	"src": "3822:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3897:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3897:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3937:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "3937:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3931:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "3931:5:10"
																				},
																				"nativeSrc": "3931:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3931:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3944:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3944:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3976:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "3976:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3952:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "3952:23:10"
																				},
																				"nativeSrc": "3952:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3952:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3903:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "3903:27:10"
																		},
																		"nativeSrc": "3903:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3903:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3890:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3890:6:10"
																},
																"nativeSrc": "3890:105:10",
																"nodeType": "YulFunctionCall",
																"src": "3890:105:10"
															},
															"nativeSrc": "3890:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "3890:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3732:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3785:4:10",
														"nodeType": "YulTypedName",
														"src": "3785:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3791:6:10",
														"nodeType": "YulTypedName",
														"src": "3791:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3799:7:10",
														"nodeType": "YulTypedName",
														"src": "3799:7:10",
														"type": ""
													}
												],
												"src": "3732:269:10"
											},
											{
												"body": {
													"nativeSrc": "4056:24:10",
													"nodeType": "YulBlock",
													"src": "4056:24:10",
													"statements": [
														{
															"nativeSrc": "4066:8:10",
															"nodeType": "YulAssignment",
															"src": "4066:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4073:1:10",
																"nodeType": "YulLiteral",
																"src": "4073:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4066:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4066:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "4007:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4052:3:10",
														"nodeType": "YulTypedName",
														"src": "4052:3:10",
														"type": ""
													}
												],
												"src": "4007:73:10"
											},
											{
												"body": {
													"nativeSrc": "4139:136:10",
													"nodeType": "YulBlock",
													"src": "4139:136:10",
													"statements": [
														{
															"nativeSrc": "4149:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4149:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4163:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "4163:30:10"
																},
																"nativeSrc": "4163:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4163:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "4153:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4153:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4248:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4248:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4254:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4254:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4262:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4262:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4204:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4204:43:10"
																},
																"nativeSrc": "4204:65:10",
																"nodeType": "YulFunctionCall",
																"src": "4204:65:10"
															},
															"nativeSrc": "4204:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "4204:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "4086:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4125:4:10",
														"nodeType": "YulTypedName",
														"src": "4125:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4131:6:10",
														"nodeType": "YulTypedName",
														"src": "4131:6:10",
														"type": ""
													}
												],
												"src": "4086:189:10"
											},
											{
												"body": {
													"nativeSrc": "4331:136:10",
													"nodeType": "YulBlock",
													"src": "4331:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4398:63:10",
																"nodeType": "YulBlock",
																"src": "4398:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4442:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "4442:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4449:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4449:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4412:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "4412:29:10"
																			},
																			"nativeSrc": "4412:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4412:39:10"
																		},
																		"nativeSrc": "4412:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4412:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4351:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4351:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4358:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4358:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4348:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4348:2:10"
																},
																"nativeSrc": "4348:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4348:14:10"
															},
															"nativeSrc": "4341:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4363:26:10",
																"nodeType": "YulBlock",
																"src": "4363:26:10",
																"statements": [
																	{
																		"nativeSrc": "4365:22:10",
																		"nodeType": "YulAssignment",
																		"src": "4365:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4378:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "4378:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4385:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4385:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4374:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4374:3:10"
																			},
																			"nativeSrc": "4374:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4374:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4365:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4365:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4345:2:10",
																"nodeType": "YulBlock",
																"src": "4345:2:10",
																"statements": []
															},
															"src": "4341:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4281:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4319:5:10",
														"nodeType": "YulTypedName",
														"src": "4319:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4326:3:10",
														"nodeType": "YulTypedName",
														"src": "4326:3:10",
														"type": ""
													}
												],
												"src": "4281:186:10"
											},
											{
												"body": {
													"nativeSrc": "4552:464:10",
													"nodeType": "YulBlock",
													"src": "4552:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4578:431:10",
																"nodeType": "YulBlock",
																"src": "4578:431:10",
																"statements": [
																	{
																		"nativeSrc": "4592:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4592:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4640:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "4640:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4608:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "4608:31:10"
																			},
																			"nativeSrc": "4608:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4608:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4596:8:10",
																				"nodeType": "YulTypedName",
																				"src": "4596:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4659:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4659:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4682:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "4682:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4710:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "4710:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4692:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "4692:17:10"
																					},
																					"nativeSrc": "4692:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4692:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4678:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4678:3:10"
																			},
																			"nativeSrc": "4678:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4678:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4663:11:10",
																				"nodeType": "YulTypedName",
																				"src": "4663:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4879:27:10",
																			"nodeType": "YulBlock",
																			"src": "4879:27:10",
																			"statements": [
																				{
																					"nativeSrc": "4881:23:10",
																					"nodeType": "YulAssignment",
																					"src": "4881:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4896:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "4896:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4881:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "4881:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4863:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "4863:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4875:2:10",
																					"nodeType": "YulLiteral",
																					"src": "4875:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4860:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "4860:2:10"
																			},
																			"nativeSrc": "4860:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:18:10"
																		},
																		"nativeSrc": "4857:49:10",
																		"nodeType": "YulIf",
																		"src": "4857:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4948:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "4948:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4965:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "4965:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4993:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4993:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4975:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "4975:17:10"
																							},
																							"nativeSrc": "4975:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4975:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4961:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4961:3:10"
																					},
																					"nativeSrc": "4961:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4961:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4919:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "4919:28:10"
																			},
																			"nativeSrc": "4919:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4919:80:10"
																		},
																		"nativeSrc": "4919:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4919:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4569:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4569:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4574:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4574:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4566:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4566:2:10"
																},
																"nativeSrc": "4566:11:10",
																"nodeType": "YulFunctionCall",
																"src": "4566:11:10"
															},
															"nativeSrc": "4563:446:10",
															"nodeType": "YulIf",
															"src": "4563:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4473:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4528:5:10",
														"nodeType": "YulTypedName",
														"src": "4528:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4535:3:10",
														"nodeType": "YulTypedName",
														"src": "4535:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4540:10:10",
														"nodeType": "YulTypedName",
														"src": "4540:10:10",
														"type": ""
													}
												],
												"src": "4473:543:10"
											},
											{
												"body": {
													"nativeSrc": "5085:54:10",
													"nodeType": "YulBlock",
													"src": "5085:54:10",
													"statements": [
														{
															"nativeSrc": "5095:37:10",
															"nodeType": "YulAssignment",
															"src": "5095:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5120:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5120:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5126:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5126:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5116:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5116:3:10"
																},
																"nativeSrc": "5116:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5116:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5095:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "5095:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "5022:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5060:4:10",
														"nodeType": "YulTypedName",
														"src": "5060:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5066:5:10",
														"nodeType": "YulTypedName",
														"src": "5066:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5076:8:10",
														"nodeType": "YulTypedName",
														"src": "5076:8:10",
														"type": ""
													}
												],
												"src": "5022:117:10"
											},
											{
												"body": {
													"nativeSrc": "5196:118:10",
													"nodeType": "YulBlock",
													"src": "5196:118:10",
													"statements": [
														{
															"nativeSrc": "5206:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5206:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5255:1:10",
																						"nodeType": "YulLiteral",
																						"src": "5255:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5258:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5258:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5251:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5251:3:10"
																				},
																				"nativeSrc": "5251:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5251:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5270:1:10",
																						"nodeType": "YulLiteral",
																						"src": "5270:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5266:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5266:3:10"
																				},
																				"nativeSrc": "5266:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5266:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5222:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "5222:28:10"
																		},
																		"nativeSrc": "5222:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5222:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5218:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5218:3:10"
																},
																"nativeSrc": "5218:56:10",
																"nodeType": "YulFunctionCall",
																"src": "5218:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5210:4:10",
																	"nodeType": "YulTypedName",
																	"src": "5210:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5283:25:10",
															"nodeType": "YulAssignment",
															"src": "5283:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5297:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5297:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5303:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5303:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5293:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5293:3:10"
																},
																"nativeSrc": "5293:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5293:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5283:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5283:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "5145:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5173:4:10",
														"nodeType": "YulTypedName",
														"src": "5173:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5179:5:10",
														"nodeType": "YulTypedName",
														"src": "5179:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5189:6:10",
														"nodeType": "YulTypedName",
														"src": "5189:6:10",
														"type": ""
													}
												],
												"src": "5145:169:10"
											},
											{
												"body": {
													"nativeSrc": "5400:214:10",
													"nodeType": "YulBlock",
													"src": "5400:214:10",
													"statements": [
														{
															"nativeSrc": "5533:37:10",
															"nodeType": "YulAssignment",
															"src": "5533:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5560:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5560:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5566:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5566:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5541:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5541:18:10"
																},
																"nativeSrc": "5541:29:10",
																"nodeType": "YulFunctionCall",
																"src": "5541:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5533:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5533:4:10"
																}
															]
														},
														{
															"nativeSrc": "5579:29:10",
															"nodeType": "YulAssignment",
															"src": "5579:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5590:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5590:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5600:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5600:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5603:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5603:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5596:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5596:3:10"
																		},
																		"nativeSrc": "5596:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5596:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5587:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5587:2:10"
																},
																"nativeSrc": "5587:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5587:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5579:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5579:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5319:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5381:4:10",
														"nodeType": "YulTypedName",
														"src": "5381:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5387:3:10",
														"nodeType": "YulTypedName",
														"src": "5387:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5395:4:10",
														"nodeType": "YulTypedName",
														"src": "5395:4:10",
														"type": ""
													}
												],
												"src": "5319:295:10"
											},
											{
												"body": {
													"nativeSrc": "5711:1303:10",
													"nodeType": "YulBlock",
													"src": "5711:1303:10",
													"statements": [
														{
															"nativeSrc": "5722:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5722:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5769:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5769:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5736:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "5736:32:10"
																},
																"nativeSrc": "5736:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5736:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5726:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5726:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5858:22:10",
																"nodeType": "YulBlock",
																"src": "5858:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5860:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5860:16:10"
																			},
																			"nativeSrc": "5860:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5860:18:10"
																		},
																		"nativeSrc": "5860:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5860:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5830:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5830:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5838:18:10",
																		"nodeType": "YulLiteral",
																		"src": "5838:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5827:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5827:2:10"
																},
																"nativeSrc": "5827:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5827:30:10"
															},
															"nativeSrc": "5824:56:10",
															"nodeType": "YulIf",
															"src": "5824:56:10"
														},
														{
															"nativeSrc": "5890:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5890:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5936:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5936:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5930:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5930:5:10"
																		},
																		"nativeSrc": "5930:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5930:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5904:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "5904:25:10"
																},
																"nativeSrc": "5904:38:10",
																"nodeType": "YulFunctionCall",
																"src": "5904:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5894:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5894:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6035:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6035:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "6041:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6041:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6049:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6049:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5989:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "5989:45:10"
																},
																"nativeSrc": "5989:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5989:67:10"
															},
															"nativeSrc": "5989:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "5989:67:10"
														},
														{
															"nativeSrc": "6066:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6066:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6083:1:10",
																"nodeType": "YulLiteral",
																"src": "6083:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6070:9:10",
																	"nodeType": "YulTypedName",
																	"src": "6070:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6094:17:10",
															"nodeType": "YulAssignment",
															"src": "6094:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6107:4:10",
																"nodeType": "YulLiteral",
																"src": "6107:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6094:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "6094:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6158:611:10",
																		"nodeType": "YulBlock",
																		"src": "6158:611:10",
																		"statements": [
																			{
																				"nativeSrc": "6172:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6172:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6191:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "6191:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6203:4:10",
																									"nodeType": "YulLiteral",
																									"src": "6203:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6199:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "6199:3:10"
																							},
																							"nativeSrc": "6199:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6199:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6187:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "6187:3:10"
																					},
																					"nativeSrc": "6187:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6187:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6176:7:10",
																						"nodeType": "YulTypedName",
																						"src": "6176:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6223:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6223:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6269:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "6269:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6237:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "6237:31:10"
																					},
																					"nativeSrc": "6237:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6237:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6227:6:10",
																						"nodeType": "YulTypedName",
																						"src": "6227:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6287:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6287:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6296:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6296:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6291:1:10",
																						"nodeType": "YulTypedName",
																						"src": "6291:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6355:163:10",
																					"nodeType": "YulBlock",
																					"src": "6355:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6380:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "6380:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6398:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "6398:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6403:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "6403:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6394:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "6394:3:10"
																												},
																												"nativeSrc": "6394:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "6394:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6388:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "6388:5:10"
																										},
																										"nativeSrc": "6388:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6388:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6373:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6373:6:10"
																								},
																								"nativeSrc": "6373:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6373:42:10"
																							},
																							"nativeSrc": "6373:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "6373:42:10"
																						},
																						{
																							"nativeSrc": "6432:24:10",
																							"nodeType": "YulAssignment",
																							"src": "6432:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6446:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "6446:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6454:1:10",
																										"nodeType": "YulLiteral",
																										"src": "6454:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6442:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "6442:3:10"
																								},
																								"nativeSrc": "6442:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6442:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6432:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6432:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6473:31:10",
																							"nodeType": "YulAssignment",
																							"src": "6473:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6490:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "6490:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6501:2:10",
																										"nodeType": "YulLiteral",
																										"src": "6501:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6486:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "6486:3:10"
																								},
																								"nativeSrc": "6486:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6486:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6473:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "6473:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6321:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "6321:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6324:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "6324:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6318:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "6318:2:10"
																					},
																					"nativeSrc": "6318:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6318:14:10"
																				},
																				"nativeSrc": "6310:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6333:21:10",
																					"nodeType": "YulBlock",
																					"src": "6333:21:10",
																					"statements": [
																						{
																							"nativeSrc": "6335:17:10",
																							"nodeType": "YulAssignment",
																							"src": "6335:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6344:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "6344:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6347:4:10",
																										"nodeType": "YulLiteral",
																										"src": "6347:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6340:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "6340:3:10"
																								},
																								"nativeSrc": "6340:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6340:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6335:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "6335:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6314:3:10",
																					"nodeType": "YulBlock",
																					"src": "6314:3:10",
																					"statements": []
																				},
																				"src": "6310:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "6554:156:10",
																					"nodeType": "YulBlock",
																					"src": "6554:156:10",
																					"statements": [
																						{
																							"nativeSrc": "6572:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6572:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6599:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "6599:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6604:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6604:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6595:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "6595:3:10"
																										},
																										"nativeSrc": "6595:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6595:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6589:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6589:5:10"
																								},
																								"nativeSrc": "6589:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6589:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6576:9:10",
																									"nodeType": "YulTypedName",
																									"src": "6576:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6639:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "6639:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6666:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6666:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6681:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "6681:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6689:4:10",
																														"nodeType": "YulLiteral",
																														"src": "6689:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6677:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "6677:3:10"
																												},
																												"nativeSrc": "6677:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "6677:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6647:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "6647:18:10"
																										},
																										"nativeSrc": "6647:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6647:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6632:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6632:6:10"
																								},
																								"nativeSrc": "6632:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6632:64:10"
																							},
																							"nativeSrc": "6632:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "6632:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6537:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "6537:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6546:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "6546:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6534:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "6534:2:10"
																					},
																					"nativeSrc": "6534:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6534:19:10"
																				},
																				"nativeSrc": "6531:179:10",
																				"nodeType": "YulIf",
																				"src": "6531:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6730:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "6730:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6744:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "6744:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6752:1:10",
																											"nodeType": "YulLiteral",
																											"src": "6752:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6740:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "6740:3:10"
																									},
																									"nativeSrc": "6740:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "6740:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6756:1:10",
																									"nodeType": "YulLiteral",
																									"src": "6756:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6736:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "6736:3:10"
																							},
																							"nativeSrc": "6736:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6736:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6723:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6723:6:10"
																					},
																					"nativeSrc": "6723:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6723:36:10"
																				},
																				"nativeSrc": "6723:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "6723:36:10"
																			}
																		]
																	},
																	"nativeSrc": "6151:618:10",
																	"nodeType": "YulCase",
																	"src": "6151:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6156:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6156:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6786:222:10",
																		"nodeType": "YulBlock",
																		"src": "6786:222:10",
																		"statements": [
																			{
																				"nativeSrc": "6800:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6800:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6813:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6813:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6804:5:10",
																						"nodeType": "YulTypedName",
																						"src": "6804:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6837:67:10",
																					"nodeType": "YulBlock",
																					"src": "6837:67:10",
																					"statements": [
																						{
																							"nativeSrc": "6855:35:10",
																							"nodeType": "YulAssignment",
																							"src": "6855:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6874:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "6874:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6879:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6879:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6870:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "6870:3:10"
																										},
																										"nativeSrc": "6870:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6870:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6864:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6864:5:10"
																								},
																								"nativeSrc": "6864:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6864:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6855:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6855:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6830:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6830:6:10"
																				},
																				"nativeSrc": "6827:77:10",
																				"nodeType": "YulIf",
																				"src": "6827:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6924:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "6924:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6983:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6983:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6990:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6990:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6930:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "6930:52:10"
																							},
																							"nativeSrc": "6930:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6930:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6917:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6917:6:10"
																					},
																					"nativeSrc": "6917:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6917:81:10"
																				},
																				"nativeSrc": "6917:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "6917:81:10"
																			}
																		]
																	},
																	"nativeSrc": "6778:230:10",
																	"nodeType": "YulCase",
																	"src": "6778:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6131:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6131:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6139:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6139:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6128:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6128:2:10"
																},
																"nativeSrc": "6128:14:10",
																"nodeType": "YulFunctionCall",
																"src": "6128:14:10"
															},
															"nativeSrc": "6121:887:10",
															"nodeType": "YulSwitch",
															"src": "6121:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5619:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5700:4:10",
														"nodeType": "YulTypedName",
														"src": "5700:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5706:3:10",
														"nodeType": "YulTypedName",
														"src": "5706:3:10",
														"type": ""
													}
												],
												"src": "5619:1395:10"
											},
											{
												"body": {
													"nativeSrc": "7085:53:10",
													"nodeType": "YulBlock",
													"src": "7085:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7102:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7102:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7125:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7125:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7107:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "7107:17:10"
																		},
																		"nativeSrc": "7107:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7107:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7095:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7095:6:10"
																},
																"nativeSrc": "7095:37:10",
																"nodeType": "YulFunctionCall",
																"src": "7095:37:10"
															},
															"nativeSrc": "7095:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "7095:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7020:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7073:5:10",
														"nodeType": "YulTypedName",
														"src": "7073:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7080:3:10",
														"nodeType": "YulTypedName",
														"src": "7080:3:10",
														"type": ""
													}
												],
												"src": "7020:118:10"
											},
											{
												"body": {
													"nativeSrc": "7242:124:10",
													"nodeType": "YulBlock",
													"src": "7242:124:10",
													"statements": [
														{
															"nativeSrc": "7252:26:10",
															"nodeType": "YulAssignment",
															"src": "7252:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7264:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7264:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7275:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7275:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7260:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7260:3:10"
																},
																"nativeSrc": "7260:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7260:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7252:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7252:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7332:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7332:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7345:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7345:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7356:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7356:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7341:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7341:3:10"
																		},
																		"nativeSrc": "7341:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7341:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7288:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7288:43:10"
																},
																"nativeSrc": "7288:71:10",
																"nodeType": "YulFunctionCall",
																"src": "7288:71:10"
															},
															"nativeSrc": "7288:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "7288:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7144:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7214:9:10",
														"nodeType": "YulTypedName",
														"src": "7214:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7226:6:10",
														"nodeType": "YulTypedName",
														"src": "7226:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7237:4:10",
														"nodeType": "YulTypedName",
														"src": "7237:4:10",
														"type": ""
													}
												],
												"src": "7144:222:10"
											},
											{
												"body": {
													"nativeSrc": "7400:152:10",
													"nodeType": "YulBlock",
													"src": "7400:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7417:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7417:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7420:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7420:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7410:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7410:6:10"
																},
																"nativeSrc": "7410:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7410:88:10"
															},
															"nativeSrc": "7410:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7410:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7514:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7514:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7517:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7517:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7507:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7507:6:10"
																},
																"nativeSrc": "7507:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7507:15:10"
															},
															"nativeSrc": "7507:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7507:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7538:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7538:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7541:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7541:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7531:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7531:6:10"
																},
																"nativeSrc": "7531:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7531:15:10"
															},
															"nativeSrc": "7531:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7531:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7372:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7372:180:10"
											},
											{
												"body": {
													"nativeSrc": "7602:147:10",
													"nodeType": "YulBlock",
													"src": "7602:147:10",
													"statements": [
														{
															"nativeSrc": "7612:25:10",
															"nodeType": "YulAssignment",
															"src": "7612:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7635:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7635:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7617:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7617:17:10"
																},
																"nativeSrc": "7617:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7617:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7612:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7612:1:10"
																}
															]
														},
														{
															"nativeSrc": "7646:25:10",
															"nodeType": "YulAssignment",
															"src": "7646:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7669:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7669:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7651:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7651:17:10"
																},
																"nativeSrc": "7651:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7651:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7646:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7646:1:10"
																}
															]
														},
														{
															"nativeSrc": "7680:16:10",
															"nodeType": "YulAssignment",
															"src": "7680:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7691:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7691:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7694:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7694:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7687:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7687:3:10"
																},
																"nativeSrc": "7687:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7687:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7680:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7680:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7720:22:10",
																"nodeType": "YulBlock",
																"src": "7720:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7722:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7722:16:10"
																			},
																			"nativeSrc": "7722:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7722:18:10"
																		},
																		"nativeSrc": "7722:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7722:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7712:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7712:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7715:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7715:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7709:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7709:2:10"
																},
																"nativeSrc": "7709:10:10",
																"nodeType": "YulFunctionCall",
																"src": "7709:10:10"
															},
															"nativeSrc": "7706:36:10",
															"nodeType": "YulIf",
															"src": "7706:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7558:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7589:1:10",
														"nodeType": "YulTypedName",
														"src": "7589:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7592:1:10",
														"nodeType": "YulTypedName",
														"src": "7592:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7598:3:10",
														"nodeType": "YulTypedName",
														"src": "7598:3:10",
														"type": ""
													}
												],
												"src": "7558:191:10"
											},
											{
												"body": {
													"nativeSrc": "7820:53:10",
													"nodeType": "YulBlock",
													"src": "7820:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7837:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7837:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7860:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7860:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7842:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "7842:17:10"
																		},
																		"nativeSrc": "7842:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7842:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7830:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7830:6:10"
																},
																"nativeSrc": "7830:37:10",
																"nodeType": "YulFunctionCall",
																"src": "7830:37:10"
															},
															"nativeSrc": "7830:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "7830:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7755:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7808:5:10",
														"nodeType": "YulTypedName",
														"src": "7808:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7815:3:10",
														"nodeType": "YulTypedName",
														"src": "7815:3:10",
														"type": ""
													}
												],
												"src": "7755:118:10"
											},
											{
												"body": {
													"nativeSrc": "8033:288:10",
													"nodeType": "YulBlock",
													"src": "8033:288:10",
													"statements": [
														{
															"nativeSrc": "8043:26:10",
															"nodeType": "YulAssignment",
															"src": "8043:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8055:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8055:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8066:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8066:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8051:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8051:3:10"
																},
																"nativeSrc": "8051:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8051:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8043:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8043:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8123:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8123:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8136:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8136:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8147:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8147:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8132:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8132:3:10"
																		},
																		"nativeSrc": "8132:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8132:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8079:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8079:43:10"
																},
																"nativeSrc": "8079:71:10",
																"nodeType": "YulFunctionCall",
																"src": "8079:71:10"
															},
															"nativeSrc": "8079:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "8079:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8204:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8204:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8217:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8217:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8228:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8228:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8213:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8213:3:10"
																		},
																		"nativeSrc": "8213:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8213:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8160:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8160:43:10"
																},
																"nativeSrc": "8160:72:10",
																"nodeType": "YulFunctionCall",
																"src": "8160:72:10"
															},
															"nativeSrc": "8160:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "8160:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8286:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8286:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8299:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8299:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8310:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8310:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8295:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8295:3:10"
																		},
																		"nativeSrc": "8295:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8295:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8242:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8242:43:10"
																},
																"nativeSrc": "8242:72:10",
																"nodeType": "YulFunctionCall",
																"src": "8242:72:10"
															},
															"nativeSrc": "8242:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "8242:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7879:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7989:9:10",
														"nodeType": "YulTypedName",
														"src": "7989:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8001:6:10",
														"nodeType": "YulTypedName",
														"src": "8001:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8009:6:10",
														"nodeType": "YulTypedName",
														"src": "8009:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8017:6:10",
														"nodeType": "YulTypedName",
														"src": "8017:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8028:4:10",
														"nodeType": "YulTypedName",
														"src": "8028:4:10",
														"type": ""
													}
												],
												"src": "7879:442:10"
											},
											{
												"body": {
													"nativeSrc": "8425:124:10",
													"nodeType": "YulBlock",
													"src": "8425:124:10",
													"statements": [
														{
															"nativeSrc": "8435:26:10",
															"nodeType": "YulAssignment",
															"src": "8435:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8447:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8447:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8458:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8458:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8443:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8443:3:10"
																},
																"nativeSrc": "8443:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8443:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8435:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8435:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8515:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8515:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8528:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8528:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8539:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8539:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8524:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8524:3:10"
																		},
																		"nativeSrc": "8524:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8524:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8471:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8471:43:10"
																},
																"nativeSrc": "8471:71:10",
																"nodeType": "YulFunctionCall",
																"src": "8471:71:10"
															},
															"nativeSrc": "8471:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "8471:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8327:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8397:9:10",
														"nodeType": "YulTypedName",
														"src": "8397:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8409:6:10",
														"nodeType": "YulTypedName",
														"src": "8409:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8420:4:10",
														"nodeType": "YulTypedName",
														"src": "8420:4:10",
														"type": ""
													}
												],
												"src": "8327:222:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162002a8038038062002a80833981810160405281019062000036919062000816565b336040518060400160405280601081526020017f4c6976696e672054686520447265616d000000000000000000000000000000008152506040518060400160405280600381526020017f4c544400000000000000000000000000000000000000000000000000000000008152508160039081620000b4919062000abf565b508060049081620000c6919062000abf565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013c575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000133919062000bb4565b60405180910390fd5b6200014d816200029660201b60201c565b5060016006819055505f60075f6101000a81548160ff0219169083151502179055506200018d336b6bb4afe4ca85cb07a83400006200035960201b60201c565b620001bf733e55efc604a3e021069aa4852ab5a97798301fd56b11e110e90947de04103400006200035960201b60201c565b620001f17354412e0892c534c89a076252e3824f1f7f549c526b59c13d3ea1d47881e32400006200035960201b60201c565b604051806040016040528060078152602001600a815250600b5f820151815f01556020820151816001015590505081600d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200027d816b6bb4afe4ca85cb07a83400006200035960201b60201c565b6200028e81620003e360201b60201c565b505062000c9d565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620003cc575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620003c3919062000bb4565b60405180910390fd5b620003df5f83836200047a60201b60201c565b5050565b620003f36200069e60201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000466575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200045d919062000bb4565b60405180910390fd5b62000477816200029660201b60201c565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620004ce578060025f828254620004c1919062000bfc565b925050819055506200059f565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156200055a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620005519392919062000c47565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620005e8578060025f828254039250508190555062000632565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000691919062000c82565b60405180910390a3505050565b620006ae6200074060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620006d46200074760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200073e57620007006200074060201b60201c565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040162000735919062000bb4565b60405180910390fd5b565b5f33905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200079e8262000773565b9050919050565b620007b08162000792565b8114620007bb575f80fd5b50565b5f81519050620007ce81620007a5565b92915050565b5f620007e08262000773565b9050919050565b620007f281620007d4565b8114620007fd575f80fd5b50565b5f815190506200081081620007e7565b92915050565b5f80604083850312156200082f576200082e6200076f565b5b5f6200083e85828601620007be565b9250506020620008518582860162000800565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620008d757607f821691505b602082108103620008ed57620008ec62000892565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620009517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000914565b6200095d868362000914565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620009a7620009a16200099b8462000975565b6200097e565b62000975565b9050919050565b5f819050919050565b620009c28362000987565b620009da620009d182620009ae565b84845462000920565b825550505050565b5f90565b620009f0620009e2565b620009fd818484620009b7565b505050565b5b8181101562000a245762000a185f82620009e6565b60018101905062000a03565b5050565b601f82111562000a735762000a3d81620008f3565b62000a488462000905565b8101602085101562000a58578190505b62000a7062000a678562000905565b83018262000a02565b50505b505050565b5f82821c905092915050565b5f62000a955f198460080262000a78565b1980831691505092915050565b5f62000aaf838362000a84565b9150826002028217905092915050565b62000aca826200085b565b67ffffffffffffffff81111562000ae65762000ae562000865565b5b62000af28254620008bf565b62000aff82828562000a28565b5f60209050601f83116001811462000b35575f841562000b20578287015190505b62000b2c858262000aa2565b86555062000b9b565b601f19841662000b4586620008f3565b5f5b8281101562000b6e5784890151825560018201915060208501945060208101905062000b47565b8683101562000b8e578489015162000b8a601f89168262000a84565b8355505b6001600288020188555050505b505050505050565b62000bae81620007d4565b82525050565b5f60208201905062000bc95f83018462000ba3565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f62000c088262000975565b915062000c158362000975565b925082820190508082111562000c305762000c2f62000bcf565b5b92915050565b62000c418162000975565b82525050565b5f60608201905062000c5c5f83018662000ba3565b62000c6b602083018562000c36565b62000c7a604083018462000c36565b949350505050565b5f60208201905062000c975f83018462000c36565b92915050565b611dd58062000cab5f395ff3fe608060405234801561000f575f80fd5b5060043610610225575f3560e01c806370a082311161012e578063a9059cbb116100b6578063e17c4c741161007a578063e17c4c7414610615578063e43252d714610631578063eb1e73871461064d578063f2fde38b1461066c578063fe575a871461068857610225565b8063a9059cbb14610549578063b3a88c1b14610579578063c5f956af14610597578063cb4ca631146105b5578063dd62ed3e146105e557610225565b80638456cb59116100fd5780638456cb59146104cb5780638ab1d681146104d55780638da5cb5b146104f157806395d89b411461050f5780639dc29fac1461052d57610225565b806370a0823114610457578063715018a61461048757806372a8a9331461049157806379cc6790146104af57610225565b806340c10f19116101b15780635c975abb116101805780635c975abb146103c957806360d1259e146103e75780636605bfda146104035780636c95702b1461041f5780636f0b00ac1461043b57610225565b806340c10f191461035957806342966c681461037557806344337ea114610391578063537df3b6146103ad57610225565b80632ff2e9dc116101f85780632ff2e9dc146102c5578063313ce567146102e357806332cb6b0c146103015780633af32abf1461031f5780633f4ba83a1461034f57610225565b806306fdde0314610229578063095ea7b31461024757806318160ddd1461027757806323b872dd14610295575b5f80fd5b6102316106b8565b60405161023e9190611860565b60405180910390f35b610261600480360381019061025c9190611911565b610748565b60405161026e9190611969565b60405180910390f35b61027f61076a565b60405161028c9190611991565b60405180910390f35b6102af60048036038101906102aa91906119aa565b610773565b6040516102bc9190611969565b60405180910390f35b6102cd6107a1565b6040516102da9190611991565b60405180910390f35b6102eb6107b1565b6040516102f89190611a15565b60405180910390f35b6103096107b9565b6040516103169190611991565b60405180910390f35b61033960048036038101906103349190611a2e565b6107ca565b6040516103469190611969565b60405180910390f35b6103576107e7565b005b610373600480360381019061036e9190611911565b6107f9565b005b61038f600480360381019061038a9190611a59565b61080f565b005b6103ab60048036038101906103a69190611a2e565b610823565b005b6103c760048036038101906103c29190611a2e565b610883565b005b6103d16108e2565b6040516103de9190611969565b60405180910390f35b61040160048036038101906103fc9190611a2e565b6108f7565b005b61041d60048036038101906104189190611abf565b610957565b005b61043960048036038101906104349190611911565b6109a2565b005b61045560048036038101906104509190611aea565b6109b9565b005b610471600480360381019061046c9190611a2e565b610a99565b60405161047e9190611991565b60405180910390f35b61048f610ade565b005b610499610af1565b6040516104a69190611991565b60405180910390f35b6104c960048036038101906104c49190611911565b610b01565b005b6104d3610b21565b005b6104ef60048036038101906104ea9190611a2e565b610b33565b005b6104f9610b92565b6040516105069190611b37565b60405180910390f35b610517610bba565b6040516105249190611860565b60405180910390f35b61054760048036038101906105429190611911565b610c4a565b005b610563600480360381019061055e9190611911565b610c60565b6040516105709190611969565b60405180910390f35b610581610c82565b60405161058e9190611991565b60405180910390f35b61059f610c92565b6040516105ac9190611b5f565b60405180910390f35b6105cf60048036038101906105ca9190611a2e565b610cb7565b6040516105dc9190611969565b60405180910390f35b6105ff60048036038101906105fa9190611b78565b610cd4565b60405161060c9190611991565b60405180910390f35b61062f600480360381019061062a9190611a2e565b610d56565b005b61064b60048036038101906106469190611a2e565b610db5565b005b610655610e15565b604051610663929190611bb6565b60405180910390f35b61068660048036038101906106819190611a2e565b610e26565b005b6106a2600480360381019061069d9190611a2e565b610eaa565b6040516106af9190611969565b60405180910390f35b6060600380546106c790611c0a565b80601f01602080910402602001604051908101604052809291908181526020018280546106f390611c0a565b801561073e5780601f106107155761010080835404028352916020019161073e565b820191905f5260205f20905b81548152906001019060200180831161072157829003601f168201915b5050505050905090565b5f80610752610ec7565b905061075f818585610ece565b600191505092915050565b5f600254905090565b5f8061077d610ec7565b905061078a858285610ee0565b610795858585610f72565b60019150509392505050565b6b6bb4afe4ca85cb07a834000081565b5f6012905090565b6c04350edef012dc12678834000081565b6008602052805f5260405f205f915054906101000a900460ff1681565b6107ef611062565b6107f76110e9565b565b610801611062565b61080b828261114a565b5050565b61082061081a610ec7565b826111c9565b50565b61082b611062565b600160095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b61088b611062565b5f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60075f9054906101000a900460ff16905090565b6108ff611062565b6001600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b61095f611062565b80600d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6109aa611062565b6109b5308383610ece565b5050565b6109c1611062565b6064821115610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611c84565b60405180910390fd5b6064811115610a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4090611cec565b60405180910390fd5b81600b5f018190555080600b600101819055507f5eee0b95930ee59011f34615b0b7dc6cc58c01d1f07d04a01a3a1e70d2554cf08282604051610a8d929190611bb6565b60405180910390a15050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610ae6611062565b610aef5f611248565b565b6b59c13d3ea1d47881e324000081565b610b1382610b0d610ec7565b83610ee0565b610b1d82826111c9565b5050565b610b29611062565b610b3161130b565b565b610b3b611062565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610bc990611c0a565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf590611c0a565b8015610c405780601f10610c1757610100808354040283529160200191610c40565b820191905f5260205f20905b815481529060010190602001808311610c2357829003601f168201915b5050505050905090565b610c52611062565b610c5c82826111c9565b5050565b5f80610c6a610ec7565b9050610c77818585610f72565b600191505092915050565b6b11e110e90947de041034000081565b600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a602052805f5260405f205f915054906101000a900460ff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610d5e611062565b5f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610dbd611062565b600160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b600b805f0154908060010154905082565b610e2e611062565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e9e575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e959190611b37565b60405180910390fd5b610ea781611248565b50565b6009602052805f5260405f205f915054906101000a900460ff1681565b5f33905090565b610edb838383600161136d565b505050565b5f610eeb8484610cd4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f6c5781811015610f5d578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f5493929190611d0a565b60405180910390fd5b610f6b84848484035f61136d565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fe2575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610fd99190611b37565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611052575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110499190611b37565b60405180910390fd5b61105d83838361153c565b505050565b61106a610ec7565b73ffffffffffffffffffffffffffffffffffffffff16611088610b92565b73ffffffffffffffffffffffffffffffffffffffff16146110e7576110ab610ec7565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110de9190611b37565b60405180910390fd5b565b6110f1611755565b5f60075f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611133610ec7565b6040516111409190611b37565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111ba575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111b19190611b37565b60405180910390fd5b6111c55f838361153c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611239575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112309190611b37565b60405180910390fd5b611244825f8361153c565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611313611795565b600160075f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611356610ec7565b6040516113639190611b37565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036113dd575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016113d49190611b37565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361144d575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114449190611b37565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611536578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161152d9190611991565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361158c578060025f8282546115809190611d6c565b9250508190555061165a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611615578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161160c93929190611d0a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116a1578060025f82825403925050819055506116eb565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117489190611991565b60405180910390a3505050565b61175d6108e2565b611793576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61179d6108e2565b156117d4576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561180d5780820151818401526020810190506117f2565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611832826117d6565b61183c81856117e0565b935061184c8185602086016117f0565b61185581611818565b840191505092915050565b5f6020820190508181035f8301526118788184611828565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118ad82611884565b9050919050565b6118bd816118a3565b81146118c7575f80fd5b50565b5f813590506118d8816118b4565b92915050565b5f819050919050565b6118f0816118de565b81146118fa575f80fd5b50565b5f8135905061190b816118e7565b92915050565b5f806040838503121561192757611926611880565b5b5f611934858286016118ca565b9250506020611945858286016118fd565b9150509250929050565b5f8115159050919050565b6119638161194f565b82525050565b5f60208201905061197c5f83018461195a565b92915050565b61198b816118de565b82525050565b5f6020820190506119a45f830184611982565b92915050565b5f805f606084860312156119c1576119c0611880565b5b5f6119ce868287016118ca565b93505060206119df868287016118ca565b92505060406119f0868287016118fd565b9150509250925092565b5f60ff82169050919050565b611a0f816119fa565b82525050565b5f602082019050611a285f830184611a06565b92915050565b5f60208284031215611a4357611a42611880565b5b5f611a50848285016118ca565b91505092915050565b5f60208284031215611a6e57611a6d611880565b5b5f611a7b848285016118fd565b91505092915050565b5f611a8e82611884565b9050919050565b611a9e81611a84565b8114611aa8575f80fd5b50565b5f81359050611ab981611a95565b92915050565b5f60208284031215611ad457611ad3611880565b5b5f611ae184828501611aab565b91505092915050565b5f8060408385031215611b0057611aff611880565b5b5f611b0d858286016118fd565b9250506020611b1e858286016118fd565b9150509250929050565b611b31816118a3565b82525050565b5f602082019050611b4a5f830184611b28565b92915050565b611b5981611a84565b82525050565b5f602082019050611b725f830184611b50565b92915050565b5f8060408385031215611b8e57611b8d611880565b5b5f611b9b858286016118ca565b9250506020611bac858286016118ca565b9150509250929050565b5f604082019050611bc95f830185611982565b611bd66020830184611982565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c2157607f821691505b602082108103611c3457611c33611bdd565b5b50919050565b7f427579207461782063616e6e6f742065786365656420313030250000000000005f82015250565b5f611c6e601a836117e0565b9150611c7982611c3a565b602082019050919050565b5f6020820190508181035f830152611c9b81611c62565b9050919050565b7f53656c6c207461782063616e6e6f7420657863656564203130302500000000005f82015250565b5f611cd6601b836117e0565b9150611ce182611ca2565b602082019050919050565b5f6020820190508181035f830152611d0381611cca565b9050919050565b5f606082019050611d1d5f830186611b28565b611d2a6020830185611982565b611d376040830184611982565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d76826118de565b9150611d81836118de565b9250828201905080821115611d9957611d98611d3f565b5b9291505056fea26469706673582212201530a0bc90fcc78f134184eac346c454e24edcff8d0b8172e19f25714da28bfb64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2A80 CODESIZE SUB DUP1 PUSH3 0x2A80 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x816 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C6976696E672054686520447265616D00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C54440000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0xABF JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0xABF JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x133 SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x14D DUP2 PUSH3 0x296 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x18D CALLER PUSH12 0x6BB4AFE4CA85CB07A8340000 PUSH3 0x359 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1BF PUSH20 0x3E55EFC604A3E021069AA4852AB5A97798301FD5 PUSH12 0x11E110E90947DE0410340000 PUSH3 0x359 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1F1 PUSH20 0x54412E0892C534C89A076252E3824F1F7F549C52 PUSH12 0x59C13D3EA1D47881E3240000 PUSH3 0x359 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP2 MSTORE POP PUSH1 0xB PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP DUP2 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x27D DUP2 PUSH12 0x6BB4AFE4CA85CB07A8340000 PUSH3 0x359 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x28E DUP2 PUSH3 0x3E3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0xC9D JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x3CC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3C3 SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x3DF PUSH0 DUP4 DUP4 PUSH3 0x47A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x3F3 PUSH3 0x69E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x466 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x45D SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x477 DUP2 PUSH3 0x296 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x4CE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x4C1 SWAP2 SWAP1 PUSH3 0xBFC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x59F JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x55A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x551 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xC47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x5E8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x632 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x691 SWAP2 SWAP1 PUSH3 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH3 0x6AE PUSH3 0x740 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x6D4 PUSH3 0x747 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x73E JUMPI PUSH3 0x700 PUSH3 0x740 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x735 SWAP2 SWAP1 PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x79E DUP3 PUSH3 0x773 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7B0 DUP2 PUSH3 0x792 JUMP JUMPDEST DUP2 EQ PUSH3 0x7BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x7CE DUP2 PUSH3 0x7A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x7E0 DUP3 PUSH3 0x773 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7F2 DUP2 PUSH3 0x7D4 JUMP JUMPDEST DUP2 EQ PUSH3 0x7FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x810 DUP2 PUSH3 0x7E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x82F JUMPI PUSH3 0x82E PUSH3 0x76F JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x83E DUP6 DUP3 DUP7 ADD PUSH3 0x7BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x851 DUP6 DUP3 DUP7 ADD PUSH3 0x800 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x8D7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x8ED JUMPI PUSH3 0x8EC PUSH3 0x892 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x951 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x914 JUMP JUMPDEST PUSH3 0x95D DUP7 DUP4 PUSH3 0x914 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x9A7 PUSH3 0x9A1 PUSH3 0x99B DUP5 PUSH3 0x975 JUMP JUMPDEST PUSH3 0x97E JUMP JUMPDEST PUSH3 0x975 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x9C2 DUP4 PUSH3 0x987 JUMP JUMPDEST PUSH3 0x9DA PUSH3 0x9D1 DUP3 PUSH3 0x9AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x920 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x9F0 PUSH3 0x9E2 JUMP JUMPDEST PUSH3 0x9FD DUP2 DUP5 DUP5 PUSH3 0x9B7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xA24 JUMPI PUSH3 0xA18 PUSH0 DUP3 PUSH3 0x9E6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xA03 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xA73 JUMPI PUSH3 0xA3D DUP2 PUSH3 0x8F3 JUMP JUMPDEST PUSH3 0xA48 DUP5 PUSH3 0x905 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xA58 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xA70 PUSH3 0xA67 DUP6 PUSH3 0x905 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xA02 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xA95 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xA78 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xAAF DUP4 DUP4 PUSH3 0xA84 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xACA DUP3 PUSH3 0x85B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xAE6 JUMPI PUSH3 0xAE5 PUSH3 0x865 JUMP JUMPDEST JUMPDEST PUSH3 0xAF2 DUP3 SLOAD PUSH3 0x8BF JUMP JUMPDEST PUSH3 0xAFF DUP3 DUP3 DUP6 PUSH3 0xA28 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xB35 JUMPI PUSH0 DUP5 ISZERO PUSH3 0xB20 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xB2C DUP6 DUP3 PUSH3 0xAA2 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xB9B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xB45 DUP7 PUSH3 0x8F3 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xB6E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xB47 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xB8E JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xB8A PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xA84 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xBAE DUP2 PUSH3 0x7D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xBC9 PUSH0 DUP4 ADD DUP5 PUSH3 0xBA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0xC08 DUP3 PUSH3 0x975 JUMP JUMPDEST SWAP2 POP PUSH3 0xC15 DUP4 PUSH3 0x975 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xC30 JUMPI PUSH3 0xC2F PUSH3 0xBCF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xC41 DUP2 PUSH3 0x975 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xC5C PUSH0 DUP4 ADD DUP7 PUSH3 0xBA3 JUMP JUMPDEST PUSH3 0xC6B PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xC36 JUMP JUMPDEST PUSH3 0xC7A PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xC36 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xC97 PUSH0 DUP4 ADD DUP5 PUSH3 0xC36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DD5 DUP1 PUSH3 0xCAB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x225 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xE17C4C74 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xE17C4C74 EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0xEB1E7387 EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x688 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x549 JUMPI DUP1 PUSH4 0xB3A88C1B EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0xC5F956AF EQ PUSH2 0x597 JUMPI DUP1 PUSH4 0xCB4CA631 EQ PUSH2 0x5B5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5E5 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x52D JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0x72A8A933 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x4AF JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 GT PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x180 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x60D1259E EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x6605BFDA EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x6C95702B EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x6F0B00AC EQ PUSH2 0x43B JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x44337EA1 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x3AD JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x2FF2E9DC GT PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x34F JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x295 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x231 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1860 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0x748 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH2 0x76A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x19AA JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1A15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH2 0x7E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0x7F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1A59 JUMP JUMPDEST PUSH2 0x80F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x823 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D1 PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x401 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST PUSH2 0x957 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x439 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0x9A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x471 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48F PUSH2 0xADE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x499 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xB01 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D3 PUSH2 0xB21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EA SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F9 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x517 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x1860 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x547 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x542 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xC4A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x563 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x570 SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x581 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58E SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59F PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x1B5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x1B78 JUMP JUMPDEST PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60C SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x655 PUSH2 0xE15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x663 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x686 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0xE26 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6C7 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6F3 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x73E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x715 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x73E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x721 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x752 PUSH2 0xEC7 JUMP JUMPDEST SWAP1 POP PUSH2 0x75F DUP2 DUP6 DUP6 PUSH2 0xECE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x77D PUSH2 0xEC7 JUMP JUMPDEST SWAP1 POP PUSH2 0x78A DUP6 DUP3 DUP6 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x795 DUP6 DUP6 DUP6 PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH12 0x6BB4AFE4CA85CB07A8340000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH13 0x4350EDEF012DC126788340000 DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x7F7 PUSH2 0x10E9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x801 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x80B DUP3 DUP3 PUSH2 0x114A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x820 PUSH2 0x81A PUSH2 0xEC7 JUMP JUMPDEST DUP3 PUSH2 0x11C9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x82B PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x88B PUSH2 0x1062 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8FF PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x95F PUSH2 0x1062 JUMP JUMPDEST DUP1 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x9AA PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x9B5 ADDRESS DUP4 DUP4 PUSH2 0xECE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9C1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x64 DUP3 GT ISZERO PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0xA49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA40 SWAP1 PUSH2 0x1CEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xB PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x5EEE0B95930EE59011F34615B0B7DC6CC58C01D1F07D04A01A3A1E70D2554CF0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA8D SWAP3 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE6 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0xAEF PUSH0 PUSH2 0x1248 JUMP JUMPDEST JUMP JUMPDEST PUSH12 0x59C13D3EA1D47881E3240000 DUP2 JUMP JUMPDEST PUSH2 0xB13 DUP3 PUSH2 0xB0D PUSH2 0xEC7 JUMP JUMPDEST DUP4 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0xB1D DUP3 DUP3 PUSH2 0x11C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB29 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0xB31 PUSH2 0x130B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB3B PUSH2 0x1062 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBC9 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBF5 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC40 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC17 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC40 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC23 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC52 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0xC5C DUP3 DUP3 PUSH2 0x11C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC6A PUSH2 0xEC7 JUMP JUMPDEST SWAP1 POP PUSH2 0xC77 DUP2 DUP6 DUP6 PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH12 0x11E110E90947DE0410340000 DUP2 JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD5E PUSH2 0x1062 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xDBD PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xB DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0xE2E PUSH2 0x1062 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE9E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE95 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA7 DUP2 PUSH2 0x1248 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEDB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x136D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEEB DUP5 DUP5 PUSH2 0xCD4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xF6C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF5D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF54 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF6B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x136D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFE2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD9 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1052 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1049 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x105D DUP4 DUP4 DUP4 PUSH2 0x153C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x106A PUSH2 0xEC7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1088 PUSH2 0xB92 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10E7 JUMPI PUSH2 0x10AB PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DE SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x10F1 PUSH2 0x1755 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1133 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1140 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11BA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11C5 PUSH0 DUP4 DUP4 PUSH2 0x153C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1239 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1244 DUP3 PUSH0 DUP4 PUSH2 0x153C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1313 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1356 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1363 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13DD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D4 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x144D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1444 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1536 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x152D SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x158C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1580 SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x165A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1615 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16A1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16EB JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1748 SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x175D PUSH2 0x8E2 JUMP JUMPDEST PUSH2 0x1793 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x179D PUSH2 0x8E2 JUMP JUMPDEST ISZERO PUSH2 0x17D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x180D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17F2 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1832 DUP3 PUSH2 0x17D6 JUMP JUMPDEST PUSH2 0x183C DUP2 DUP6 PUSH2 0x17E0 JUMP JUMPDEST SWAP4 POP PUSH2 0x184C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x1855 DUP2 PUSH2 0x1818 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1878 DUP2 DUP5 PUSH2 0x1828 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18AD DUP3 PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18BD DUP2 PUSH2 0x18A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x18C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18D8 DUP2 PUSH2 0x18B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F0 DUP2 PUSH2 0x18DE JUMP JUMPDEST DUP2 EQ PUSH2 0x18FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x190B DUP2 PUSH2 0x18E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1927 JUMPI PUSH2 0x1926 PUSH2 0x1880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1934 DUP6 DUP3 DUP7 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1945 DUP6 DUP3 DUP7 ADD PUSH2 0x18FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1963 DUP2 PUSH2 0x194F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197C PUSH0 DUP4 ADD DUP5 PUSH2 0x195A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x198B DUP2 PUSH2 0x18DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19A4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1982 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19C1 JUMPI PUSH2 0x19C0 PUSH2 0x1880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19CE DUP7 DUP3 DUP8 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19DF DUP7 DUP3 DUP8 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19F0 DUP7 DUP3 DUP8 ADD PUSH2 0x18FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0F DUP2 PUSH2 0x19FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A28 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A43 JUMPI PUSH2 0x1A42 PUSH2 0x1880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A50 DUP5 DUP3 DUP6 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A6E JUMPI PUSH2 0x1A6D PUSH2 0x1880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A7B DUP5 DUP3 DUP6 ADD PUSH2 0x18FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A8E DUP3 PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A9E DUP2 PUSH2 0x1A84 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AB9 DUP2 PUSH2 0x1A95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD4 JUMPI PUSH2 0x1AD3 PUSH2 0x1880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AE1 DUP5 DUP3 DUP6 ADD PUSH2 0x1AAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B00 JUMPI PUSH2 0x1AFF PUSH2 0x1880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B0D DUP6 DUP3 DUP7 ADD PUSH2 0x18FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B1E DUP6 DUP3 DUP7 ADD PUSH2 0x18FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B31 DUP2 PUSH2 0x18A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B4A PUSH0 DUP4 ADD DUP5 PUSH2 0x1B28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B59 DUP2 PUSH2 0x1A84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B72 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B8E JUMPI PUSH2 0x1B8D PUSH2 0x1880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B9B DUP6 DUP3 DUP7 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BAC DUP6 DUP3 DUP7 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BC9 PUSH0 DUP4 ADD DUP6 PUSH2 0x1982 JUMP JUMPDEST PUSH2 0x1BD6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1982 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C21 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C34 JUMPI PUSH2 0x1C33 PUSH2 0x1BDD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x427579207461782063616E6E6F74206578636565642031303025000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C6E PUSH1 0x1A DUP4 PUSH2 0x17E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C79 DUP3 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C9B DUP2 PUSH2 0x1C62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656C6C207461782063616E6E6F742065786365656420313030250000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD6 PUSH1 0x1B DUP4 PUSH2 0x17E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE1 DUP3 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D03 DUP2 PUSH2 0x1CCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D1D PUSH0 DUP4 ADD DUP7 PUSH2 0x1B28 JUMP JUMPDEST PUSH2 0x1D2A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1982 JUMP JUMPDEST PUSH2 0x1D37 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1982 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D76 DUP3 PUSH2 0x18DE JUMP JUMPDEST SWAP2 POP PUSH2 0x1D81 DUP4 PUSH2 0x18DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D99 JUMPI PUSH2 0x1D98 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO ADDRESS LOG0 0xBC SWAP1 0xFC 0xC7 DUP16 SGT COINBASE DUP5 0xEA 0xC3 CHAINID 0xC4 SLOAD 0xE2 0x4E 0xDC SELFDESTRUCT DUP14 SIGNEXTEND DUP2 PUSH19 0xE19F25714DA28BFB64736F6C63430008170033 ",
							"sourceMap": "370:4362:0:-:0;;;1140:675;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1245:10;1896:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:3;1821:7;:22;;;;1241:5:9;1231:7;;:15;;;;;;;;;;;;;;;;;;1278:33:0::2;1284:10;568:20;1278:5;;;:33;;:::i;:::-;1322:74;1328:42;645:19;1322:5;;;:74;;:::i;:::-;1459:72;1465:42;719:20;1459:5;;;:72;;:::i;:::-;1557:12;;;;;;;;1563:1;1557:12;;;;1566:2;1557:12;;::::0;1542::::2;:27;;;;;;;;;;;;;;;;;;;1598:16;1580:15;;:34;;;;;;;;;;;;;;;;;;1625:31;1631:8;568:20;1625:5;;;:31;;:::i;:::-;1721:27;1739:8;1721:17;;;:27;;:::i;:::-;1140:675:::0;;370:4362;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:4:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;2543:215:1:-;1531:13;:11;;;:13;;:::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;;;:28;;:::i;:::-;2543:215:::0;:::o;6271:1107:4:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;1796:162:1:-;1866:12;:10;;;:12;;:::i;:::-;1855:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1851:101;;1928:12;:10;;;:12;;:::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:138::-;657:32;683:5;657:32;:::i;:::-;650:5;647:43;637:71;;704:1;701;694:12;637:71;576:138;:::o;720:159::-;785:5;816:6;810:13;801:22;;832:41;867:5;832:41;:::i;:::-;720:159;;;;:::o;885:96::-;922:7;951:24;969:5;951:24;:::i;:::-;940:35;;885:96;;;:::o;987:122::-;1060:24;1078:5;1060:24;:::i;:::-;1053:5;1050:35;1040:63;;1099:1;1096;1089:12;1040:63;987:122;:::o;1115:143::-;1172:5;1203:6;1197:13;1188:22;;1219:33;1246:5;1219:33;:::i;:::-;1115:143;;;;:::o;1264:523::-;1351:6;1359;1408:2;1396:9;1387:7;1383:23;1379:32;1376:119;;;1414:79;;:::i;:::-;1376:119;1534:1;1559:72;1623:7;1614:6;1603:9;1599:22;1559:72;:::i;:::-;1549:82;;1505:136;1680:2;1706:64;1762:7;1753:6;1742:9;1738:22;1706:64;:::i;:::-;1696:74;;1651:129;1264:523;;;;;:::o;1793:99::-;1845:6;1879:5;1873:12;1863:22;;1793:99;;;:::o;1898:180::-;1946:77;1943:1;1936:88;2043:4;2040:1;2033:15;2067:4;2064:1;2057:15;2084:180;2132:77;2129:1;2122:88;2229:4;2226:1;2219:15;2253:4;2250:1;2243:15;2270:320;2314:6;2351:1;2345:4;2341:12;2331:22;;2398:1;2392:4;2388:12;2419:18;2409:81;;2475:4;2467:6;2463:17;2453:27;;2409:81;2537:2;2529:6;2526:14;2506:18;2503:38;2500:84;;2556:18;;:::i;:::-;2500:84;2321:269;2270:320;;;:::o;2596:141::-;2645:4;2668:3;2660:11;;2691:3;2688:1;2681:14;2725:4;2722:1;2712:18;2704:26;;2596:141;;;:::o;2743:93::-;2780:6;2827:2;2822;2815:5;2811:14;2807:23;2797:33;;2743:93;;;:::o;2842:107::-;2886:8;2936:5;2930:4;2926:16;2905:37;;2842:107;;;;:::o;2955:393::-;3024:6;3074:1;3062:10;3058:18;3097:97;3127:66;3116:9;3097:97;:::i;:::-;3215:39;3245:8;3234:9;3215:39;:::i;:::-;3203:51;;3287:4;3283:9;3276:5;3272:21;3263:30;;3336:4;3326:8;3322:19;3315:5;3312:30;3302:40;;3031:317;;2955:393;;;;;:::o;3354:77::-;3391:7;3420:5;3409:16;;3354:77;;;:::o;3437:60::-;3465:3;3486:5;3479:12;;3437:60;;;:::o;3503:142::-;3553:9;3586:53;3604:34;3613:24;3631:5;3613:24;:::i;:::-;3604:34;:::i;:::-;3586:53;:::i;:::-;3573:66;;3503:142;;;:::o;3651:75::-;3694:3;3715:5;3708:12;;3651:75;;;:::o;3732:269::-;3842:39;3873:7;3842:39;:::i;:::-;3903:91;3952:41;3976:16;3952:41;:::i;:::-;3944:6;3937:4;3931:11;3903:91;:::i;:::-;3897:4;3890:105;3808:193;3732:269;;;:::o;4007:73::-;4052:3;4007:73;:::o;4086:189::-;4163:32;;:::i;:::-;4204:65;4262:6;4254;4248:4;4204:65;:::i;:::-;4139:136;4086:189;;:::o;4281:186::-;4341:120;4358:3;4351:5;4348:14;4341:120;;;4412:39;4449:1;4442:5;4412:39;:::i;:::-;4385:1;4378:5;4374:13;4365:22;;4341:120;;;4281:186;;:::o;4473:543::-;4574:2;4569:3;4566:11;4563:446;;;4608:38;4640:5;4608:38;:::i;:::-;4692:29;4710:10;4692:29;:::i;:::-;4682:8;4678:44;4875:2;4863:10;4860:18;4857:49;;;4896:8;4881:23;;4857:49;4919:80;4975:22;4993:3;4975:22;:::i;:::-;4965:8;4961:37;4948:11;4919:80;:::i;:::-;4578:431;;4563:446;4473:543;;;:::o;5022:117::-;5076:8;5126:5;5120:4;5116:16;5095:37;;5022:117;;;;:::o;5145:169::-;5189:6;5222:51;5270:1;5266:6;5258:5;5255:1;5251:13;5222:51;:::i;:::-;5218:56;5303:4;5297;5293:15;5283:25;;5196:118;5145:169;;;;:::o;5319:295::-;5395:4;5541:29;5566:3;5560:4;5541:29;:::i;:::-;5533:37;;5603:3;5600:1;5596:11;5590:4;5587:21;5579:29;;5319:295;;;;:::o;5619:1395::-;5736:37;5769:3;5736:37;:::i;:::-;5838:18;5830:6;5827:30;5824:56;;;5860:18;;:::i;:::-;5824:56;5904:38;5936:4;5930:11;5904:38;:::i;:::-;5989:67;6049:6;6041;6035:4;5989:67;:::i;:::-;6083:1;6107:4;6094:17;;6139:2;6131:6;6128:14;6156:1;6151:618;;;;6813:1;6830:6;6827:77;;;6879:9;6874:3;6870:19;6864:26;6855:35;;6827:77;6930:67;6990:6;6983:5;6930:67;:::i;:::-;6924:4;6917:81;6786:222;6121:887;;6151:618;6203:4;6199:9;6191:6;6187:22;6237:37;6269:4;6237:37;:::i;:::-;6296:1;6310:208;6324:7;6321:1;6318:14;6310:208;;;6403:9;6398:3;6394:19;6388:26;6380:6;6373:42;6454:1;6446:6;6442:14;6432:24;;6501:2;6490:9;6486:18;6473:31;;6347:4;6344:1;6340:12;6335:17;;6310:208;;;6546:6;6537:7;6534:19;6531:179;;;6604:9;6599:3;6595:19;6589:26;6647:48;6689:4;6681:6;6677:17;6666:9;6647:48;:::i;:::-;6639:6;6632:64;6554:156;6531:179;6756:1;6752;6744:6;6740:14;6736:22;6730:4;6723:36;6158:611;;;6121:887;;5711:1303;;;5619:1395;;:::o;7020:118::-;7107:24;7125:5;7107:24;:::i;:::-;7102:3;7095:37;7020:118;;:::o;7144:222::-;7237:4;7275:2;7264:9;7260:18;7252:26;;7288:71;7356:1;7345:9;7341:17;7332:6;7288:71;:::i;:::-;7144:222;;;;:::o;7372:180::-;7420:77;7417:1;7410:88;7517:4;7514:1;7507:15;7541:4;7538:1;7531:15;7558:191;7598:3;7617:20;7635:1;7617:20;:::i;:::-;7612:25;;7651:20;7669:1;7651:20;:::i;:::-;7646:25;;7694:1;7691;7687:9;7680:16;;7715:3;7712:1;7709:10;7706:36;;;7722:18;;:::i;:::-;7706:36;7558:191;;;;:::o;7755:118::-;7842:24;7860:5;7842:24;:::i;:::-;7837:3;7830:37;7755:118;;:::o;7879:442::-;8028:4;8066:2;8055:9;8051:18;8043:26;;8079:71;8147:1;8136:9;8132:17;8123:6;8079:71;:::i;:::-;8160:72;8228:2;8217:9;8213:18;8204:6;8160:72;:::i;:::-;8242;8310:2;8299:9;8295:18;8286:6;8242:72;:::i;:::-;7879:442;;;;;;:::o;8327:222::-;8420:4;8458:2;8447:9;8443:18;8435:26;;8471:71;8539:1;8528:9;8524:17;8515:6;8471:71;:::i;:::-;8327:222;;;;:::o;370:4362:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AIRDROP_WALLET_AMOUNT_44": {
									"entryPoint": 2801,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INITIAL_SUPPLY_30": {
									"entryPoint": 1953,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MARKETING_WALLET_AMOUNT_37": {
									"entryPoint": 3202,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_SUPPLY_23": {
									"entryPoint": 1977,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1155": {
									"entryPoint": 3790,
									"id": 1155,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1215": {
									"entryPoint": 4973,
									"id": 1215,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1137": {
									"entryPoint": 4553,
									"id": 1137,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_484": {
									"entryPoint": 4194,
									"id": 484,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1104": {
									"entryPoint": 4426,
									"id": 1104,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1426": {
									"entryPoint": 3783,
									"id": 1426,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1544": {
									"entryPoint": 4875,
									"id": 1544,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1515": {
									"entryPoint": 6037,
									"id": 1515,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1528": {
									"entryPoint": 5973,
									"id": 1528,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_1263": {
									"entryPoint": 3808,
									"id": 1263,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_546": {
									"entryPoint": 4680,
									"id": 546,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_994": {
									"entryPoint": 3954,
									"id": 994,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1560": {
									"entryPoint": 4329,
									"id": 1560,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1071": {
									"entryPoint": 5436,
									"id": 1071,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addToBlacklist_214": {
									"entryPoint": 2083,
									"id": 214,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addToWhitelist_186": {
									"entryPoint": 3509,
									"id": 186,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@adjustTaxes_379": {
									"entryPoint": 2489,
									"id": 379,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_891": {
									"entryPoint": 3284,
									"id": 891,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approveForDEX_398": {
									"entryPoint": 2466,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@approve_915": {
									"entryPoint": 1864,
									"id": 915,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_850": {
									"entryPoint": 2713,
									"id": 850,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1387": {
									"entryPoint": 2817,
									"id": 1387,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1366": {
									"entryPoint": 2063,
									"id": 1366,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_172": {
									"entryPoint": 3146,
									"id": 172,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@currentTaxes_64": {
									"entryPoint": 3605,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_828": {
									"entryPoint": 1969,
									"id": 828,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@excludeFromTax_242": {
									"entryPoint": 2295,
									"id": 242,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@includeInTax_256": {
									"entryPoint": 3414,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isBlacklisted_52": {
									"entryPoint": 3754,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isExcludedFromTax_56": {
									"entryPoint": 3255,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isWhitelisted_48": {
									"entryPoint": 1994,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_139": {
									"entryPoint": 2041,
									"id": 139,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_810": {
									"entryPoint": 1720,
									"id": 810,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_467": {
									"entryPoint": 2962,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_148": {
									"entryPoint": 2849,
									"id": 148,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1503": {
									"entryPoint": 2274,
									"id": 1503,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromBlacklist_228": {
									"entryPoint": 2179,
									"id": 228,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeFromWhitelist_200": {
									"entryPoint": 2867,
									"id": 200,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_498": {
									"entryPoint": 2782,
									"id": 498,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setTreasuryAddress_338": {
									"entryPoint": 2391,
									"id": 338,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_819": {
									"entryPoint": 3002,
									"id": 819,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_837": {
									"entryPoint": 1898,
									"id": 837,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_947": {
									"entryPoint": 1907,
									"id": 947,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_526": {
									"entryPoint": 3622,
									"id": 526,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_874": {
									"entryPoint": 3168,
									"id": 874,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasuryAddress_72": {
									"entryPoint": 3218,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_157": {
									"entryPoint": 2023,
									"id": 157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 6827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 6847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 6992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a33bfab18a6de612b6b039e5e52eb634385ebc0dbb9f4cdf64abe40396fdc2f3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e9b404c3459543b63ed5b86ced3b9da846d3c8c37f19bf2e150da762db1045e0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 7007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7434,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a33bfab18a6de612b6b039e5e52eb634385ebc0dbb9f4cdf64abe40396fdc2f3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e9b404c3459543b63ed5b86ced3b9da846d3c8c37f19bf2e150da762db1045e0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7094,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 6788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6128,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7487,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7133,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6272,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_a33bfab18a6de612b6b039e5e52eb634385ebc0dbb9f4cdf64abe40396fdc2f3": {
									"entryPoint": 7226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e9b404c3459543b63ed5b86ced3b9da846d3c8c37f19bf2e150da762db1045e0": {
									"entryPoint": 7330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 6805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11646:10",
										"nodeType": "YulBlock",
										"src": "0:11646:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "208:73:10",
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nativeSrc": "218:19:10",
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nativeSrc": "218:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nativeSrc": "246:29:10",
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:10",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nativeSrc": "261:14:10",
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:10",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:10",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:10",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nativeSrc": "349:184:10",
													"nodeType": "YulBlock",
													"src": "349:184:10",
													"statements": [
														{
															"nativeSrc": "359:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:10",
																"nodeType": "YulLiteral",
																"src": "368:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:10",
																	"nodeType": "YulTypedName",
																	"src": "363:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:10",
																"nodeType": "YulBlock",
																"src": "428:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:10"
																					},
																					"nativeSrc": "449:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:10"
																							},
																							"nativeSrc": "468:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:10"
																					},
																					"nativeSrc": "462:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:10"
																			},
																			"nativeSrc": "442:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:10"
																		},
																		"nativeSrc": "442:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:10"
																},
																"nativeSrc": "386:13:10",
																"nodeType": "YulFunctionCall",
																"src": "386:13:10"
															},
															"nativeSrc": "378:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:10",
																"nodeType": "YulBlock",
																"src": "400:19:10",
																"statements": [
																	{
																		"nativeSrc": "402:15:10",
																		"nodeType": "YulAssignment",
																		"src": "402:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:10",
																					"nodeType": "YulLiteral",
																					"src": "414:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:10"
																			},
																			"nativeSrc": "407:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:10",
																"nodeType": "YulBlock",
																"src": "382:3:10",
																"statements": []
															},
															"src": "378:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:10"
																		},
																		"nativeSrc": "507:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:10",
																		"nodeType": "YulLiteral",
																		"src": "525:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:10"
																},
																"nativeSrc": "500:27:10",
																"nodeType": "YulFunctionCall",
																"src": "500:27:10"
															},
															"nativeSrc": "500:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:10",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:10",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:10",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:246:10"
											},
											{
												"body": {
													"nativeSrc": "587:54:10",
													"nodeType": "YulBlock",
													"src": "587:54:10",
													"statements": [
														{
															"nativeSrc": "597:38:10",
															"nodeType": "YulAssignment",
															"src": "597:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:10",
																				"nodeType": "YulLiteral",
																				"src": "622:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:10"
																		},
																		"nativeSrc": "611:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:10",
																				"nodeType": "YulLiteral",
																				"src": "631:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:10"
																		},
																		"nativeSrc": "627:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:10"
																},
																"nativeSrc": "607:28:10",
																"nodeType": "YulFunctionCall",
																"src": "607:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:10",
														"nodeType": "YulTypedName",
														"src": "570:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:10",
														"nodeType": "YulTypedName",
														"src": "580:6:10",
														"type": ""
													}
												],
												"src": "539:102:10"
											},
											{
												"body": {
													"nativeSrc": "739:285:10",
													"nodeType": "YulBlock",
													"src": "739:285:10",
													"statements": [
														{
															"nativeSrc": "749:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:10"
																},
																"nativeSrc": "763:39:10",
																"nodeType": "YulFunctionCall",
																"src": "763:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:10",
																	"nodeType": "YulTypedName",
																	"src": "753:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:10",
															"nodeType": "YulAssignment",
															"src": "811:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:10"
																},
																"nativeSrc": "818:71:10",
																"nodeType": "YulFunctionCall",
																"src": "818:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:10",
																				"nodeType": "YulLiteral",
																				"src": "944:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:10"
																		},
																		"nativeSrc": "933:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:10"
																},
																"nativeSrc": "898:65:10",
																"nodeType": "YulFunctionCall",
																"src": "898:65:10"
															},
															"nativeSrc": "898:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:10"
														},
														{
															"nativeSrc": "972:46:10",
															"nodeType": "YulAssignment",
															"src": "972:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:10"
																		},
																		"nativeSrc": "988:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:10"
																},
																"nativeSrc": "979:39:10",
																"nodeType": "YulFunctionCall",
																"src": "979:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:10",
														"nodeType": "YulTypedName",
														"src": "720:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:10",
														"nodeType": "YulTypedName",
														"src": "727:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:10",
														"nodeType": "YulTypedName",
														"src": "735:3:10",
														"type": ""
													}
												],
												"src": "647:377:10"
											},
											{
												"body": {
													"nativeSrc": "1148:195:10",
													"nodeType": "YulBlock",
													"src": "1148:195:10",
													"statements": [
														{
															"nativeSrc": "1158:26:10",
															"nodeType": "YulAssignment",
															"src": "1158:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:10"
																},
																"nativeSrc": "1166:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:10"
																		},
																		"nativeSrc": "1201:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:10"
																		},
																		"nativeSrc": "1220:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:10"
																},
																"nativeSrc": "1194:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:10"
															},
															"nativeSrc": "1194:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:10"
														},
														{
															"nativeSrc": "1250:86:10",
															"nodeType": "YulAssignment",
															"src": "1250:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:10"
																},
																"nativeSrc": "1258:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:10",
														"nodeType": "YulTypedName",
														"src": "1120:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:10",
														"nodeType": "YulTypedName",
														"src": "1132:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:10",
														"nodeType": "YulTypedName",
														"src": "1143:4:10",
														"type": ""
													}
												],
												"src": "1030:313:10"
											},
											{
												"body": {
													"nativeSrc": "1389:35:10",
													"nodeType": "YulBlock",
													"src": "1389:35:10",
													"statements": [
														{
															"nativeSrc": "1399:19:10",
															"nodeType": "YulAssignment",
															"src": "1399:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:10"
																},
																"nativeSrc": "1409:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:10",
														"nodeType": "YulTypedName",
														"src": "1382:6:10",
														"type": ""
													}
												],
												"src": "1349:75:10"
											},
											{
												"body": {
													"nativeSrc": "1519:28:10",
													"nodeType": "YulBlock",
													"src": "1519:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:10"
																},
																"nativeSrc": "1529:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:10"
															},
															"nativeSrc": "1529:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:10"
											},
											{
												"body": {
													"nativeSrc": "1642:28:10",
													"nodeType": "YulBlock",
													"src": "1642:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:10"
																},
																"nativeSrc": "1652:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:10"
															},
															"nativeSrc": "1652:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:10"
											},
											{
												"body": {
													"nativeSrc": "1721:81:10",
													"nodeType": "YulBlock",
													"src": "1721:81:10",
													"statements": [
														{
															"nativeSrc": "1731:65:10",
															"nodeType": "YulAssignment",
															"src": "1731:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:10"
																},
																"nativeSrc": "1742:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:10",
														"nodeType": "YulTypedName",
														"src": "1703:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:10",
														"nodeType": "YulTypedName",
														"src": "1713:7:10",
														"type": ""
													}
												],
												"src": "1676:126:10"
											},
											{
												"body": {
													"nativeSrc": "1853:51:10",
													"nodeType": "YulBlock",
													"src": "1853:51:10",
													"statements": [
														{
															"nativeSrc": "1863:35:10",
															"nodeType": "YulAssignment",
															"src": "1863:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:10"
																},
																"nativeSrc": "1874:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:10",
														"nodeType": "YulTypedName",
														"src": "1835:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:10",
														"nodeType": "YulTypedName",
														"src": "1845:7:10",
														"type": ""
													}
												],
												"src": "1808:96:10"
											},
											{
												"body": {
													"nativeSrc": "1953:79:10",
													"nodeType": "YulBlock",
													"src": "1953:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:10",
																"nodeType": "YulBlock",
																"src": "2010:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:10"
																			},
																			"nativeSrc": "2012:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:10"
																		},
																		"nativeSrc": "2012:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:10"
																				},
																				"nativeSrc": "1983:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:10"
																		},
																		"nativeSrc": "1973:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:10"
																},
																"nativeSrc": "1966:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:10"
															},
															"nativeSrc": "1963:63:10",
															"nodeType": "YulIf",
															"src": "1963:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:10",
														"nodeType": "YulTypedName",
														"src": "1946:5:10",
														"type": ""
													}
												],
												"src": "1910:122:10"
											},
											{
												"body": {
													"nativeSrc": "2090:87:10",
													"nodeType": "YulBlock",
													"src": "2090:87:10",
													"statements": [
														{
															"nativeSrc": "2100:29:10",
															"nodeType": "YulAssignment",
															"src": "2100:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:10"
																},
																"nativeSrc": "2109:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:10"
																},
																"nativeSrc": "2138:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:10"
															},
															"nativeSrc": "2138:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:10",
														"nodeType": "YulTypedName",
														"src": "2068:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:10",
														"nodeType": "YulTypedName",
														"src": "2076:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:10",
														"nodeType": "YulTypedName",
														"src": "2084:5:10",
														"type": ""
													}
												],
												"src": "2038:139:10"
											},
											{
												"body": {
													"nativeSrc": "2228:32:10",
													"nodeType": "YulBlock",
													"src": "2228:32:10",
													"statements": [
														{
															"nativeSrc": "2238:16:10",
															"nodeType": "YulAssignment",
															"src": "2238:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:10",
																"nodeType": "YulIdentifier",
																"src": "2249:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:10",
														"nodeType": "YulTypedName",
														"src": "2210:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:10",
														"nodeType": "YulTypedName",
														"src": "2220:7:10",
														"type": ""
													}
												],
												"src": "2183:77:10"
											},
											{
												"body": {
													"nativeSrc": "2309:79:10",
													"nodeType": "YulBlock",
													"src": "2309:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:10",
																"nodeType": "YulBlock",
																"src": "2366:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:10"
																			},
																			"nativeSrc": "2368:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:10"
																		},
																		"nativeSrc": "2368:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:10"
																				},
																				"nativeSrc": "2339:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:10"
																		},
																		"nativeSrc": "2329:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:10"
																},
																"nativeSrc": "2322:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:10"
															},
															"nativeSrc": "2319:63:10",
															"nodeType": "YulIf",
															"src": "2319:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:10",
														"nodeType": "YulTypedName",
														"src": "2302:5:10",
														"type": ""
													}
												],
												"src": "2266:122:10"
											},
											{
												"body": {
													"nativeSrc": "2446:87:10",
													"nodeType": "YulBlock",
													"src": "2446:87:10",
													"statements": [
														{
															"nativeSrc": "2456:29:10",
															"nodeType": "YulAssignment",
															"src": "2456:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:10"
																},
																"nativeSrc": "2465:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:10"
																},
																"nativeSrc": "2494:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:10"
															},
															"nativeSrc": "2494:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:10",
														"nodeType": "YulTypedName",
														"src": "2424:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:10",
														"nodeType": "YulTypedName",
														"src": "2432:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:10",
														"nodeType": "YulTypedName",
														"src": "2440:5:10",
														"type": ""
													}
												],
												"src": "2394:139:10"
											},
											{
												"body": {
													"nativeSrc": "2622:391:10",
													"nodeType": "YulBlock",
													"src": "2622:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:10",
																"nodeType": "YulBlock",
																"src": "2668:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:10"
																			},
																			"nativeSrc": "2670:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:10"
																		},
																		"nativeSrc": "2670:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:10"
																		},
																		"nativeSrc": "2639:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:10"
																},
																"nativeSrc": "2635:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:10"
															},
															"nativeSrc": "2632:119:10",
															"nodeType": "YulIf",
															"src": "2632:119:10"
														},
														{
															"nativeSrc": "2761:117:10",
															"nodeType": "YulBlock",
															"src": "2761:117:10",
															"statements": [
																{
																	"nativeSrc": "2776:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:10"
																				},
																				"nativeSrc": "2836:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:10"
																		},
																		"nativeSrc": "2815:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:10",
															"nodeType": "YulBlock",
															"src": "2888:118:10",
															"statements": [
																{
																	"nativeSrc": "2903:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:10"
																				},
																				"nativeSrc": "2964:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:10"
																		},
																		"nativeSrc": "2943:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:10",
														"nodeType": "YulTypedName",
														"src": "2584:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:10",
														"nodeType": "YulTypedName",
														"src": "2595:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:10",
														"nodeType": "YulTypedName",
														"src": "2607:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:10",
														"nodeType": "YulTypedName",
														"src": "2615:6:10",
														"type": ""
													}
												],
												"src": "2539:474:10"
											},
											{
												"body": {
													"nativeSrc": "3061:48:10",
													"nodeType": "YulBlock",
													"src": "3061:48:10",
													"statements": [
														{
															"nativeSrc": "3071:32:10",
															"nodeType": "YulAssignment",
															"src": "3071:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:10"
																		},
																		"nativeSrc": "3089:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:10"
																},
																"nativeSrc": "3082:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:10",
														"nodeType": "YulTypedName",
														"src": "3043:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:10",
														"nodeType": "YulTypedName",
														"src": "3053:7:10",
														"type": ""
													}
												],
												"src": "3019:90:10"
											},
											{
												"body": {
													"nativeSrc": "3174:50:10",
													"nodeType": "YulBlock",
													"src": "3174:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:10"
																		},
																		"nativeSrc": "3196:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:10"
																},
																"nativeSrc": "3184:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:10"
															},
															"nativeSrc": "3184:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:10",
														"nodeType": "YulTypedName",
														"src": "3162:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:10",
														"nodeType": "YulTypedName",
														"src": "3169:3:10",
														"type": ""
													}
												],
												"src": "3115:109:10"
											},
											{
												"body": {
													"nativeSrc": "3322:118:10",
													"nodeType": "YulBlock",
													"src": "3322:118:10",
													"statements": [
														{
															"nativeSrc": "3332:26:10",
															"nodeType": "YulAssignment",
															"src": "3332:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:10"
																},
																"nativeSrc": "3340:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:10"
																		},
																		"nativeSrc": "3415:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:10"
																},
																"nativeSrc": "3368:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:10"
															},
															"nativeSrc": "3368:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:10",
														"nodeType": "YulTypedName",
														"src": "3294:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:10",
														"nodeType": "YulTypedName",
														"src": "3306:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:10",
														"nodeType": "YulTypedName",
														"src": "3317:4:10",
														"type": ""
													}
												],
												"src": "3230:210:10"
											},
											{
												"body": {
													"nativeSrc": "3511:53:10",
													"nodeType": "YulBlock",
													"src": "3511:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:10"
																		},
																		"nativeSrc": "3533:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:10"
																},
																"nativeSrc": "3521:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:10"
															},
															"nativeSrc": "3521:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:10",
														"nodeType": "YulTypedName",
														"src": "3499:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:10",
														"nodeType": "YulTypedName",
														"src": "3506:3:10",
														"type": ""
													}
												],
												"src": "3446:118:10"
											},
											{
												"body": {
													"nativeSrc": "3668:124:10",
													"nodeType": "YulBlock",
													"src": "3668:124:10",
													"statements": [
														{
															"nativeSrc": "3678:26:10",
															"nodeType": "YulAssignment",
															"src": "3678:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:10"
																},
																"nativeSrc": "3686:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:10"
																		},
																		"nativeSrc": "3767:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:10"
																},
																"nativeSrc": "3714:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:10"
															},
															"nativeSrc": "3714:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:10",
														"nodeType": "YulTypedName",
														"src": "3640:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:10",
														"nodeType": "YulTypedName",
														"src": "3652:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:10",
														"nodeType": "YulTypedName",
														"src": "3663:4:10",
														"type": ""
													}
												],
												"src": "3570:222:10"
											},
											{
												"body": {
													"nativeSrc": "3898:519:10",
													"nodeType": "YulBlock",
													"src": "3898:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:10",
																"nodeType": "YulBlock",
																"src": "3944:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:10"
																			},
																			"nativeSrc": "3946:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:10"
																		},
																		"nativeSrc": "3946:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:10"
																		},
																		"nativeSrc": "3915:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:10"
																},
																"nativeSrc": "3911:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:10"
															},
															"nativeSrc": "3908:119:10",
															"nodeType": "YulIf",
															"src": "3908:119:10"
														},
														{
															"nativeSrc": "4037:117:10",
															"nodeType": "YulBlock",
															"src": "4037:117:10",
															"statements": [
																{
																	"nativeSrc": "4052:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:10"
																				},
																				"nativeSrc": "4112:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:10"
																		},
																		"nativeSrc": "4091:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:10",
															"nodeType": "YulBlock",
															"src": "4164:118:10",
															"statements": [
																{
																	"nativeSrc": "4179:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:10"
																				},
																				"nativeSrc": "4240:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:10"
																		},
																		"nativeSrc": "4219:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:10",
															"nodeType": "YulBlock",
															"src": "4292:118:10",
															"statements": [
																{
																	"nativeSrc": "4307:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:10"
																				},
																				"nativeSrc": "4368:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:10"
																		},
																		"nativeSrc": "4347:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:10",
														"nodeType": "YulTypedName",
														"src": "3852:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:10",
														"nodeType": "YulTypedName",
														"src": "3863:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:10",
														"nodeType": "YulTypedName",
														"src": "3875:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:10",
														"nodeType": "YulTypedName",
														"src": "3883:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:10",
														"nodeType": "YulTypedName",
														"src": "3891:6:10",
														"type": ""
													}
												],
												"src": "3798:619:10"
											},
											{
												"body": {
													"nativeSrc": "4466:43:10",
													"nodeType": "YulBlock",
													"src": "4466:43:10",
													"statements": [
														{
															"nativeSrc": "4476:27:10",
															"nodeType": "YulAssignment",
															"src": "4476:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:10"
																},
																"nativeSrc": "4487:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:10",
														"nodeType": "YulTypedName",
														"src": "4448:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:10",
														"nodeType": "YulTypedName",
														"src": "4458:7:10",
														"type": ""
													}
												],
												"src": "4423:86:10"
											},
											{
												"body": {
													"nativeSrc": "4576:51:10",
													"nodeType": "YulBlock",
													"src": "4576:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:10"
																		},
																		"nativeSrc": "4598:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:10"
																},
																"nativeSrc": "4586:35:10",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:10"
															},
															"nativeSrc": "4586:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:10",
														"nodeType": "YulTypedName",
														"src": "4564:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:10",
														"nodeType": "YulTypedName",
														"src": "4571:3:10",
														"type": ""
													}
												],
												"src": "4515:112:10"
											},
											{
												"body": {
													"nativeSrc": "4727:120:10",
													"nodeType": "YulBlock",
													"src": "4727:120:10",
													"statements": [
														{
															"nativeSrc": "4737:26:10",
															"nodeType": "YulAssignment",
															"src": "4737:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:10"
																},
																"nativeSrc": "4745:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:10"
																		},
																		"nativeSrc": "4822:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:10"
																},
																"nativeSrc": "4773:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:10"
															},
															"nativeSrc": "4773:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:10",
														"nodeType": "YulTypedName",
														"src": "4699:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:10",
														"nodeType": "YulTypedName",
														"src": "4711:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:10",
														"nodeType": "YulTypedName",
														"src": "4722:4:10",
														"type": ""
													}
												],
												"src": "4633:214:10"
											},
											{
												"body": {
													"nativeSrc": "4919:263:10",
													"nodeType": "YulBlock",
													"src": "4919:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:10",
																"nodeType": "YulBlock",
																"src": "4965:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:10"
																			},
																			"nativeSrc": "4967:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:10"
																		},
																		"nativeSrc": "4967:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:10"
																		},
																		"nativeSrc": "4936:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:10"
																},
																"nativeSrc": "4932:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:10"
															},
															"nativeSrc": "4929:119:10",
															"nodeType": "YulIf",
															"src": "4929:119:10"
														},
														{
															"nativeSrc": "5058:117:10",
															"nodeType": "YulBlock",
															"src": "5058:117:10",
															"statements": [
																{
																	"nativeSrc": "5073:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:10"
																				},
																				"nativeSrc": "5133:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5112:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:10"
																		},
																		"nativeSrc": "5112:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4853:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:10",
														"nodeType": "YulTypedName",
														"src": "4889:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:10",
														"nodeType": "YulTypedName",
														"src": "4900:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:10",
														"nodeType": "YulTypedName",
														"src": "4912:6:10",
														"type": ""
													}
												],
												"src": "4853:329:10"
											},
											{
												"body": {
													"nativeSrc": "5254:263:10",
													"nodeType": "YulBlock",
													"src": "5254:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5300:83:10",
																"nodeType": "YulBlock",
																"src": "5300:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5302:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:10"
																			},
																			"nativeSrc": "5302:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:10"
																		},
																		"nativeSrc": "5302:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5275:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5284:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5271:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:10"
																		},
																		"nativeSrc": "5271:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5296:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5267:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:10"
																},
																"nativeSrc": "5267:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5267:32:10"
															},
															"nativeSrc": "5264:119:10",
															"nodeType": "YulIf",
															"src": "5264:119:10"
														},
														{
															"nativeSrc": "5393:117:10",
															"nodeType": "YulBlock",
															"src": "5393:117:10",
															"statements": [
																{
																	"nativeSrc": "5408:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5422:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5412:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5437:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5437:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5472:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5483:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5468:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:10"
																				},
																				"nativeSrc": "5468:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5492:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5447:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:10"
																		},
																		"nativeSrc": "5447:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5437:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5188:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5224:9:10",
														"nodeType": "YulTypedName",
														"src": "5224:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5235:7:10",
														"nodeType": "YulTypedName",
														"src": "5235:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5247:6:10",
														"nodeType": "YulTypedName",
														"src": "5247:6:10",
														"type": ""
													}
												],
												"src": "5188:329:10"
											},
											{
												"body": {
													"nativeSrc": "5576:51:10",
													"nodeType": "YulBlock",
													"src": "5576:51:10",
													"statements": [
														{
															"nativeSrc": "5586:35:10",
															"nodeType": "YulAssignment",
															"src": "5586:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5615:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5615:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5597:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5597:17:10"
																},
																"nativeSrc": "5597:24:10",
																"nodeType": "YulFunctionCall",
																"src": "5597:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5586:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5586:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "5523:104:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5558:5:10",
														"nodeType": "YulTypedName",
														"src": "5558:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5568:7:10",
														"nodeType": "YulTypedName",
														"src": "5568:7:10",
														"type": ""
													}
												],
												"src": "5523:104:10"
											},
											{
												"body": {
													"nativeSrc": "5684:87:10",
													"nodeType": "YulBlock",
													"src": "5684:87:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5749:16:10",
																"nodeType": "YulBlock",
																"src": "5749:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5758:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5758:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5761:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5761:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5751:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5751:6:10"
																			},
																			"nativeSrc": "5751:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5751:12:10"
																		},
																		"nativeSrc": "5751:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5751:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5707:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5707:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5740:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5740:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "5714:25:10",
																					"nodeType": "YulIdentifier",
																					"src": "5714:25:10"
																				},
																				"nativeSrc": "5714:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5714:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5704:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5704:2:10"
																		},
																		"nativeSrc": "5704:43:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5704:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5697:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5697:6:10"
																},
																"nativeSrc": "5697:51:10",
																"nodeType": "YulFunctionCall",
																"src": "5697:51:10"
															},
															"nativeSrc": "5694:71:10",
															"nodeType": "YulIf",
															"src": "5694:71:10"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "5633:138:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5677:5:10",
														"nodeType": "YulTypedName",
														"src": "5677:5:10",
														"type": ""
													}
												],
												"src": "5633:138:10"
											},
											{
												"body": {
													"nativeSrc": "5837:95:10",
													"nodeType": "YulBlock",
													"src": "5837:95:10",
													"statements": [
														{
															"nativeSrc": "5847:29:10",
															"nodeType": "YulAssignment",
															"src": "5847:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5869:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5869:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5856:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "5856:12:10"
																},
																"nativeSrc": "5856:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5856:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5847:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5847:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5920:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5920:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "5885:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "5885:34:10"
																},
																"nativeSrc": "5885:41:10",
																"nodeType": "YulFunctionCall",
																"src": "5885:41:10"
															},
															"nativeSrc": "5885:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "5885:41:10"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "5777:155:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5815:6:10",
														"nodeType": "YulTypedName",
														"src": "5815:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5823:3:10",
														"nodeType": "YulTypedName",
														"src": "5823:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5831:5:10",
														"nodeType": "YulTypedName",
														"src": "5831:5:10",
														"type": ""
													}
												],
												"src": "5777:155:10"
											},
											{
												"body": {
													"nativeSrc": "6012:271:10",
													"nodeType": "YulBlock",
													"src": "6012:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6058:83:10",
																"nodeType": "YulBlock",
																"src": "6058:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6060:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6060:77:10"
																			},
																			"nativeSrc": "6060:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6060:79:10"
																		},
																		"nativeSrc": "6060:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6060:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6033:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6033:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6042:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6042:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6029:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6029:3:10"
																		},
																		"nativeSrc": "6029:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6029:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6054:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6054:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6025:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6025:3:10"
																},
																"nativeSrc": "6025:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6025:32:10"
															},
															"nativeSrc": "6022:119:10",
															"nodeType": "YulIf",
															"src": "6022:119:10"
														},
														{
															"nativeSrc": "6151:125:10",
															"nodeType": "YulBlock",
															"src": "6151:125:10",
															"statements": [
																{
																	"nativeSrc": "6166:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6166:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6180:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6170:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6170:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6195:71:10",
																	"nodeType": "YulAssignment",
																	"src": "6195:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6238:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6238:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6249:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6249:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6234:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6234:3:10"
																				},
																				"nativeSrc": "6234:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6234:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6258:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6258:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "6205:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "6205:28:10"
																		},
																		"nativeSrc": "6205:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6205:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6195:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6195:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nativeSrc": "5938:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5982:9:10",
														"nodeType": "YulTypedName",
														"src": "5982:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5993:7:10",
														"nodeType": "YulTypedName",
														"src": "5993:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6005:6:10",
														"nodeType": "YulTypedName",
														"src": "6005:6:10",
														"type": ""
													}
												],
												"src": "5938:345:10"
											},
											{
												"body": {
													"nativeSrc": "6372:391:10",
													"nodeType": "YulBlock",
													"src": "6372:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6418:83:10",
																"nodeType": "YulBlock",
																"src": "6418:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6420:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6420:77:10"
																			},
																			"nativeSrc": "6420:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6420:79:10"
																		},
																		"nativeSrc": "6420:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6420:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6393:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6393:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6402:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6402:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6389:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6389:3:10"
																		},
																		"nativeSrc": "6389:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6389:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6414:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6414:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6385:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6385:3:10"
																},
																"nativeSrc": "6385:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6385:32:10"
															},
															"nativeSrc": "6382:119:10",
															"nodeType": "YulIf",
															"src": "6382:119:10"
														},
														{
															"nativeSrc": "6511:117:10",
															"nodeType": "YulBlock",
															"src": "6511:117:10",
															"statements": [
																{
																	"nativeSrc": "6526:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6526:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6540:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6540:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6530:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6530:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6555:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6555:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6590:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6590:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6601:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6601:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6586:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6586:3:10"
																				},
																				"nativeSrc": "6586:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6586:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6610:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6610:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6565:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6565:20:10"
																		},
																		"nativeSrc": "6565:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6565:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6555:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6555:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6638:118:10",
															"nodeType": "YulBlock",
															"src": "6638:118:10",
															"statements": [
																{
																	"nativeSrc": "6653:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6653:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6667:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6667:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6657:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6657:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6683:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6683:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6718:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6718:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6729:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6729:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6714:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6714:3:10"
																				},
																				"nativeSrc": "6714:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6714:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6738:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6738:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6693:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6693:20:10"
																		},
																		"nativeSrc": "6693:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6693:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6683:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6683:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "6289:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6334:9:10",
														"nodeType": "YulTypedName",
														"src": "6334:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6345:7:10",
														"nodeType": "YulTypedName",
														"src": "6345:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6357:6:10",
														"nodeType": "YulTypedName",
														"src": "6357:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6365:6:10",
														"nodeType": "YulTypedName",
														"src": "6365:6:10",
														"type": ""
													}
												],
												"src": "6289:474:10"
											},
											{
												"body": {
													"nativeSrc": "6834:53:10",
													"nodeType": "YulBlock",
													"src": "6834:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6851:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6851:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6874:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6874:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6856:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "6856:17:10"
																		},
																		"nativeSrc": "6856:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6856:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6844:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6844:6:10"
																},
																"nativeSrc": "6844:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6844:37:10"
															},
															"nativeSrc": "6844:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "6844:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6769:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6822:5:10",
														"nodeType": "YulTypedName",
														"src": "6822:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6829:3:10",
														"nodeType": "YulTypedName",
														"src": "6829:3:10",
														"type": ""
													}
												],
												"src": "6769:118:10"
											},
											{
												"body": {
													"nativeSrc": "6991:124:10",
													"nodeType": "YulBlock",
													"src": "6991:124:10",
													"statements": [
														{
															"nativeSrc": "7001:26:10",
															"nodeType": "YulAssignment",
															"src": "7001:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7013:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7013:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7024:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7024:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7009:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7009:3:10"
																},
																"nativeSrc": "7009:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7009:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7001:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7001:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7081:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7081:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7094:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7094:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7105:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7105:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7090:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7090:3:10"
																		},
																		"nativeSrc": "7090:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7090:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7037:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7037:43:10"
																},
																"nativeSrc": "7037:71:10",
																"nodeType": "YulFunctionCall",
																"src": "7037:71:10"
															},
															"nativeSrc": "7037:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "7037:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6893:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6963:9:10",
														"nodeType": "YulTypedName",
														"src": "6963:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6975:6:10",
														"nodeType": "YulTypedName",
														"src": "6975:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6986:4:10",
														"nodeType": "YulTypedName",
														"src": "6986:4:10",
														"type": ""
													}
												],
												"src": "6893:222:10"
											},
											{
												"body": {
													"nativeSrc": "7202:61:10",
													"nodeType": "YulBlock",
													"src": "7202:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7219:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7250:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7250:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "7224:25:10",
																			"nodeType": "YulIdentifier",
																			"src": "7224:25:10"
																		},
																		"nativeSrc": "7224:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7224:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7212:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7212:6:10"
																},
																"nativeSrc": "7212:45:10",
																"nodeType": "YulFunctionCall",
																"src": "7212:45:10"
															},
															"nativeSrc": "7212:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "7212:45:10"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nativeSrc": "7121:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7190:5:10",
														"nodeType": "YulTypedName",
														"src": "7190:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7197:3:10",
														"nodeType": "YulTypedName",
														"src": "7197:3:10",
														"type": ""
													}
												],
												"src": "7121:142:10"
											},
											{
												"body": {
													"nativeSrc": "7383:140:10",
													"nodeType": "YulBlock",
													"src": "7383:140:10",
													"statements": [
														{
															"nativeSrc": "7393:26:10",
															"nodeType": "YulAssignment",
															"src": "7393:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7405:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7405:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7416:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7416:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7401:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7401:3:10"
																},
																"nativeSrc": "7401:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7401:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7393:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7393:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7489:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7489:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7502:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7502:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7513:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7513:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7498:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7498:3:10"
																		},
																		"nativeSrc": "7498:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7498:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nativeSrc": "7429:59:10",
																	"nodeType": "YulIdentifier",
																	"src": "7429:59:10"
																},
																"nativeSrc": "7429:87:10",
																"nodeType": "YulFunctionCall",
																"src": "7429:87:10"
															},
															"nativeSrc": "7429:87:10",
															"nodeType": "YulExpressionStatement",
															"src": "7429:87:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nativeSrc": "7269:254:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7355:9:10",
														"nodeType": "YulTypedName",
														"src": "7355:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7367:6:10",
														"nodeType": "YulTypedName",
														"src": "7367:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7378:4:10",
														"nodeType": "YulTypedName",
														"src": "7378:4:10",
														"type": ""
													}
												],
												"src": "7269:254:10"
											},
											{
												"body": {
													"nativeSrc": "7612:391:10",
													"nodeType": "YulBlock",
													"src": "7612:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7658:83:10",
																"nodeType": "YulBlock",
																"src": "7658:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7660:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7660:77:10"
																			},
																			"nativeSrc": "7660:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7660:79:10"
																		},
																		"nativeSrc": "7660:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7660:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7633:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7633:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7642:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7642:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7629:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7629:3:10"
																		},
																		"nativeSrc": "7629:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7629:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7654:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7654:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7625:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7625:3:10"
																},
																"nativeSrc": "7625:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7625:32:10"
															},
															"nativeSrc": "7622:119:10",
															"nodeType": "YulIf",
															"src": "7622:119:10"
														},
														{
															"nativeSrc": "7751:117:10",
															"nodeType": "YulBlock",
															"src": "7751:117:10",
															"statements": [
																{
																	"nativeSrc": "7766:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7766:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7780:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7780:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7770:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7770:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7795:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7795:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7830:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7830:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7841:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7841:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7826:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7826:3:10"
																				},
																				"nativeSrc": "7826:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7826:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7850:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7850:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7805:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7805:20:10"
																		},
																		"nativeSrc": "7805:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7805:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7795:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7795:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7878:118:10",
															"nodeType": "YulBlock",
															"src": "7878:118:10",
															"statements": [
																{
																	"nativeSrc": "7893:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7893:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7907:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7907:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7897:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7897:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7923:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7923:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7958:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7958:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7969:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7969:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7954:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7954:3:10"
																				},
																				"nativeSrc": "7954:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7954:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7978:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7978:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7933:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7933:20:10"
																		},
																		"nativeSrc": "7933:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7933:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7923:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7923:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7529:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7574:9:10",
														"nodeType": "YulTypedName",
														"src": "7574:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7585:7:10",
														"nodeType": "YulTypedName",
														"src": "7585:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7597:6:10",
														"nodeType": "YulTypedName",
														"src": "7597:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7605:6:10",
														"nodeType": "YulTypedName",
														"src": "7605:6:10",
														"type": ""
													}
												],
												"src": "7529:474:10"
											},
											{
												"body": {
													"nativeSrc": "8135:206:10",
													"nodeType": "YulBlock",
													"src": "8135:206:10",
													"statements": [
														{
															"nativeSrc": "8145:26:10",
															"nodeType": "YulAssignment",
															"src": "8145:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8157:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8157:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8168:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8168:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8153:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8153:3:10"
																},
																"nativeSrc": "8153:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8153:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8145:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8145:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8225:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8225:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8238:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8238:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8249:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8249:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8234:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8234:3:10"
																		},
																		"nativeSrc": "8234:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8234:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8181:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8181:43:10"
																},
																"nativeSrc": "8181:71:10",
																"nodeType": "YulFunctionCall",
																"src": "8181:71:10"
															},
															"nativeSrc": "8181:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "8181:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8306:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8306:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8319:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8319:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8330:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8330:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8315:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8315:3:10"
																		},
																		"nativeSrc": "8315:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8315:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8262:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8262:43:10"
																},
																"nativeSrc": "8262:72:10",
																"nodeType": "YulFunctionCall",
																"src": "8262:72:10"
															},
															"nativeSrc": "8262:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "8262:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8009:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8099:9:10",
														"nodeType": "YulTypedName",
														"src": "8099:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8111:6:10",
														"nodeType": "YulTypedName",
														"src": "8111:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8119:6:10",
														"nodeType": "YulTypedName",
														"src": "8119:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8130:4:10",
														"nodeType": "YulTypedName",
														"src": "8130:4:10",
														"type": ""
													}
												],
												"src": "8009:332:10"
											},
											{
												"body": {
													"nativeSrc": "8375:152:10",
													"nodeType": "YulBlock",
													"src": "8375:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8392:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8392:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8395:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8395:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8385:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8385:6:10"
																},
																"nativeSrc": "8385:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8385:88:10"
															},
															"nativeSrc": "8385:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8385:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8489:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8489:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8492:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8492:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8482:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8482:6:10"
																},
																"nativeSrc": "8482:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8482:15:10"
															},
															"nativeSrc": "8482:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8482:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8513:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8513:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8516:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8516:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8506:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8506:6:10"
																},
																"nativeSrc": "8506:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8506:15:10"
															},
															"nativeSrc": "8506:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8506:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8347:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8347:180:10"
											},
											{
												"body": {
													"nativeSrc": "8584:269:10",
													"nodeType": "YulBlock",
													"src": "8584:269:10",
													"statements": [
														{
															"nativeSrc": "8594:22:10",
															"nodeType": "YulAssignment",
															"src": "8594:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8608:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8608:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8614:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8614:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8604:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8604:3:10"
																},
																"nativeSrc": "8604:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8604:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8594:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8594:6:10"
																}
															]
														},
														{
															"nativeSrc": "8625:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8625:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8655:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8655:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8661:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8661:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8651:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8651:3:10"
																},
																"nativeSrc": "8651:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8651:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8629:18:10",
																	"nodeType": "YulTypedName",
																	"src": "8629:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8702:51:10",
																"nodeType": "YulBlock",
																"src": "8702:51:10",
																"statements": [
																	{
																		"nativeSrc": "8716:27:10",
																		"nodeType": "YulAssignment",
																		"src": "8716:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8730:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8730:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8738:4:10",
																					"nodeType": "YulLiteral",
																					"src": "8738:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8726:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "8726:3:10"
																			},
																			"nativeSrc": "8726:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8726:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8716:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8716:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8682:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "8682:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8675:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8675:6:10"
																},
																"nativeSrc": "8675:26:10",
																"nodeType": "YulFunctionCall",
																"src": "8675:26:10"
															},
															"nativeSrc": "8672:81:10",
															"nodeType": "YulIf",
															"src": "8672:81:10"
														},
														{
															"body": {
																"nativeSrc": "8805:42:10",
																"nodeType": "YulBlock",
																"src": "8805:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8819:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8819:16:10"
																			},
																			"nativeSrc": "8819:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8819:18:10"
																		},
																		"nativeSrc": "8819:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8819:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8769:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "8769:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8792:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8792:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8800:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8800:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8789:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8789:2:10"
																		},
																		"nativeSrc": "8789:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8789:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8766:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8766:2:10"
																},
																"nativeSrc": "8766:38:10",
																"nodeType": "YulFunctionCall",
																"src": "8766:38:10"
															},
															"nativeSrc": "8763:84:10",
															"nodeType": "YulIf",
															"src": "8763:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8533:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8568:4:10",
														"nodeType": "YulTypedName",
														"src": "8568:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8577:6:10",
														"nodeType": "YulTypedName",
														"src": "8577:6:10",
														"type": ""
													}
												],
												"src": "8533:320:10"
											},
											{
												"body": {
													"nativeSrc": "8965:70:10",
													"nodeType": "YulBlock",
													"src": "8965:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8987:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8987:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8995:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8995:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8983:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8983:3:10"
																		},
																		"nativeSrc": "8983:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8983:14:10"
																	},
																	{
																		"hexValue": "427579207461782063616e6e6f74206578636565642031303025",
																		"kind": "string",
																		"nativeSrc": "8999:28:10",
																		"nodeType": "YulLiteral",
																		"src": "8999:28:10",
																		"type": "",
																		"value": "Buy tax cannot exceed 100%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8976:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8976:6:10"
																},
																"nativeSrc": "8976:52:10",
																"nodeType": "YulFunctionCall",
																"src": "8976:52:10"
															},
															"nativeSrc": "8976:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "8976:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_a33bfab18a6de612b6b039e5e52eb634385ebc0dbb9f4cdf64abe40396fdc2f3",
												"nativeSrc": "8859:176:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8957:6:10",
														"nodeType": "YulTypedName",
														"src": "8957:6:10",
														"type": ""
													}
												],
												"src": "8859:176:10"
											},
											{
												"body": {
													"nativeSrc": "9187:220:10",
													"nodeType": "YulBlock",
													"src": "9187:220:10",
													"statements": [
														{
															"nativeSrc": "9197:74:10",
															"nodeType": "YulAssignment",
															"src": "9197:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9263:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9263:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9268:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9268:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9204:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9204:58:10"
																},
																"nativeSrc": "9204:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9204:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9197:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9197:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9369:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9369:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a33bfab18a6de612b6b039e5e52eb634385ebc0dbb9f4cdf64abe40396fdc2f3",
																	"nativeSrc": "9280:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9280:88:10"
																},
																"nativeSrc": "9280:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9280:93:10"
															},
															"nativeSrc": "9280:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9280:93:10"
														},
														{
															"nativeSrc": "9382:19:10",
															"nodeType": "YulAssignment",
															"src": "9382:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9393:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9393:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9398:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9398:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9389:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9389:3:10"
																},
																"nativeSrc": "9389:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9389:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9382:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9382:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a33bfab18a6de612b6b039e5e52eb634385ebc0dbb9f4cdf64abe40396fdc2f3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9041:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9175:3:10",
														"nodeType": "YulTypedName",
														"src": "9175:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9183:3:10",
														"nodeType": "YulTypedName",
														"src": "9183:3:10",
														"type": ""
													}
												],
												"src": "9041:366:10"
											},
											{
												"body": {
													"nativeSrc": "9584:248:10",
													"nodeType": "YulBlock",
													"src": "9584:248:10",
													"statements": [
														{
															"nativeSrc": "9594:26:10",
															"nodeType": "YulAssignment",
															"src": "9594:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9606:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9606:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9617:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9617:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9602:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9602:3:10"
																},
																"nativeSrc": "9602:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9602:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9594:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9594:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9641:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9641:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9652:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9652:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9637:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9637:3:10"
																		},
																		"nativeSrc": "9637:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9637:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9660:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9660:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9666:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9666:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9656:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9656:3:10"
																		},
																		"nativeSrc": "9656:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9656:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9630:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9630:6:10"
																},
																"nativeSrc": "9630:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9630:47:10"
															},
															"nativeSrc": "9630:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9630:47:10"
														},
														{
															"nativeSrc": "9686:139:10",
															"nodeType": "YulAssignment",
															"src": "9686:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9820:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9820:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a33bfab18a6de612b6b039e5e52eb634385ebc0dbb9f4cdf64abe40396fdc2f3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9694:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9694:124:10"
																},
																"nativeSrc": "9694:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9694:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9686:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9686:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a33bfab18a6de612b6b039e5e52eb634385ebc0dbb9f4cdf64abe40396fdc2f3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9413:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9564:9:10",
														"nodeType": "YulTypedName",
														"src": "9564:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9579:4:10",
														"nodeType": "YulTypedName",
														"src": "9579:4:10",
														"type": ""
													}
												],
												"src": "9413:419:10"
											},
											{
												"body": {
													"nativeSrc": "9944:71:10",
													"nodeType": "YulBlock",
													"src": "9944:71:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9966:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9966:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9974:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9974:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9962:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9962:3:10"
																		},
																		"nativeSrc": "9962:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9962:14:10"
																	},
																	{
																		"hexValue": "53656c6c207461782063616e6e6f74206578636565642031303025",
																		"kind": "string",
																		"nativeSrc": "9978:29:10",
																		"nodeType": "YulLiteral",
																		"src": "9978:29:10",
																		"type": "",
																		"value": "Sell tax cannot exceed 100%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9955:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9955:6:10"
																},
																"nativeSrc": "9955:53:10",
																"nodeType": "YulFunctionCall",
																"src": "9955:53:10"
															},
															"nativeSrc": "9955:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "9955:53:10"
														}
													]
												},
												"name": "store_literal_in_memory_e9b404c3459543b63ed5b86ced3b9da846d3c8c37f19bf2e150da762db1045e0",
												"nativeSrc": "9838:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9936:6:10",
														"nodeType": "YulTypedName",
														"src": "9936:6:10",
														"type": ""
													}
												],
												"src": "9838:177:10"
											},
											{
												"body": {
													"nativeSrc": "10167:220:10",
													"nodeType": "YulBlock",
													"src": "10167:220:10",
													"statements": [
														{
															"nativeSrc": "10177:74:10",
															"nodeType": "YulAssignment",
															"src": "10177:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10243:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10243:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10248:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10248:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10184:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10184:58:10"
																},
																"nativeSrc": "10184:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10184:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10177:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10177:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10349:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10349:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e9b404c3459543b63ed5b86ced3b9da846d3c8c37f19bf2e150da762db1045e0",
																	"nativeSrc": "10260:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10260:88:10"
																},
																"nativeSrc": "10260:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10260:93:10"
															},
															"nativeSrc": "10260:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10260:93:10"
														},
														{
															"nativeSrc": "10362:19:10",
															"nodeType": "YulAssignment",
															"src": "10362:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10373:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10373:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10378:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10378:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10369:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10369:3:10"
																},
																"nativeSrc": "10369:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10369:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10362:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10362:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e9b404c3459543b63ed5b86ced3b9da846d3c8c37f19bf2e150da762db1045e0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10021:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10155:3:10",
														"nodeType": "YulTypedName",
														"src": "10155:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10163:3:10",
														"nodeType": "YulTypedName",
														"src": "10163:3:10",
														"type": ""
													}
												],
												"src": "10021:366:10"
											},
											{
												"body": {
													"nativeSrc": "10564:248:10",
													"nodeType": "YulBlock",
													"src": "10564:248:10",
													"statements": [
														{
															"nativeSrc": "10574:26:10",
															"nodeType": "YulAssignment",
															"src": "10574:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10586:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10586:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10597:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10597:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10582:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10582:3:10"
																},
																"nativeSrc": "10582:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10582:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10574:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10574:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10621:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10621:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10632:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10632:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10617:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10617:3:10"
																		},
																		"nativeSrc": "10617:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10617:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10640:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10640:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10646:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10646:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10636:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10636:3:10"
																		},
																		"nativeSrc": "10636:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10636:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10610:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10610:6:10"
																},
																"nativeSrc": "10610:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10610:47:10"
															},
															"nativeSrc": "10610:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10610:47:10"
														},
														{
															"nativeSrc": "10666:139:10",
															"nodeType": "YulAssignment",
															"src": "10666:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10800:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10800:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e9b404c3459543b63ed5b86ced3b9da846d3c8c37f19bf2e150da762db1045e0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10674:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10674:124:10"
																},
																"nativeSrc": "10674:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10674:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10666:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10666:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e9b404c3459543b63ed5b86ced3b9da846d3c8c37f19bf2e150da762db1045e0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10393:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10544:9:10",
														"nodeType": "YulTypedName",
														"src": "10544:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10559:4:10",
														"nodeType": "YulTypedName",
														"src": "10559:4:10",
														"type": ""
													}
												],
												"src": "10393:419:10"
											},
											{
												"body": {
													"nativeSrc": "10972:288:10",
													"nodeType": "YulBlock",
													"src": "10972:288:10",
													"statements": [
														{
															"nativeSrc": "10982:26:10",
															"nodeType": "YulAssignment",
															"src": "10982:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10994:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10994:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11005:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11005:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10990:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10990:3:10"
																},
																"nativeSrc": "10990:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10990:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10982:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10982:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11062:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11062:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11075:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11075:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11086:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11086:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11071:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11071:3:10"
																		},
																		"nativeSrc": "11071:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11071:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11018:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11018:43:10"
																},
																"nativeSrc": "11018:71:10",
																"nodeType": "YulFunctionCall",
																"src": "11018:71:10"
															},
															"nativeSrc": "11018:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "11018:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11143:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11143:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11156:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11156:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11167:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11167:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11152:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11152:3:10"
																		},
																		"nativeSrc": "11152:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11152:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11099:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11099:43:10"
																},
																"nativeSrc": "11099:72:10",
																"nodeType": "YulFunctionCall",
																"src": "11099:72:10"
															},
															"nativeSrc": "11099:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "11099:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11225:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11225:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11238:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11238:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11249:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11249:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11234:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11234:3:10"
																		},
																		"nativeSrc": "11234:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11234:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11181:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11181:43:10"
																},
																"nativeSrc": "11181:72:10",
																"nodeType": "YulFunctionCall",
																"src": "11181:72:10"
															},
															"nativeSrc": "11181:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "11181:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10818:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10928:9:10",
														"nodeType": "YulTypedName",
														"src": "10928:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10940:6:10",
														"nodeType": "YulTypedName",
														"src": "10940:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10948:6:10",
														"nodeType": "YulTypedName",
														"src": "10948:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10956:6:10",
														"nodeType": "YulTypedName",
														"src": "10956:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10967:4:10",
														"nodeType": "YulTypedName",
														"src": "10967:4:10",
														"type": ""
													}
												],
												"src": "10818:442:10"
											},
											{
												"body": {
													"nativeSrc": "11294:152:10",
													"nodeType": "YulBlock",
													"src": "11294:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11311:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11311:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11314:77:10",
																		"nodeType": "YulLiteral",
																		"src": "11314:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11304:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11304:6:10"
																},
																"nativeSrc": "11304:88:10",
																"nodeType": "YulFunctionCall",
																"src": "11304:88:10"
															},
															"nativeSrc": "11304:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "11304:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11408:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11408:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11411:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11411:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11401:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11401:6:10"
																},
																"nativeSrc": "11401:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11401:15:10"
															},
															"nativeSrc": "11401:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "11401:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11432:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11432:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11435:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11435:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11425:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11425:6:10"
																},
																"nativeSrc": "11425:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11425:15:10"
															},
															"nativeSrc": "11425:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "11425:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11266:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "11266:180:10"
											},
											{
												"body": {
													"nativeSrc": "11496:147:10",
													"nodeType": "YulBlock",
													"src": "11496:147:10",
													"statements": [
														{
															"nativeSrc": "11506:25:10",
															"nodeType": "YulAssignment",
															"src": "11506:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11529:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11529:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11511:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11511:17:10"
																},
																"nativeSrc": "11511:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11511:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11506:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11506:1:10"
																}
															]
														},
														{
															"nativeSrc": "11540:25:10",
															"nodeType": "YulAssignment",
															"src": "11540:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11563:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11563:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11545:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11545:17:10"
																},
																"nativeSrc": "11545:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11545:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11540:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11540:1:10"
																}
															]
														},
														{
															"nativeSrc": "11574:16:10",
															"nodeType": "YulAssignment",
															"src": "11574:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11585:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11585:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11588:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11588:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11581:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11581:3:10"
																},
																"nativeSrc": "11581:9:10",
																"nodeType": "YulFunctionCall",
																"src": "11581:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11574:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11574:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11614:22:10",
																"nodeType": "YulBlock",
																"src": "11614:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11616:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "11616:16:10"
																			},
																			"nativeSrc": "11616:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11616:18:10"
																		},
																		"nativeSrc": "11616:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11616:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11606:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11606:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11609:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11609:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11603:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "11603:2:10"
																},
																"nativeSrc": "11603:10:10",
																"nodeType": "YulFunctionCall",
																"src": "11603:10:10"
															},
															"nativeSrc": "11600:36:10",
															"nodeType": "YulIf",
															"src": "11600:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11452:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11483:1:10",
														"nodeType": "YulTypedName",
														"src": "11483:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11486:1:10",
														"nodeType": "YulTypedName",
														"src": "11486:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11492:3:10",
														"nodeType": "YulTypedName",
														"src": "11492:3:10",
														"type": ""
													}
												],
												"src": "11452:191:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_a33bfab18a6de612b6b039e5e52eb634385ebc0dbb9f4cdf64abe40396fdc2f3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Buy tax cannot exceed 100%\")\n\n    }\n\n    function abi_encode_t_stringliteral_a33bfab18a6de612b6b039e5e52eb634385ebc0dbb9f4cdf64abe40396fdc2f3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_a33bfab18a6de612b6b039e5e52eb634385ebc0dbb9f4cdf64abe40396fdc2f3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a33bfab18a6de612b6b039e5e52eb634385ebc0dbb9f4cdf64abe40396fdc2f3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a33bfab18a6de612b6b039e5e52eb634385ebc0dbb9f4cdf64abe40396fdc2f3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e9b404c3459543b63ed5b86ced3b9da846d3c8c37f19bf2e150da762db1045e0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sell tax cannot exceed 100%\")\n\n    }\n\n    function abi_encode_t_stringliteral_e9b404c3459543b63ed5b86ced3b9da846d3c8c37f19bf2e150da762db1045e0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_e9b404c3459543b63ed5b86ced3b9da846d3c8c37f19bf2e150da762db1045e0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e9b404c3459543b63ed5b86ced3b9da846d3c8c37f19bf2e150da762db1045e0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e9b404c3459543b63ed5b86ced3b9da846d3c8c37f19bf2e150da762db1045e0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610225575f3560e01c806370a082311161012e578063a9059cbb116100b6578063e17c4c741161007a578063e17c4c7414610615578063e43252d714610631578063eb1e73871461064d578063f2fde38b1461066c578063fe575a871461068857610225565b8063a9059cbb14610549578063b3a88c1b14610579578063c5f956af14610597578063cb4ca631146105b5578063dd62ed3e146105e557610225565b80638456cb59116100fd5780638456cb59146104cb5780638ab1d681146104d55780638da5cb5b146104f157806395d89b411461050f5780639dc29fac1461052d57610225565b806370a0823114610457578063715018a61461048757806372a8a9331461049157806379cc6790146104af57610225565b806340c10f19116101b15780635c975abb116101805780635c975abb146103c957806360d1259e146103e75780636605bfda146104035780636c95702b1461041f5780636f0b00ac1461043b57610225565b806340c10f191461035957806342966c681461037557806344337ea114610391578063537df3b6146103ad57610225565b80632ff2e9dc116101f85780632ff2e9dc146102c5578063313ce567146102e357806332cb6b0c146103015780633af32abf1461031f5780633f4ba83a1461034f57610225565b806306fdde0314610229578063095ea7b31461024757806318160ddd1461027757806323b872dd14610295575b5f80fd5b6102316106b8565b60405161023e9190611860565b60405180910390f35b610261600480360381019061025c9190611911565b610748565b60405161026e9190611969565b60405180910390f35b61027f61076a565b60405161028c9190611991565b60405180910390f35b6102af60048036038101906102aa91906119aa565b610773565b6040516102bc9190611969565b60405180910390f35b6102cd6107a1565b6040516102da9190611991565b60405180910390f35b6102eb6107b1565b6040516102f89190611a15565b60405180910390f35b6103096107b9565b6040516103169190611991565b60405180910390f35b61033960048036038101906103349190611a2e565b6107ca565b6040516103469190611969565b60405180910390f35b6103576107e7565b005b610373600480360381019061036e9190611911565b6107f9565b005b61038f600480360381019061038a9190611a59565b61080f565b005b6103ab60048036038101906103a69190611a2e565b610823565b005b6103c760048036038101906103c29190611a2e565b610883565b005b6103d16108e2565b6040516103de9190611969565b60405180910390f35b61040160048036038101906103fc9190611a2e565b6108f7565b005b61041d60048036038101906104189190611abf565b610957565b005b61043960048036038101906104349190611911565b6109a2565b005b61045560048036038101906104509190611aea565b6109b9565b005b610471600480360381019061046c9190611a2e565b610a99565b60405161047e9190611991565b60405180910390f35b61048f610ade565b005b610499610af1565b6040516104a69190611991565b60405180910390f35b6104c960048036038101906104c49190611911565b610b01565b005b6104d3610b21565b005b6104ef60048036038101906104ea9190611a2e565b610b33565b005b6104f9610b92565b6040516105069190611b37565b60405180910390f35b610517610bba565b6040516105249190611860565b60405180910390f35b61054760048036038101906105429190611911565b610c4a565b005b610563600480360381019061055e9190611911565b610c60565b6040516105709190611969565b60405180910390f35b610581610c82565b60405161058e9190611991565b60405180910390f35b61059f610c92565b6040516105ac9190611b5f565b60405180910390f35b6105cf60048036038101906105ca9190611a2e565b610cb7565b6040516105dc9190611969565b60405180910390f35b6105ff60048036038101906105fa9190611b78565b610cd4565b60405161060c9190611991565b60405180910390f35b61062f600480360381019061062a9190611a2e565b610d56565b005b61064b60048036038101906106469190611a2e565b610db5565b005b610655610e15565b604051610663929190611bb6565b60405180910390f35b61068660048036038101906106819190611a2e565b610e26565b005b6106a2600480360381019061069d9190611a2e565b610eaa565b6040516106af9190611969565b60405180910390f35b6060600380546106c790611c0a565b80601f01602080910402602001604051908101604052809291908181526020018280546106f390611c0a565b801561073e5780601f106107155761010080835404028352916020019161073e565b820191905f5260205f20905b81548152906001019060200180831161072157829003601f168201915b5050505050905090565b5f80610752610ec7565b905061075f818585610ece565b600191505092915050565b5f600254905090565b5f8061077d610ec7565b905061078a858285610ee0565b610795858585610f72565b60019150509392505050565b6b6bb4afe4ca85cb07a834000081565b5f6012905090565b6c04350edef012dc12678834000081565b6008602052805f5260405f205f915054906101000a900460ff1681565b6107ef611062565b6107f76110e9565b565b610801611062565b61080b828261114a565b5050565b61082061081a610ec7565b826111c9565b50565b61082b611062565b600160095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b61088b611062565b5f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60075f9054906101000a900460ff16905090565b6108ff611062565b6001600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b61095f611062565b80600d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6109aa611062565b6109b5308383610ece565b5050565b6109c1611062565b6064821115610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611c84565b60405180910390fd5b6064811115610a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4090611cec565b60405180910390fd5b81600b5f018190555080600b600101819055507f5eee0b95930ee59011f34615b0b7dc6cc58c01d1f07d04a01a3a1e70d2554cf08282604051610a8d929190611bb6565b60405180910390a15050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610ae6611062565b610aef5f611248565b565b6b59c13d3ea1d47881e324000081565b610b1382610b0d610ec7565b83610ee0565b610b1d82826111c9565b5050565b610b29611062565b610b3161130b565b565b610b3b611062565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610bc990611c0a565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf590611c0a565b8015610c405780601f10610c1757610100808354040283529160200191610c40565b820191905f5260205f20905b815481529060010190602001808311610c2357829003601f168201915b5050505050905090565b610c52611062565b610c5c82826111c9565b5050565b5f80610c6a610ec7565b9050610c77818585610f72565b600191505092915050565b6b11e110e90947de041034000081565b600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a602052805f5260405f205f915054906101000a900460ff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610d5e611062565b5f600a5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610dbd611062565b600160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b600b805f0154908060010154905082565b610e2e611062565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e9e575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e959190611b37565b60405180910390fd5b610ea781611248565b50565b6009602052805f5260405f205f915054906101000a900460ff1681565b5f33905090565b610edb838383600161136d565b505050565b5f610eeb8484610cd4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f6c5781811015610f5d578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f5493929190611d0a565b60405180910390fd5b610f6b84848484035f61136d565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fe2575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610fd99190611b37565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611052575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110499190611b37565b60405180910390fd5b61105d83838361153c565b505050565b61106a610ec7565b73ffffffffffffffffffffffffffffffffffffffff16611088610b92565b73ffffffffffffffffffffffffffffffffffffffff16146110e7576110ab610ec7565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110de9190611b37565b60405180910390fd5b565b6110f1611755565b5f60075f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611133610ec7565b6040516111409190611b37565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111ba575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111b19190611b37565b60405180910390fd5b6111c55f838361153c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611239575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112309190611b37565b60405180910390fd5b611244825f8361153c565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611313611795565b600160075f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611356610ec7565b6040516113639190611b37565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036113dd575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016113d49190611b37565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361144d575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114449190611b37565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611536578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161152d9190611991565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361158c578060025f8282546115809190611d6c565b9250508190555061165a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611615578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161160c93929190611d0a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116a1578060025f82825403925050819055506116eb565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117489190611991565b60405180910390a3505050565b61175d6108e2565b611793576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61179d6108e2565b156117d4576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561180d5780820151818401526020810190506117f2565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611832826117d6565b61183c81856117e0565b935061184c8185602086016117f0565b61185581611818565b840191505092915050565b5f6020820190508181035f8301526118788184611828565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118ad82611884565b9050919050565b6118bd816118a3565b81146118c7575f80fd5b50565b5f813590506118d8816118b4565b92915050565b5f819050919050565b6118f0816118de565b81146118fa575f80fd5b50565b5f8135905061190b816118e7565b92915050565b5f806040838503121561192757611926611880565b5b5f611934858286016118ca565b9250506020611945858286016118fd565b9150509250929050565b5f8115159050919050565b6119638161194f565b82525050565b5f60208201905061197c5f83018461195a565b92915050565b61198b816118de565b82525050565b5f6020820190506119a45f830184611982565b92915050565b5f805f606084860312156119c1576119c0611880565b5b5f6119ce868287016118ca565b93505060206119df868287016118ca565b92505060406119f0868287016118fd565b9150509250925092565b5f60ff82169050919050565b611a0f816119fa565b82525050565b5f602082019050611a285f830184611a06565b92915050565b5f60208284031215611a4357611a42611880565b5b5f611a50848285016118ca565b91505092915050565b5f60208284031215611a6e57611a6d611880565b5b5f611a7b848285016118fd565b91505092915050565b5f611a8e82611884565b9050919050565b611a9e81611a84565b8114611aa8575f80fd5b50565b5f81359050611ab981611a95565b92915050565b5f60208284031215611ad457611ad3611880565b5b5f611ae184828501611aab565b91505092915050565b5f8060408385031215611b0057611aff611880565b5b5f611b0d858286016118fd565b9250506020611b1e858286016118fd565b9150509250929050565b611b31816118a3565b82525050565b5f602082019050611b4a5f830184611b28565b92915050565b611b5981611a84565b82525050565b5f602082019050611b725f830184611b50565b92915050565b5f8060408385031215611b8e57611b8d611880565b5b5f611b9b858286016118ca565b9250506020611bac858286016118ca565b9150509250929050565b5f604082019050611bc95f830185611982565b611bd66020830184611982565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c2157607f821691505b602082108103611c3457611c33611bdd565b5b50919050565b7f427579207461782063616e6e6f742065786365656420313030250000000000005f82015250565b5f611c6e601a836117e0565b9150611c7982611c3a565b602082019050919050565b5f6020820190508181035f830152611c9b81611c62565b9050919050565b7f53656c6c207461782063616e6e6f7420657863656564203130302500000000005f82015250565b5f611cd6601b836117e0565b9150611ce182611ca2565b602082019050919050565b5f6020820190508181035f830152611d0381611cca565b9050919050565b5f606082019050611d1d5f830186611b28565b611d2a6020830185611982565b611d376040830184611982565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d76826118de565b9150611d81836118de565b9250828201905080821115611d9957611d98611d3f565b5b9291505056fea26469706673582212201530a0bc90fcc78f134184eac346c454e24edcff8d0b8172e19f25714da28bfb64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x225 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xE17C4C74 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xE17C4C74 EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0xEB1E7387 EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x688 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x549 JUMPI DUP1 PUSH4 0xB3A88C1B EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0xC5F956AF EQ PUSH2 0x597 JUMPI DUP1 PUSH4 0xCB4CA631 EQ PUSH2 0x5B5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5E5 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x52D JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0x72A8A933 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x4AF JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 GT PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x180 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x60D1259E EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x6605BFDA EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x6C95702B EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x6F0B00AC EQ PUSH2 0x43B JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x44337EA1 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x3AD JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x2FF2E9DC GT PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x34F JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x295 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x231 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1860 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0x748 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH2 0x76A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x19AA JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1A15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH2 0x7E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0x7F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1A59 JUMP JUMPDEST PUSH2 0x80F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x823 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D1 PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x401 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST PUSH2 0x957 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x439 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0x9A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x1AEA JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x471 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48F PUSH2 0xADE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x499 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xB01 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D3 PUSH2 0xB21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EA SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F9 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x517 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x1860 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x547 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x542 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xC4A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x563 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x570 SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x581 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58E SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59F PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x1B5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x1B78 JUMP JUMPDEST PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60C SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x655 PUSH2 0xE15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x663 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x686 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0xE26 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6C7 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6F3 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x73E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x715 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x73E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x721 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x752 PUSH2 0xEC7 JUMP JUMPDEST SWAP1 POP PUSH2 0x75F DUP2 DUP6 DUP6 PUSH2 0xECE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x77D PUSH2 0xEC7 JUMP JUMPDEST SWAP1 POP PUSH2 0x78A DUP6 DUP3 DUP6 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x795 DUP6 DUP6 DUP6 PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH12 0x6BB4AFE4CA85CB07A8340000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH13 0x4350EDEF012DC126788340000 DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x7F7 PUSH2 0x10E9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x801 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x80B DUP3 DUP3 PUSH2 0x114A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x820 PUSH2 0x81A PUSH2 0xEC7 JUMP JUMPDEST DUP3 PUSH2 0x11C9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x82B PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x88B PUSH2 0x1062 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8FF PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x95F PUSH2 0x1062 JUMP JUMPDEST DUP1 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x9AA PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x9B5 ADDRESS DUP4 DUP4 PUSH2 0xECE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9C1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x64 DUP3 GT ISZERO PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1C84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0xA49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA40 SWAP1 PUSH2 0x1CEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xB PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x5EEE0B95930EE59011F34615B0B7DC6CC58C01D1F07D04A01A3A1E70D2554CF0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA8D SWAP3 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE6 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0xAEF PUSH0 PUSH2 0x1248 JUMP JUMPDEST JUMP JUMPDEST PUSH12 0x59C13D3EA1D47881E3240000 DUP2 JUMP JUMPDEST PUSH2 0xB13 DUP3 PUSH2 0xB0D PUSH2 0xEC7 JUMP JUMPDEST DUP4 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0xB1D DUP3 DUP3 PUSH2 0x11C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB29 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0xB31 PUSH2 0x130B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB3B PUSH2 0x1062 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBC9 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBF5 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC40 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC17 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC40 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC23 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC52 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0xC5C DUP3 DUP3 PUSH2 0x11C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC6A PUSH2 0xEC7 JUMP JUMPDEST SWAP1 POP PUSH2 0xC77 DUP2 DUP6 DUP6 PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH12 0x11E110E90947DE0410340000 DUP2 JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD5E PUSH2 0x1062 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xDBD PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xB DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0xE2E PUSH2 0x1062 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE9E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE95 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA7 DUP2 PUSH2 0x1248 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEDB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x136D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEEB DUP5 DUP5 PUSH2 0xCD4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xF6C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF5D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF54 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF6B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x136D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFE2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD9 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1052 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1049 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x105D DUP4 DUP4 DUP4 PUSH2 0x153C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x106A PUSH2 0xEC7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1088 PUSH2 0xB92 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10E7 JUMPI PUSH2 0x10AB PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DE SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x10F1 PUSH2 0x1755 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1133 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1140 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11BA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11C5 PUSH0 DUP4 DUP4 PUSH2 0x153C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1239 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1244 DUP3 PUSH0 DUP4 PUSH2 0x153C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1313 PUSH2 0x1795 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1356 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1363 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13DD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D4 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x144D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1444 SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1536 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x152D SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x158C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1580 SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x165A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1615 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16A1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16EB JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1748 SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x175D PUSH2 0x8E2 JUMP JUMPDEST PUSH2 0x1793 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x179D PUSH2 0x8E2 JUMP JUMPDEST ISZERO PUSH2 0x17D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x180D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x17F2 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1832 DUP3 PUSH2 0x17D6 JUMP JUMPDEST PUSH2 0x183C DUP2 DUP6 PUSH2 0x17E0 JUMP JUMPDEST SWAP4 POP PUSH2 0x184C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x1855 DUP2 PUSH2 0x1818 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1878 DUP2 DUP5 PUSH2 0x1828 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18AD DUP3 PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18BD DUP2 PUSH2 0x18A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x18C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18D8 DUP2 PUSH2 0x18B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F0 DUP2 PUSH2 0x18DE JUMP JUMPDEST DUP2 EQ PUSH2 0x18FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x190B DUP2 PUSH2 0x18E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1927 JUMPI PUSH2 0x1926 PUSH2 0x1880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1934 DUP6 DUP3 DUP7 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1945 DUP6 DUP3 DUP7 ADD PUSH2 0x18FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1963 DUP2 PUSH2 0x194F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197C PUSH0 DUP4 ADD DUP5 PUSH2 0x195A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x198B DUP2 PUSH2 0x18DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19A4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1982 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19C1 JUMPI PUSH2 0x19C0 PUSH2 0x1880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19CE DUP7 DUP3 DUP8 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19DF DUP7 DUP3 DUP8 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19F0 DUP7 DUP3 DUP8 ADD PUSH2 0x18FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0F DUP2 PUSH2 0x19FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A28 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A43 JUMPI PUSH2 0x1A42 PUSH2 0x1880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A50 DUP5 DUP3 DUP6 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A6E JUMPI PUSH2 0x1A6D PUSH2 0x1880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A7B DUP5 DUP3 DUP6 ADD PUSH2 0x18FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A8E DUP3 PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A9E DUP2 PUSH2 0x1A84 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AB9 DUP2 PUSH2 0x1A95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD4 JUMPI PUSH2 0x1AD3 PUSH2 0x1880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AE1 DUP5 DUP3 DUP6 ADD PUSH2 0x1AAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B00 JUMPI PUSH2 0x1AFF PUSH2 0x1880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B0D DUP6 DUP3 DUP7 ADD PUSH2 0x18FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B1E DUP6 DUP3 DUP7 ADD PUSH2 0x18FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B31 DUP2 PUSH2 0x18A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B4A PUSH0 DUP4 ADD DUP5 PUSH2 0x1B28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B59 DUP2 PUSH2 0x1A84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B72 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B8E JUMPI PUSH2 0x1B8D PUSH2 0x1880 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B9B DUP6 DUP3 DUP7 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BAC DUP6 DUP3 DUP7 ADD PUSH2 0x18CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BC9 PUSH0 DUP4 ADD DUP6 PUSH2 0x1982 JUMP JUMPDEST PUSH2 0x1BD6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1982 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C21 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C34 JUMPI PUSH2 0x1C33 PUSH2 0x1BDD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x427579207461782063616E6E6F74206578636565642031303025000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C6E PUSH1 0x1A DUP4 PUSH2 0x17E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C79 DUP3 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C9B DUP2 PUSH2 0x1C62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656C6C207461782063616E6E6F742065786365656420313030250000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD6 PUSH1 0x1B DUP4 PUSH2 0x17E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE1 DUP3 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D03 DUP2 PUSH2 0x1CCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D1D PUSH0 DUP4 ADD DUP7 PUSH2 0x1B28 JUMP JUMPDEST PUSH2 0x1D2A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1982 JUMP JUMPDEST PUSH2 0x1D37 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1982 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D76 DUP3 PUSH2 0x18DE JUMP JUMPDEST SWAP2 POP PUSH2 0x1D81 DUP4 PUSH2 0x18DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D99 JUMPI PUSH2 0x1D98 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO ADDRESS LOG0 0xBC SWAP1 0xFC 0xC7 DUP16 SGT COINBASE DUP5 0xEA 0xC3 CHAINID 0xC4 SLOAD 0xE2 0x4E 0xDC SELFDESTRUCT DUP14 SIGNEXTEND DUP2 PUSH19 0xE19F25714DA28BFB64736F6C63430008170033 ",
							"sourceMap": "370:4362:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;527:61:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;461:58:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;748:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2186:67;;;:::i;:::-;;1886:101;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2797:108:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2913:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1850:84:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3090:112:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4077:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4589:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4223:358;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;:::i;:::-;;671:68:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:158:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2065:63:0;;;:::i;:::-;;2675:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2313:191:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3610:178:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;595:69:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1091:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;852:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3210:111:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2559:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;991:25;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2543:215:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;800:45:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:4;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;527:61:0:-;568:20;527:61;:::o;3002:82:4:-;3051:5;3075:2;3068:9;;3002:82;:::o;461:58:0:-;498:21;461:58;:::o;748:45::-;;;;;;;;;;;;;;;;;;;;;;:::o;2186:67::-;1531:13:1;:11;:13::i;:::-;2235:10:0::1;:8;:10::i;:::-;2186:67::o:0;1886:101::-;1531:13:1;:11;:13::i;:::-;1960:19:0::1;1966:4;1972:6;1960:5;:19::i;:::-;1886:101:::0;;:::o;618:87:6:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;2797:108:0:-;1531:13:1;:11;:13::i;:::-;2893:4:0::1;2868:13;:22;2882:7;2868:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;2797:108:::0;:::o;2913:114::-;1531:13:1;:11;:13::i;:::-;3014:5:0::1;2989:13;:22;3003:7;2989:22;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;2913:114:::0;:::o;1850:84:9:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;3090:112:0:-;1531:13:1;:11;:13::i;:::-;3190:4:0::1;3161:17;:26;3179:7;3161:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;3090:112:::0;:::o;4077:138::-;1531:13:1;:11;:13::i;:::-;4189:18:0::1;4171:15;;:36;;;;;;;;;;;;;;;;;;4077:138:::0;:::o;4589:140::-;1531:13:1;:11;:13::i;:::-;4678:43:0::1;4695:4;4702:10;4714:6;4678:8;:43::i;:::-;4589:140:::0;;:::o;4223:358::-;1531:13:1;:11;:13::i;:::-;4334:3:0::1;4321:9;:16;;4313:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;4401:3;4387:10;:17;;4379:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4469:9;4447:12;:19;;:31;;;;4512:10;4489:12;:20;;:33;;;;4538:35;4551:9;4562:10;4538:35;;;;;;;:::i;:::-;;;;;;;;4223:358:::0;;:::o;3299:116:4:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;671:68:0:-;719:20;671:68;:::o;1021:158:6:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;2065:63:0:-;1531:13:1;:11;:13::i;:::-;2112:8:0::1;:6;:8::i;:::-;2065:63::o:0;2675:114::-;1531:13:1;:11;:13::i;:::-;2776:5:0::1;2751:13;:22;2765:7;2751:22;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;2675:114:::0;:::o;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:4:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;2313:191:0:-;1531:13:1;:11;:13::i;:::-;2431:22:0::1;2437:7;2446:6;2431:5;:22::i;:::-;2313:191:::0;;:::o;3610:178:4:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;595:69:0:-;645:19;595:69;:::o;1091:38::-;;;;;;;;;;;;;:::o;852:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;3846:140:4:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;3210:111:0:-;1531:13:1;:11;:13::i;:::-;3308:5:0::1;3279:17;:26;3297:7;3279:26;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;3210:111:::0;:::o;2559:108::-;1531:13:1;:11;:13::i;:::-;2655:4:0::1;2630:13;:22;2644:7;2630:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;2559:108:::0;:::o;991:25::-;;;;;;;;;;;;;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;800:45:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8989:128:4:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2710:117:9:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;7721:208:4:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;2912:187:1:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2463:115:9:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;9949:432:4:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;2202:126:9:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;2002:128::-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:104::-;5568:7;5597:24;5615:5;5597:24;:::i;:::-;5586:35;;5523:104;;;:::o;5633:138::-;5714:32;5740:5;5714:32;:::i;:::-;5707:5;5704:43;5694:71;;5761:1;5758;5751:12;5694:71;5633:138;:::o;5777:155::-;5831:5;5869:6;5856:20;5847:29;;5885:41;5920:5;5885:41;:::i;:::-;5777:155;;;;:::o;5938:345::-;6005:6;6054:2;6042:9;6033:7;6029:23;6025:32;6022:119;;;6060:79;;:::i;:::-;6022:119;6180:1;6205:61;6258:7;6249:6;6238:9;6234:22;6205:61;:::i;:::-;6195:71;;6151:125;5938:345;;;;:::o;6289:474::-;6357:6;6365;6414:2;6402:9;6393:7;6389:23;6385:32;6382:119;;;6420:79;;:::i;:::-;6382:119;6540:1;6565:53;6610:7;6601:6;6590:9;6586:22;6565:53;:::i;:::-;6555:63;;6511:117;6667:2;6693:53;6738:7;6729:6;6718:9;6714:22;6693:53;:::i;:::-;6683:63;;6638:118;6289:474;;;;;:::o;6769:118::-;6856:24;6874:5;6856:24;:::i;:::-;6851:3;6844:37;6769:118;;:::o;6893:222::-;6986:4;7024:2;7013:9;7009:18;7001:26;;7037:71;7105:1;7094:9;7090:17;7081:6;7037:71;:::i;:::-;6893:222;;;;:::o;7121:142::-;7224:32;7250:5;7224:32;:::i;:::-;7219:3;7212:45;7121:142;;:::o;7269:254::-;7378:4;7416:2;7405:9;7401:18;7393:26;;7429:87;7513:1;7502:9;7498:17;7489:6;7429:87;:::i;:::-;7269:254;;;;:::o;7529:474::-;7597:6;7605;7654:2;7642:9;7633:7;7629:23;7625:32;7622:119;;;7660:79;;:::i;:::-;7622:119;7780:1;7805:53;7850:7;7841:6;7830:9;7826:22;7805:53;:::i;:::-;7795:63;;7751:117;7907:2;7933:53;7978:7;7969:6;7958:9;7954:22;7933:53;:::i;:::-;7923:63;;7878:118;7529:474;;;;;:::o;8009:332::-;8130:4;8168:2;8157:9;8153:18;8145:26;;8181:71;8249:1;8238:9;8234:17;8225:6;8181:71;:::i;:::-;8262:72;8330:2;8319:9;8315:18;8306:6;8262:72;:::i;:::-;8009:332;;;;;:::o;8347:180::-;8395:77;8392:1;8385:88;8492:4;8489:1;8482:15;8516:4;8513:1;8506:15;8533:320;8577:6;8614:1;8608:4;8604:12;8594:22;;8661:1;8655:4;8651:12;8682:18;8672:81;;8738:4;8730:6;8726:17;8716:27;;8672:81;8800:2;8792:6;8789:14;8769:18;8766:38;8763:84;;8819:18;;:::i;:::-;8763:84;8584:269;8533:320;;;:::o;8859:176::-;8999:28;8995:1;8987:6;8983:14;8976:52;8859:176;:::o;9041:366::-;9183:3;9204:67;9268:2;9263:3;9204:67;:::i;:::-;9197:74;;9280:93;9369:3;9280:93;:::i;:::-;9398:2;9393:3;9389:12;9382:19;;9041:366;;;:::o;9413:419::-;9579:4;9617:2;9606:9;9602:18;9594:26;;9666:9;9660:4;9656:20;9652:1;9641:9;9637:17;9630:47;9694:131;9820:4;9694:131;:::i;:::-;9686:139;;9413:419;;;:::o;9838:177::-;9978:29;9974:1;9966:6;9962:14;9955:53;9838:177;:::o;10021:366::-;10163:3;10184:67;10248:2;10243:3;10184:67;:::i;:::-;10177:74;;10260:93;10349:3;10260:93;:::i;:::-;10378:2;10373:3;10369:12;10362:19;;10021:366;;;:::o;10393:419::-;10559:4;10597:2;10586:9;10582:18;10574:26;;10646:9;10640:4;10636:20;10632:1;10621:9;10617:17;10610:47;10674:131;10800:4;10674:131;:::i;:::-;10666:139;;10393:419;;;:::o;10818:442::-;10967:4;11005:2;10994:9;10990:18;10982:26;;11018:71;11086:1;11075:9;11071:17;11062:6;11018:71;:::i;:::-;11099:72;11167:2;11156:9;11152:18;11143:6;11099:72;:::i;:::-;11181;11249:2;11238:9;11234:18;11225:6;11181:72;:::i;:::-;10818:442;;;;;;:::o;11266:180::-;11314:77;11311:1;11304:88;11411:4;11408:1;11401:15;11435:4;11432:1;11425:15;11452:191;11492:3;11511:20;11529:1;11511:20;:::i;:::-;11506:25;;11545:20;11563:1;11545:20;:::i;:::-;11540:25;;11588:1;11585;11581:9;11574:16;;11609:3;11606:1;11603:10;11600:36;;;11616:18;;:::i;:::-;11600:36;11452:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1527400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"AIRDROP_WALLET_AMOUNT()": "415",
								"INITIAL_SUPPLY()": "371",
								"MARKETING_WALLET_AMOUNT()": "392",
								"MAX_SUPPLY()": "415",
								"addToBlacklist(address)": "infinite",
								"addToWhitelist(address)": "infinite",
								"adjustTaxes(uint256,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"approveForDEX(address,uint256)": "infinite",
								"balanceOf(address)": "2875",
								"burn(address,uint256)": "infinite",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"currentTaxes()": "infinite",
								"decimals()": "406",
								"excludeFromTax(address)": "infinite",
								"includeInTax(address)": "infinite",
								"isBlacklisted(address)": "2965",
								"isExcludedFromTax(address)": "2944",
								"isWhitelisted(address)": "2945",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"pause()": "infinite",
								"paused()": "2518",
								"removeFromBlacklist(address)": "infinite",
								"removeFromWhitelist(address)": "infinite",
								"renounceOwnership()": "infinite",
								"setTreasuryAddress(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2523",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"treasuryAddress()": "2597",
								"unpause()": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 370,
									"end": 4732,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 370,
									"end": 4732,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 370,
									"end": 4732,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1140,
									"end": 1815,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1245,
									"end": 1255,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "4C6976696E672054686520447265616D00000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "4C54440000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1241,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1278,
									"end": 1311,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1284,
									"end": 1294,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 568,
									"end": 588,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "6BB4AFE4CA85CB07A8340000"
								},
								{
									"begin": 1278,
									"end": 1283,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1278,
									"end": 1283,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1278,
									"end": 1283,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1278,
									"end": 1311,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1278,
									"end": 1311,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1278,
									"end": 1311,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1278,
									"end": 1311,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1278,
									"end": 1311,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1328,
									"end": 1370,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "3E55EFC604A3E021069AA4852AB5A97798301FD5"
								},
								{
									"begin": 645,
									"end": 664,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "11E110E90947DE0410340000"
								},
								{
									"begin": 1322,
									"end": 1327,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1322,
									"end": 1327,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1322,
									"end": 1327,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1322,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1396,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1396,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1322,
									"end": 1396,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1459,
									"end": 1531,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1465,
									"end": 1507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "54412E0892C534C89A076252E3824F1F7F549C52"
								},
								{
									"begin": 719,
									"end": 739,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "59C13D3EA1D47881E3240000"
								},
								{
									"begin": 1459,
									"end": 1464,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1459,
									"end": 1464,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1459,
									"end": 1464,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1459,
									"end": 1531,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1459,
									"end": 1531,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1459,
									"end": 1531,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1459,
									"end": 1531,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1459,
									"end": 1531,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1557,
									"end": 1569,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1557,
									"end": 1569,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1557,
									"end": 1569,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1557,
									"end": 1569,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1557,
									"end": 1569,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1557,
									"end": 1569,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1557,
									"end": 1569,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1557,
									"end": 1569,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1563,
									"end": 1564,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1557,
									"end": 1569,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1557,
									"end": 1569,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1557,
									"end": 1569,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1557,
									"end": 1569,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1566,
									"end": 1568,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 1557,
									"end": 1569,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1557,
									"end": 1569,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1557,
									"end": 1569,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1542,
									"end": 1554,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1542,
									"end": 1569,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1598,
									"end": 1614,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1580,
									"end": 1595,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 1580,
									"end": 1595,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1580,
									"end": 1614,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1625,
									"end": 1656,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 1631,
									"end": 1639,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 568,
									"end": 588,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "6BB4AFE4CA85CB07A8340000"
								},
								{
									"begin": 1625,
									"end": 1630,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1625,
									"end": 1630,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1625,
									"end": 1630,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1625,
									"end": 1656,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1625,
									"end": 1656,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1625,
									"end": 1656,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1625,
									"end": 1656,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 1625,
									"end": 1656,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1721,
									"end": 1748,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1739,
									"end": 1747,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1721,
									"end": 1738,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1721,
									"end": 1738,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1738,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1721,
									"end": 1748,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1748,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1721,
									"end": 1748,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1721,
									"end": 1748,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1721,
									"end": 1748,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1140,
									"end": 1815,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 370,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 370,
									"end": 4732,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2647,
									"end": 2648,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2627,
									"end": 2635,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2627,
									"end": 2649,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2700,
									"end": 2701,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2672,
									"end": 2703,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2742,
									"end": 2750,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2723,
									"end": 2741,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 2723,
									"end": 2741,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2723,
									"end": 2741,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2723,
									"end": 2751,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2543,
									"end": 2758,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1866,
									"end": 1878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1866,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1860,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1855,
									"end": 1862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1855,
									"end": 1862,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1938,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1928,
									"end": 1940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 1,
									"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1901,
									"end": 1941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1796,
									"end": 1958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1691,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 570,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 466,
									"end": 570,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 511,
									"end": 518,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 558,
									"end": 563,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 540,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 540,
									"end": 564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 540,
									"end": 564,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 529,
									"end": 564,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 529,
									"end": 564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 570,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 570,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 570,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 576,
									"end": 714,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 576,
									"end": 714,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 657,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 683,
									"end": 688,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 657,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 657,
									"end": 689,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 689,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 657,
									"end": 689,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 650,
									"end": 655,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 647,
									"end": 690,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 637,
									"end": 708,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 637,
									"end": 708,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 704,
									"end": 705,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 702,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 694,
									"end": 706,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 637,
									"end": 708,
									"name": "tag",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 637,
									"end": 708,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 576,
									"end": 714,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 576,
									"end": 714,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 720,
									"end": 879,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 720,
									"end": 879,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 785,
									"end": 790,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 822,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 810,
									"end": 823,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 801,
									"end": 823,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 801,
									"end": 823,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 832,
									"end": 873,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 867,
									"end": 872,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 832,
									"end": 873,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 832,
									"end": 873,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 832,
									"end": 873,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 832,
									"end": 873,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 720,
									"end": 879,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 720,
									"end": 879,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 720,
									"end": 879,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 720,
									"end": 879,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 720,
									"end": 879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 885,
									"end": 981,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 885,
									"end": 981,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 922,
									"end": 929,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 969,
									"end": 974,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 951,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 951,
									"end": 975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 951,
									"end": 975,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 951,
									"end": 975,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 940,
									"end": 975,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 940,
									"end": 975,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 885,
									"end": 981,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 885,
									"end": 981,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 885,
									"end": 981,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 885,
									"end": 981,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1109,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 987,
									"end": 1109,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1060,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 1078,
									"end": 1083,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1060,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1060,
									"end": 1084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1060,
									"end": 1084,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 1060,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1053,
									"end": 1058,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1050,
									"end": 1085,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1103,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 1040,
									"end": 1103,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1099,
									"end": 1100,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1096,
									"end": 1097,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1101,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1103,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 1040,
									"end": 1103,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1109,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1109,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1258,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1115,
									"end": 1258,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1172,
									"end": 1177,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1203,
									"end": 1209,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1197,
									"end": 1210,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1188,
									"end": 1210,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1188,
									"end": 1210,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1219,
									"end": 1252,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 1246,
									"end": 1251,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1219,
									"end": 1252,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1219,
									"end": 1252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1219,
									"end": 1252,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 1219,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1258,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1258,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1258,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1258,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1264,
									"end": 1787,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1264,
									"end": 1787,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1351,
									"end": 1357,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1359,
									"end": 1365,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1408,
									"end": 1410,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1396,
									"end": 1405,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1387,
									"end": 1394,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1383,
									"end": 1406,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1379,
									"end": 1411,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1376,
									"end": 1495,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1376,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 1376,
									"end": 1495,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1414,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 1414,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1414,
									"end": 1493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1414,
									"end": 1493,
									"name": "tag",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 1414,
									"end": 1493,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1376,
									"end": 1495,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 1376,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1534,
									"end": 1535,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1559,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 1623,
									"end": 1630,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1614,
									"end": 1620,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1603,
									"end": 1612,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1599,
									"end": 1621,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1559,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1559,
									"end": 1631,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1559,
									"end": 1631,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 1559,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1549,
									"end": 1631,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1549,
									"end": 1631,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1505,
									"end": 1641,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1680,
									"end": 1682,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1706,
									"end": 1770,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 1762,
									"end": 1769,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1753,
									"end": 1759,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1742,
									"end": 1751,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1738,
									"end": 1760,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1706,
									"end": 1770,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1706,
									"end": 1770,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1706,
									"end": 1770,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 1706,
									"end": 1770,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1696,
									"end": 1770,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1696,
									"end": 1770,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1780,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1264,
									"end": 1787,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1264,
									"end": 1787,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1264,
									"end": 1787,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1264,
									"end": 1787,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1264,
									"end": 1787,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1264,
									"end": 1787,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1793,
									"end": 1892,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1793,
									"end": 1892,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1879,
									"end": 1884,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1873,
									"end": 1885,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1863,
									"end": 1885,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1863,
									"end": 1885,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1793,
									"end": 1892,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1793,
									"end": 1892,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1793,
									"end": 1892,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1793,
									"end": 1892,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1898,
									"end": 2078,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 1898,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2023,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1943,
									"end": 1944,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1936,
									"end": 2024,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2043,
									"end": 2047,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 2040,
									"end": 2041,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2067,
									"end": 2071,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2064,
									"end": 2065,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2057,
									"end": 2072,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2084,
									"end": 2264,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2084,
									"end": 2264,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2132,
									"end": 2209,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2129,
									"end": 2130,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2122,
									"end": 2210,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2229,
									"end": 2233,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 2226,
									"end": 2227,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2219,
									"end": 2234,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2253,
									"end": 2257,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2250,
									"end": 2251,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2243,
									"end": 2258,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2270,
									"end": 2590,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2270,
									"end": 2590,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2314,
									"end": 2320,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2351,
									"end": 2352,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2345,
									"end": 2349,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2341,
									"end": 2353,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 2331,
									"end": 2353,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2331,
									"end": 2353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2398,
									"end": 2399,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2392,
									"end": 2396,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2388,
									"end": 2400,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2419,
									"end": 2437,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2490,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 2409,
									"end": 2490,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2475,
									"end": 2479,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 2467,
									"end": 2473,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2463,
									"end": 2480,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2453,
									"end": 2480,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2453,
									"end": 2480,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2490,
									"name": "tag",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 2409,
									"end": 2490,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2537,
									"end": 2539,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2529,
									"end": 2535,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2526,
									"end": 2540,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2506,
									"end": 2524,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2503,
									"end": 2541,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2500,
									"end": 2584,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 2500,
									"end": 2584,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2556,
									"end": 2574,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 2556,
									"end": 2574,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2556,
									"end": 2574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2556,
									"end": 2574,
									"name": "tag",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 2556,
									"end": 2574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2500,
									"end": 2584,
									"name": "tag",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 2500,
									"end": 2584,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2321,
									"end": 2590,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2270,
									"end": 2590,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2270,
									"end": 2590,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2270,
									"end": 2590,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2270,
									"end": 2590,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2596,
									"end": 2737,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 2596,
									"end": 2737,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2645,
									"end": 2649,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2668,
									"end": 2671,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2660,
									"end": 2671,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2660,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2691,
									"end": 2694,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2688,
									"end": 2689,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2681,
									"end": 2695,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2725,
									"end": 2729,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2722,
									"end": 2723,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2712,
									"end": 2730,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2704,
									"end": 2730,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2704,
									"end": 2730,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2596,
									"end": 2737,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2596,
									"end": 2737,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2596,
									"end": 2737,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2596,
									"end": 2737,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2743,
									"end": 2836,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2743,
									"end": 2836,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2786,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2827,
									"end": 2829,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2822,
									"end": 2824,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2815,
									"end": 2820,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2811,
									"end": 2825,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2807,
									"end": 2830,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 2797,
									"end": 2830,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2797,
									"end": 2830,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2743,
									"end": 2836,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2743,
									"end": 2836,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2743,
									"end": 2836,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2743,
									"end": 2836,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2842,
									"end": 2949,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 2842,
									"end": 2949,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2886,
									"end": 2894,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2936,
									"end": 2941,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2930,
									"end": 2934,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2926,
									"end": 2942,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2905,
									"end": 2942,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2905,
									"end": 2942,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2842,
									"end": 2949,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2842,
									"end": 2949,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2842,
									"end": 2949,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2842,
									"end": 2949,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2842,
									"end": 2949,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2955,
									"end": 3348,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2955,
									"end": 3348,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3024,
									"end": 3030,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3074,
									"end": 3075,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 3062,
									"end": 3072,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3058,
									"end": 3076,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3097,
									"end": 3194,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 3127,
									"end": 3193,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3116,
									"end": 3125,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3097,
									"end": 3194,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3097,
									"end": 3194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3097,
									"end": 3194,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 3097,
									"end": 3194,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3215,
									"end": 3254,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 3245,
									"end": 3253,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3234,
									"end": 3243,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3215,
									"end": 3254,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3215,
									"end": 3254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3215,
									"end": 3254,
									"name": "tag",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 3215,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3203,
									"end": 3254,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 3203,
									"end": 3254,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3287,
									"end": 3291,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3283,
									"end": 3292,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3276,
									"end": 3281,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3272,
									"end": 3293,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3263,
									"end": 3293,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 3263,
									"end": 3293,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3336,
									"end": 3340,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3326,
									"end": 3334,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3322,
									"end": 3341,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3315,
									"end": 3320,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3312,
									"end": 3342,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 3302,
									"end": 3342,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3302,
									"end": 3342,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3031,
									"end": 3348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3031,
									"end": 3348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2955,
									"end": 3348,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2955,
									"end": 3348,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2955,
									"end": 3348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2955,
									"end": 3348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2955,
									"end": 3348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2955,
									"end": 3348,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3431,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 3354,
									"end": 3431,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3391,
									"end": 3398,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3420,
									"end": 3425,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3409,
									"end": 3425,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3409,
									"end": 3425,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3431,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3431,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3431,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3437,
									"end": 3497,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 3437,
									"end": 3497,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3465,
									"end": 3468,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3486,
									"end": 3491,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3479,
									"end": 3491,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3479,
									"end": 3491,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3437,
									"end": 3497,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3437,
									"end": 3497,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3437,
									"end": 3497,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3437,
									"end": 3497,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3503,
									"end": 3645,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 3503,
									"end": 3645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3553,
									"end": 3562,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3586,
									"end": 3639,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 3604,
									"end": 3638,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 3613,
									"end": 3637,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 3631,
									"end": 3636,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3613,
									"end": 3637,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 3613,
									"end": 3637,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3613,
									"end": 3637,
									"name": "tag",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 3613,
									"end": 3637,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3604,
									"end": 3638,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 3604,
									"end": 3638,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3604,
									"end": 3638,
									"name": "tag",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 3604,
									"end": 3638,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3586,
									"end": 3639,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 3586,
									"end": 3639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3586,
									"end": 3639,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 3586,
									"end": 3639,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3573,
									"end": 3639,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3573,
									"end": 3639,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3503,
									"end": 3645,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3503,
									"end": 3645,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3503,
									"end": 3645,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3503,
									"end": 3645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3726,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3651,
									"end": 3726,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3694,
									"end": 3697,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3715,
									"end": 3720,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3708,
									"end": 3720,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3708,
									"end": 3720,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3726,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3726,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3726,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3726,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3732,
									"end": 4001,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3732,
									"end": 4001,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3842,
									"end": 3881,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 3873,
									"end": 3880,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3842,
									"end": 3881,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 3842,
									"end": 3881,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3842,
									"end": 3881,
									"name": "tag",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 3842,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3903,
									"end": 3994,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 3952,
									"end": 3993,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 3976,
									"end": 3992,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3952,
									"end": 3993,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3952,
									"end": 3993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3952,
									"end": 3993,
									"name": "tag",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 3952,
									"end": 3993,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3944,
									"end": 3950,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3937,
									"end": 3941,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3931,
									"end": 3942,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 3903,
									"end": 3994,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3903,
									"end": 3994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3903,
									"end": 3994,
									"name": "tag",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 3903,
									"end": 3994,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3897,
									"end": 3901,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3890,
									"end": 3995,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3808,
									"end": 4001,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3732,
									"end": 4001,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3732,
									"end": 4001,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3732,
									"end": 4001,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3732,
									"end": 4001,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4007,
									"end": 4080,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 4007,
									"end": 4080,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4052,
									"end": 4055,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4007,
									"end": 4080,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4007,
									"end": 4080,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4086,
									"end": 4275,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 4086,
									"end": 4275,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4163,
									"end": 4195,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 4163,
									"end": 4195,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 4163,
									"end": 4195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4163,
									"end": 4195,
									"name": "tag",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 4163,
									"end": 4195,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4269,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "149"
								},
								{
									"begin": 4262,
									"end": 4268,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4254,
									"end": 4260,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4248,
									"end": 4252,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4269,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 4204,
									"end": 4269,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4204,
									"end": 4269,
									"name": "tag",
									"source": 10,
									"value": "149"
								},
								{
									"begin": 4204,
									"end": 4269,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4139,
									"end": 4275,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4086,
									"end": 4275,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4086,
									"end": 4275,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4086,
									"end": 4275,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4281,
									"end": 4467,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 4281,
									"end": 4467,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4341,
									"end": 4461,
									"name": "tag",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 4341,
									"end": 4461,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4358,
									"end": 4361,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4351,
									"end": 4356,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4348,
									"end": 4362,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4341,
									"end": 4461,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4341,
									"end": 4461,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 4341,
									"end": 4461,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4412,
									"end": 4451,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 4449,
									"end": 4450,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4442,
									"end": 4447,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4412,
									"end": 4451,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 4412,
									"end": 4451,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4412,
									"end": 4451,
									"name": "tag",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 4412,
									"end": 4451,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4385,
									"end": 4386,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4378,
									"end": 4383,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4374,
									"end": 4387,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4387,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4387,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4341,
									"end": 4461,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 4341,
									"end": 4461,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4341,
									"end": 4461,
									"name": "tag",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 4341,
									"end": 4461,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4281,
									"end": 4467,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4281,
									"end": 4467,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4281,
									"end": 4467,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4473,
									"end": 5016,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 4473,
									"end": 5016,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4574,
									"end": 4576,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4569,
									"end": 4572,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4566,
									"end": 4577,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4563,
									"end": 5009,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4563,
									"end": 5009,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 4563,
									"end": 5009,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4608,
									"end": 4646,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 4640,
									"end": 4645,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4608,
									"end": 4646,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 4608,
									"end": 4646,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4608,
									"end": 4646,
									"name": "tag",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 4608,
									"end": 4646,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4692,
									"end": 4721,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 4710,
									"end": 4720,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4692,
									"end": 4721,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 4692,
									"end": 4721,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4692,
									"end": 4721,
									"name": "tag",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 4692,
									"end": 4721,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4682,
									"end": 4690,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4678,
									"end": 4722,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4875,
									"end": 4877,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4863,
									"end": 4873,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4860,
									"end": 4878,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4896,
									"end": 4904,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4881,
									"end": 4904,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4881,
									"end": 4904,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "tag",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 4857,
									"end": 4906,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4919,
									"end": 4999,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 4975,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 4993,
									"end": 4996,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4975,
									"end": 4997,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 4975,
									"end": 4997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4975,
									"end": 4997,
									"name": "tag",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 4975,
									"end": 4997,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4965,
									"end": 4973,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4961,
									"end": 4998,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4948,
									"end": 4959,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4919,
									"end": 4999,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 4919,
									"end": 4999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4919,
									"end": 4999,
									"name": "tag",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 4919,
									"end": 4999,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4578,
									"end": 5009,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4578,
									"end": 5009,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4563,
									"end": 5009,
									"name": "tag",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 4563,
									"end": 5009,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4473,
									"end": 5016,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4473,
									"end": 5016,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4473,
									"end": 5016,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4473,
									"end": 5016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5022,
									"end": 5139,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 5022,
									"end": 5139,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5076,
									"end": 5084,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5126,
									"end": 5131,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5120,
									"end": 5124,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5116,
									"end": 5132,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 5095,
									"end": 5132,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5095,
									"end": 5132,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5022,
									"end": 5139,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5022,
									"end": 5139,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5022,
									"end": 5139,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5022,
									"end": 5139,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5022,
									"end": 5139,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5145,
									"end": 5314,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 5145,
									"end": 5314,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5189,
									"end": 5195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5222,
									"end": 5273,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 5270,
									"end": 5271,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5266,
									"end": 5272,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5258,
									"end": 5263,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5255,
									"end": 5256,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 5251,
									"end": 5264,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5222,
									"end": 5273,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 5222,
									"end": 5273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5222,
									"end": 5273,
									"name": "tag",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 5222,
									"end": 5273,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5218,
									"end": 5274,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5303,
									"end": 5307,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5297,
									"end": 5301,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5293,
									"end": 5308,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5283,
									"end": 5308,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5283,
									"end": 5308,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5196,
									"end": 5314,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5145,
									"end": 5314,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5145,
									"end": 5314,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5145,
									"end": 5314,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5145,
									"end": 5314,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5145,
									"end": 5314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5319,
									"end": 5614,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 5319,
									"end": 5614,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5395,
									"end": 5399,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5541,
									"end": 5570,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 5566,
									"end": 5569,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5560,
									"end": 5564,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5541,
									"end": 5570,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 5541,
									"end": 5570,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5541,
									"end": 5570,
									"name": "tag",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 5541,
									"end": 5570,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5533,
									"end": 5570,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5533,
									"end": 5570,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5603,
									"end": 5606,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5600,
									"end": 5601,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 5596,
									"end": 5607,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5590,
									"end": 5594,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5587,
									"end": 5608,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 5579,
									"end": 5608,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5579,
									"end": 5608,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5319,
									"end": 5614,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5319,
									"end": 5614,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5319,
									"end": 5614,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5319,
									"end": 5614,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5319,
									"end": 5614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5619,
									"end": 7014,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 5619,
									"end": 7014,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5736,
									"end": 5773,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 5769,
									"end": 5772,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5736,
									"end": 5773,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 5736,
									"end": 5773,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5736,
									"end": 5773,
									"name": "tag",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 5736,
									"end": 5773,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5838,
									"end": 5856,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5830,
									"end": 5836,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5827,
									"end": 5857,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5824,
									"end": 5880,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5824,
									"end": 5880,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 5824,
									"end": 5880,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5860,
									"end": 5878,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 5860,
									"end": 5878,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 5860,
									"end": 5878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5860,
									"end": 5878,
									"name": "tag",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 5860,
									"end": 5878,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5824,
									"end": 5880,
									"name": "tag",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 5824,
									"end": 5880,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5904,
									"end": 5942,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "171"
								},
								{
									"begin": 5936,
									"end": 5940,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5930,
									"end": 5941,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5904,
									"end": 5942,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 5904,
									"end": 5942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5904,
									"end": 5942,
									"name": "tag",
									"source": 10,
									"value": "171"
								},
								{
									"begin": 5904,
									"end": 5942,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5989,
									"end": 6056,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 6049,
									"end": 6055,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6041,
									"end": 6047,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6035,
									"end": 6039,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5989,
									"end": 6056,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 5989,
									"end": 6056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5989,
									"end": 6056,
									"name": "tag",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 5989,
									"end": 6056,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6083,
									"end": 6084,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6107,
									"end": 6111,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6094,
									"end": 6111,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6094,
									"end": 6111,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6139,
									"end": 6141,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6131,
									"end": 6137,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6128,
									"end": 6142,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 6156,
									"end": 6157,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6151,
									"end": 6769,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6151,
									"end": 6769,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 6151,
									"end": 6769,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "174"
								},
								{
									"begin": 6151,
									"end": 6769,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6813,
									"end": 6814,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6830,
									"end": 6836,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6827,
									"end": 6904,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6827,
									"end": 6904,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "175"
								},
								{
									"begin": 6827,
									"end": 6904,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6879,
									"end": 6888,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6874,
									"end": 6877,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 6870,
									"end": 6889,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6864,
									"end": 6890,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 6855,
									"end": 6890,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6855,
									"end": 6890,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6827,
									"end": 6904,
									"name": "tag",
									"source": 10,
									"value": "175"
								},
								{
									"begin": 6827,
									"end": 6904,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6930,
									"end": 6997,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 6990,
									"end": 6996,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6983,
									"end": 6988,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6930,
									"end": 6997,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 6930,
									"end": 6997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6930,
									"end": 6997,
									"name": "tag",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 6930,
									"end": 6997,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6924,
									"end": 6928,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 6917,
									"end": 6998,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 6786,
									"end": 7008,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6121,
									"end": 7008,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "173"
								},
								{
									"begin": 6121,
									"end": 7008,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6151,
									"end": 6769,
									"name": "tag",
									"source": 10,
									"value": "174"
								},
								{
									"begin": 6151,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6207,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6199,
									"end": 6208,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 6191,
									"end": 6197,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6187,
									"end": 6209,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6237,
									"end": 6274,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "177"
								},
								{
									"begin": 6269,
									"end": 6273,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 6237,
									"end": 6274,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 6237,
									"end": 6274,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6237,
									"end": 6274,
									"name": "tag",
									"source": 10,
									"value": "177"
								},
								{
									"begin": 6237,
									"end": 6274,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6296,
									"end": 6297,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6310,
									"end": 6518,
									"name": "tag",
									"source": 10,
									"value": "178"
								},
								{
									"begin": 6310,
									"end": 6518,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6324,
									"end": 6331,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6321,
									"end": 6322,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6318,
									"end": 6332,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6310,
									"end": 6518,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6310,
									"end": 6518,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "180"
								},
								{
									"begin": 6310,
									"end": 6518,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6403,
									"end": 6412,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6398,
									"end": 6401,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 6394,
									"end": 6413,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6388,
									"end": 6414,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 6380,
									"end": 6386,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6373,
									"end": 6415,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 6454,
									"end": 6455,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6446,
									"end": 6452,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6442,
									"end": 6456,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6432,
									"end": 6456,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6432,
									"end": 6456,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6501,
									"end": 6503,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6490,
									"end": 6499,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6486,
									"end": 6504,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6473,
									"end": 6504,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 6473,
									"end": 6504,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6344,
									"end": 6345,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6340,
									"end": 6352,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6335,
									"end": 6352,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6335,
									"end": 6352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6310,
									"end": 6518,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "178"
								},
								{
									"begin": 6310,
									"end": 6518,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6310,
									"end": 6518,
									"name": "tag",
									"source": 10,
									"value": "180"
								},
								{
									"begin": 6310,
									"end": 6518,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6546,
									"end": 6552,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 6537,
									"end": 6544,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6534,
									"end": 6553,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6531,
									"end": 6710,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6531,
									"end": 6710,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "181"
								},
								{
									"begin": 6531,
									"end": 6710,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6604,
									"end": 6613,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6599,
									"end": 6602,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 6595,
									"end": 6614,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6589,
									"end": 6615,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 6647,
									"end": 6695,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "182"
								},
								{
									"begin": 6689,
									"end": 6693,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6681,
									"end": 6687,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 6677,
									"end": 6694,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6666,
									"end": 6675,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6647,
									"end": 6695,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 6647,
									"end": 6695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6647,
									"end": 6695,
									"name": "tag",
									"source": 10,
									"value": "182"
								},
								{
									"begin": 6647,
									"end": 6695,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6639,
									"end": 6645,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6632,
									"end": 6696,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 6554,
									"end": 6710,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6531,
									"end": 6710,
									"name": "tag",
									"source": 10,
									"value": "181"
								},
								{
									"begin": 6531,
									"end": 6710,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6756,
									"end": 6757,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6752,
									"end": 6753,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 6744,
									"end": 6750,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 6740,
									"end": 6754,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6736,
									"end": 6758,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6730,
									"end": 6734,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 6723,
									"end": 6759,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 6158,
									"end": 6769,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6158,
									"end": 6769,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6158,
									"end": 6769,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6121,
									"end": 7008,
									"name": "tag",
									"source": 10,
									"value": "173"
								},
								{
									"begin": 6121,
									"end": 7008,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6121,
									"end": 7008,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5711,
									"end": 7014,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5711,
									"end": 7014,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5711,
									"end": 7014,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5619,
									"end": 7014,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5619,
									"end": 7014,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5619,
									"end": 7014,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7020,
									"end": 7138,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 7020,
									"end": 7138,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7107,
									"end": 7131,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "184"
								},
								{
									"begin": 7125,
									"end": 7130,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7107,
									"end": 7131,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 7107,
									"end": 7131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7107,
									"end": 7131,
									"name": "tag",
									"source": 10,
									"value": "184"
								},
								{
									"begin": 7107,
									"end": 7131,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7102,
									"end": 7105,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7095,
									"end": 7132,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7020,
									"end": 7138,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7020,
									"end": 7138,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7020,
									"end": 7138,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7144,
									"end": 7366,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 7144,
									"end": 7366,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7237,
									"end": 7241,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7275,
									"end": 7277,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7264,
									"end": 7273,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7260,
									"end": 7278,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7252,
									"end": 7278,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7252,
									"end": 7278,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7288,
									"end": 7359,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "186"
								},
								{
									"begin": 7356,
									"end": 7357,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7345,
									"end": 7354,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7341,
									"end": 7358,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7332,
									"end": 7338,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7288,
									"end": 7359,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 7288,
									"end": 7359,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7288,
									"end": 7359,
									"name": "tag",
									"source": 10,
									"value": "186"
								},
								{
									"begin": 7288,
									"end": 7359,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7144,
									"end": 7366,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7144,
									"end": 7366,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7144,
									"end": 7366,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7144,
									"end": 7366,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7144,
									"end": 7366,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7372,
									"end": 7552,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 7372,
									"end": 7552,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7420,
									"end": 7497,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7417,
									"end": 7418,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7410,
									"end": 7498,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7517,
									"end": 7521,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 7514,
									"end": 7515,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 7507,
									"end": 7522,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7541,
									"end": 7545,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 7538,
									"end": 7539,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7531,
									"end": 7546,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 7558,
									"end": 7749,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 7558,
									"end": 7749,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7598,
									"end": 7601,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7617,
									"end": 7637,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "189"
								},
								{
									"begin": 7635,
									"end": 7636,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7617,
									"end": 7637,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 7617,
									"end": 7637,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7617,
									"end": 7637,
									"name": "tag",
									"source": 10,
									"value": "189"
								},
								{
									"begin": 7617,
									"end": 7637,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7612,
									"end": 7637,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7612,
									"end": 7637,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7651,
									"end": 7671,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "190"
								},
								{
									"begin": 7669,
									"end": 7670,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7651,
									"end": 7671,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 7651,
									"end": 7671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7651,
									"end": 7671,
									"name": "tag",
									"source": 10,
									"value": "190"
								},
								{
									"begin": 7651,
									"end": 7671,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7646,
									"end": 7671,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7646,
									"end": 7671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7694,
									"end": 7695,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7691,
									"end": 7692,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7687,
									"end": 7696,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7680,
									"end": 7696,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7680,
									"end": 7696,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7715,
									"end": 7718,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 7712,
									"end": 7713,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7709,
									"end": 7719,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7706,
									"end": 7742,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7706,
									"end": 7742,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "191"
								},
								{
									"begin": 7706,
									"end": 7742,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7722,
									"end": 7740,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "192"
								},
								{
									"begin": 7722,
									"end": 7740,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 7722,
									"end": 7740,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7722,
									"end": 7740,
									"name": "tag",
									"source": 10,
									"value": "192"
								},
								{
									"begin": 7722,
									"end": 7740,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7706,
									"end": 7742,
									"name": "tag",
									"source": 10,
									"value": "191"
								},
								{
									"begin": 7706,
									"end": 7742,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7558,
									"end": 7749,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7558,
									"end": 7749,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7558,
									"end": 7749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7558,
									"end": 7749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7558,
									"end": 7749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7755,
									"end": 7873,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 7755,
									"end": 7873,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7842,
									"end": 7866,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "194"
								},
								{
									"begin": 7860,
									"end": 7865,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7842,
									"end": 7866,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 7842,
									"end": 7866,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7842,
									"end": 7866,
									"name": "tag",
									"source": 10,
									"value": "194"
								},
								{
									"begin": 7842,
									"end": 7866,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7837,
									"end": 7840,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7830,
									"end": 7867,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7755,
									"end": 7873,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7755,
									"end": 7873,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7755,
									"end": 7873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7879,
									"end": 8321,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 7879,
									"end": 8321,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8028,
									"end": 8032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8066,
									"end": 8068,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 8055,
									"end": 8064,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8051,
									"end": 8069,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8043,
									"end": 8069,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8043,
									"end": 8069,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8079,
									"end": 8150,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "196"
								},
								{
									"begin": 8147,
									"end": 8148,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8136,
									"end": 8145,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8132,
									"end": 8149,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8123,
									"end": 8129,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8079,
									"end": 8150,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 8079,
									"end": 8150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8079,
									"end": 8150,
									"name": "tag",
									"source": 10,
									"value": "196"
								},
								{
									"begin": 8079,
									"end": 8150,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8160,
									"end": 8232,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "197"
								},
								{
									"begin": 8228,
									"end": 8230,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8217,
									"end": 8226,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8213,
									"end": 8231,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8204,
									"end": 8210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8160,
									"end": 8232,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 8160,
									"end": 8232,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8160,
									"end": 8232,
									"name": "tag",
									"source": 10,
									"value": "197"
								},
								{
									"begin": 8160,
									"end": 8232,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8242,
									"end": 8314,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "198"
								},
								{
									"begin": 8310,
									"end": 8312,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 8299,
									"end": 8308,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8295,
									"end": 8313,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8286,
									"end": 8292,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8242,
									"end": 8314,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 8242,
									"end": 8314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8242,
									"end": 8314,
									"name": "tag",
									"source": 10,
									"value": "198"
								},
								{
									"begin": 8242,
									"end": 8314,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7879,
									"end": 8321,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 7879,
									"end": 8321,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 7879,
									"end": 8321,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7879,
									"end": 8321,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7879,
									"end": 8321,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7879,
									"end": 8321,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7879,
									"end": 8321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8327,
									"end": 8549,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 8327,
									"end": 8549,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8420,
									"end": 8424,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8458,
									"end": 8460,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8447,
									"end": 8456,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8443,
									"end": 8461,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8435,
									"end": 8461,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8435,
									"end": 8461,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8471,
									"end": 8542,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "200"
								},
								{
									"begin": 8539,
									"end": 8540,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8528,
									"end": 8537,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8524,
									"end": 8541,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8515,
									"end": 8521,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8471,
									"end": 8542,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 8471,
									"end": 8542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8471,
									"end": 8542,
									"name": "tag",
									"source": 10,
									"value": "200"
								},
								{
									"begin": 8471,
									"end": 8542,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8327,
									"end": 8549,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 8327,
									"end": 8549,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8327,
									"end": 8549,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8327,
									"end": 8549,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8327,
									"end": 8549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 370,
									"end": 4732,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 370,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 370,
									"end": 4732,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 4732,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 370,
									"end": 4732,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 4732,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 4732,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 370,
									"end": 4732,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 4732,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201530a0bc90fcc78f134184eac346c454e24edcff8d0b8172e19f25714da28bfb64736f6c63430008170033",
									".code": [
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "E17C4C74"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "E17C4C74"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "E43252D7"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "EB1E7387"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "FE575A87"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "B3A88C1B"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "C5F956AF"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "CB4CA631"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "8AB1D681"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "72A8A933"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "60D1259E"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "6605BFDA"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "6C95702B"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "6F0B00AC"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "44337EA1"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "537DF3B6"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "2FF2E9DC"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "2FF2E9DC"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "32CB6B0C"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "3AF32ABF"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 4732,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 527,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 527,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 527,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 527,
											"end": 588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 527,
											"end": 588,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 461,
											"end": 519,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 461,
											"end": 519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 461,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 461,
											"end": 519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 519,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 461,
											"end": 519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 461,
											"end": 519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 461,
											"end": 519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 461,
											"end": 519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 519,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 461,
											"end": 519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 461,
											"end": 519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 461,
											"end": 519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 519,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 748,
											"end": 793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 748,
											"end": 793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 748,
											"end": 793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2253,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2186,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2186,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2186,
											"end": 2253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2253,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2186,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2253,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1886,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1886,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2797,
											"end": 2905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2797,
											"end": 2905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2913,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2913,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3090,
											"end": 3202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3090,
											"end": 3202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4077,
											"end": 4215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4077,
											"end": 4215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4589,
											"end": 4729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4589,
											"end": 4729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4223,
											"end": 4581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4223,
											"end": 4581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 671,
											"end": 739,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 671,
											"end": 739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 671,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 671,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 671,
											"end": 739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 671,
											"end": 739,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 671,
											"end": 739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 671,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 739,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 671,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 671,
											"end": 739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 671,
											"end": 739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 671,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 671,
											"end": 739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 671,
											"end": 739,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 671,
											"end": 739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 671,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 739,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 671,
											"end": 739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 671,
											"end": 739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 671,
											"end": 739,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 671,
											"end": 739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 671,
											"end": 739,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2128,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2065,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2065,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2065,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2128,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2065,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2128,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2675,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2675,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2313,
											"end": 2504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2313,
											"end": 2504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 595,
											"end": 664,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 595,
											"end": 664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 595,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 595,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 664,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 595,
											"end": 664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 595,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 595,
											"end": 664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 595,
											"end": 664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 595,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 664,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 595,
											"end": 664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 595,
											"end": 664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 595,
											"end": 664,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 595,
											"end": 664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 664,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1091,
											"end": 1129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1091,
											"end": 1129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 852,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 852,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 852,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3210,
											"end": 3321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3210,
											"end": 3321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2559,
											"end": 2667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2559,
											"end": 2667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 991,
											"end": 1016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 991,
											"end": 1016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 800,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 800,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 800,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 527,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "6BB4AFE4CA85CB07A8340000"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 527,
											"end": 588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 461,
											"end": 519,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 461,
											"end": 519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 498,
											"end": 519,
											"name": "PUSH",
											"source": 0,
											"value": "4350EDEF012DC126788340000"
										},
										{
											"begin": 461,
											"end": 519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 748,
											"end": 793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2253,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2186,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2235,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2235,
											"end": 2245,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2245,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2235,
											"end": 2245,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1979,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1966,
											"end": 1970,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1972,
											"end": 1978,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1960,
											"end": 1979,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1979,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1960,
											"end": 1979,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 2897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2868,
											"end": 2881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2889,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 2897,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2797,
											"end": 2905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3010,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3019,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1901,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3161,
											"end": 3178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3179,
											"end": 3186,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4207,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 4171,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4207,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 4695,
											"end": 4699,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4712,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4714,
											"end": 4720,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4686,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 4678,
											"end": 4721,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4721,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 4678,
											"end": 4721,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4334,
											"end": 4337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4321,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4321,
											"end": 4337,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4321,
											"end": 4337,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 4313,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 4313,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4401,
											"end": 4404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4387,
											"end": 4397,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4387,
											"end": 4404,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4387,
											"end": 4404,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 4379,
											"end": 4436,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 4379,
											"end": 4436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 4447,
											"end": 4466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4478,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4522,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 4501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 4489,
											"end": 4509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4489,
											"end": 4509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 4522,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 4522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 4522,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 4522,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5EEE0B95930EE59011F34615B0B7DC6CC58C01D1F07D04A01A3A1E70D2554CF0"
										},
										{
											"begin": 4551,
											"end": 4560,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4562,
											"end": 4572,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4538,
											"end": 4573,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4573,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4223,
											"end": 4581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 671,
											"end": 739,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 671,
											"end": 739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "59C13D3EA1D47881E3240000"
										},
										{
											"begin": 671,
											"end": 739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 671,
											"end": 739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2128,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2065,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2112,
											"end": 2118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 2112,
											"end": 2120,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2120,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2112,
											"end": 2120,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2781,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2437,
											"end": 2444,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2452,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2431,
											"end": 2453,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2431,
											"end": 2453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 595,
											"end": 664,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 595,
											"end": 664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 645,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "11E110E90947DE0410340000"
										},
										{
											"begin": 595,
											"end": 664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 595,
											"end": 664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 852,
											"end": 901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3308,
											"end": 3313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3304,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2630,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2651,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 991,
											"end": 1016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 845,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 800,
											"end": 845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 800,
											"end": 845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 2807,
											"end": 2817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 2807,
											"end": 2819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 2798,
											"end": 2820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 2558,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 2558,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 2551,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 2265,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2265,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 2067,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5627,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 5523,
											"end": 5627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5568,
											"end": 5575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 5615,
											"end": 5620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 5597,
											"end": 5621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5621,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 5597,
											"end": 5621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5586,
											"end": 5621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5627,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5627,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5771,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 5633,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 5740,
											"end": 5745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 5714,
											"end": 5746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5746,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 5714,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5707,
											"end": 5712,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5704,
											"end": 5747,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5694,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 5694,
											"end": 5765,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5761,
											"end": 5762,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5758,
											"end": 5759,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5751,
											"end": 5763,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5694,
											"end": 5765,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 5694,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5932,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 5777,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5831,
											"end": 5836,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5876,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 5876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 5876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5885,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 5920,
											"end": 5925,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5885,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 5885,
											"end": 5926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5885,
											"end": 5926,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 5885,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5932,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5932,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5938,
											"end": 6283,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 5938,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6005,
											"end": 6011,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6054,
											"end": 6056,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6042,
											"end": 6051,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6033,
											"end": 6040,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6029,
											"end": 6052,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6025,
											"end": 6057,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6022,
											"end": 6141,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6022,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 6022,
											"end": 6141,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6060,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 6060,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 6060,
											"end": 6139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6060,
											"end": 6139,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 6060,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6022,
											"end": 6141,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 6022,
											"end": 6141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6205,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 6258,
											"end": 6265,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6249,
											"end": 6255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6238,
											"end": 6247,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6234,
											"end": 6256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6205,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 6205,
											"end": 6266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6205,
											"end": 6266,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 6205,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6195,
											"end": 6266,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6195,
											"end": 6266,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6151,
											"end": 6276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5938,
											"end": 6283,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5938,
											"end": 6283,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5938,
											"end": 6283,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5938,
											"end": 6283,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5938,
											"end": 6283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6763,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 6289,
											"end": 6763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6357,
											"end": 6363,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6365,
											"end": 6371,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6414,
											"end": 6416,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6402,
											"end": 6411,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6393,
											"end": 6400,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6389,
											"end": 6412,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6385,
											"end": 6417,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6501,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 6382,
											"end": 6501,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6420,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 6420,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 6420,
											"end": 6499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6420,
											"end": 6499,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 6420,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6501,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 6382,
											"end": 6501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6540,
											"end": 6541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 6610,
											"end": 6617,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6607,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6599,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6586,
											"end": 6608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6565,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 6565,
											"end": 6618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6565,
											"end": 6618,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 6565,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6618,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6511,
											"end": 6628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 6669,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 6738,
											"end": 6745,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6729,
											"end": 6735,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6718,
											"end": 6727,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6714,
											"end": 6736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6693,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 6693,
											"end": 6746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6693,
											"end": 6746,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 6693,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6683,
											"end": 6746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6683,
											"end": 6746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6763,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6763,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6763,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6289,
											"end": 6763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6769,
											"end": 6887,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6769,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6856,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 6874,
											"end": 6879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6856,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 6856,
											"end": 6880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6856,
											"end": 6880,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 6856,
											"end": 6880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6851,
											"end": 6854,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6769,
											"end": 6887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6769,
											"end": 6887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6769,
											"end": 6887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6893,
											"end": 7115,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 6893,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 6990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7024,
											"end": 7026,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7013,
											"end": 7022,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7009,
											"end": 7027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7001,
											"end": 7027,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7001,
											"end": 7027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7037,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 7105,
											"end": 7106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7094,
											"end": 7103,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7090,
											"end": 7107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7087,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7037,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 7037,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7037,
											"end": 7108,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 7037,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6893,
											"end": 7115,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6893,
											"end": 7115,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6893,
											"end": 7115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6893,
											"end": 7115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6893,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7121,
											"end": 7263,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 7121,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7224,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 7250,
											"end": 7255,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7224,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 7224,
											"end": 7256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7224,
											"end": 7256,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 7224,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7212,
											"end": 7257,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7121,
											"end": 7263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7121,
											"end": 7263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7121,
											"end": 7263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7269,
											"end": 7523,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 7269,
											"end": 7523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7378,
											"end": 7382,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7416,
											"end": 7418,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7405,
											"end": 7414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 7513,
											"end": 7514,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7502,
											"end": 7511,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7498,
											"end": 7515,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7489,
											"end": 7495,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 7429,
											"end": 7516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7516,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 7429,
											"end": 7516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7269,
											"end": 7523,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7269,
											"end": 7523,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7269,
											"end": 7523,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7269,
											"end": 7523,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7269,
											"end": 7523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 8003,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 7529,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7597,
											"end": 7603,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7654,
											"end": 7656,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7642,
											"end": 7651,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7640,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7629,
											"end": 7652,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7625,
											"end": 7657,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7622,
											"end": 7741,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7622,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 7622,
											"end": 7741,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7660,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 7660,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 7660,
											"end": 7739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7660,
											"end": 7739,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 7660,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7622,
											"end": 7741,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 7622,
											"end": 7741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7780,
											"end": 7781,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7805,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 7850,
											"end": 7857,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7841,
											"end": 7847,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7830,
											"end": 7839,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7826,
											"end": 7848,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7805,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 7805,
											"end": 7858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7805,
											"end": 7858,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 7805,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7795,
											"end": 7858,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7795,
											"end": 7858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7751,
											"end": 7868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7907,
											"end": 7909,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7933,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 7978,
											"end": 7985,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7969,
											"end": 7975,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7967,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7933,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 7933,
											"end": 7986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7933,
											"end": 7986,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 7933,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7923,
											"end": 7986,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7923,
											"end": 7986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7878,
											"end": 7996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 8003,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 8003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 8003,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 8003,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 8003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 8003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8009,
											"end": 8341,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 8009,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8130,
											"end": 8134,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8168,
											"end": 8170,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8157,
											"end": 8166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8153,
											"end": 8171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8145,
											"end": 8171,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8145,
											"end": 8171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8181,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 8249,
											"end": 8250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8238,
											"end": 8247,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8234,
											"end": 8251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8225,
											"end": 8231,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8181,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 8181,
											"end": 8252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8181,
											"end": 8252,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 8181,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8262,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 8330,
											"end": 8332,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8319,
											"end": 8328,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8315,
											"end": 8333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8306,
											"end": 8312,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8262,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 8262,
											"end": 8334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8262,
											"end": 8334,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 8262,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8009,
											"end": 8341,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8009,
											"end": 8341,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8009,
											"end": 8341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8009,
											"end": 8341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8009,
											"end": 8341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8009,
											"end": 8341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8347,
											"end": 8527,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 8347,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8395,
											"end": 8472,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8392,
											"end": 8393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8385,
											"end": 8473,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8492,
											"end": 8496,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 8489,
											"end": 8490,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8482,
											"end": 8497,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8516,
											"end": 8520,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8513,
											"end": 8514,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8521,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8533,
											"end": 8853,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 8533,
											"end": 8853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8577,
											"end": 8583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8614,
											"end": 8615,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 8608,
											"end": 8612,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8604,
											"end": 8616,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 8616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 8616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8661,
											"end": 8662,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8655,
											"end": 8659,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8651,
											"end": 8663,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8682,
											"end": 8700,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 8672,
											"end": 8753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8738,
											"end": 8742,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 8730,
											"end": 8736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8726,
											"end": 8743,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8753,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 8672,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8800,
											"end": 8802,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8792,
											"end": 8798,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8789,
											"end": 8803,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8766,
											"end": 8804,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8763,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 8763,
											"end": 8847,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8819,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 8819,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 8819,
											"end": 8837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8819,
											"end": 8837,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 8819,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8763,
											"end": 8847,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 8763,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8584,
											"end": 8853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8533,
											"end": 8853,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8533,
											"end": 8853,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8533,
											"end": 8853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8533,
											"end": 8853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8859,
											"end": 9035,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 8859,
											"end": 9035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9027,
											"name": "PUSH",
											"source": 10,
											"value": "427579207461782063616E6E6F74206578636565642031303025000000000000"
										},
										{
											"begin": 8995,
											"end": 8996,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8987,
											"end": 8993,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8983,
											"end": 8997,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8976,
											"end": 9028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8859,
											"end": 9035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8859,
											"end": 9035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9041,
											"end": 9407,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 9041,
											"end": 9407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9186,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 9268,
											"end": 9270,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 9263,
											"end": 9266,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9204,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 9204,
											"end": 9271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9204,
											"end": 9271,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 9204,
											"end": 9271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9197,
											"end": 9271,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9197,
											"end": 9271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9280,
											"end": 9373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 9369,
											"end": 9372,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9280,
											"end": 9373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 9280,
											"end": 9373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9280,
											"end": 9373,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 9280,
											"end": 9373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9398,
											"end": 9400,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9393,
											"end": 9396,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 9401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9382,
											"end": 9401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9382,
											"end": 9401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9041,
											"end": 9407,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9041,
											"end": 9407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9041,
											"end": 9407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9041,
											"end": 9407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9832,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 9413,
											"end": 9832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9579,
											"end": 9583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9619,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9606,
											"end": 9615,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9602,
											"end": 9620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 9620,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 9620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9666,
											"end": 9675,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9660,
											"end": 9664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9656,
											"end": 9676,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9652,
											"end": 9653,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9641,
											"end": 9650,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9637,
											"end": 9654,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9630,
											"end": 9677,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9694,
											"end": 9825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 9820,
											"end": 9824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9694,
											"end": 9825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 9694,
											"end": 9825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9694,
											"end": 9825,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 9694,
											"end": 9825,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9686,
											"end": 9825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9686,
											"end": 9825,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9832,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9832,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9838,
											"end": 10015,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 9838,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9978,
											"end": 10007,
											"name": "PUSH",
											"source": 10,
											"value": "53656C6C207461782063616E6E6F742065786365656420313030250000000000"
										},
										{
											"begin": 9974,
											"end": 9975,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9966,
											"end": 9972,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9962,
											"end": 9976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9955,
											"end": 10008,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9838,
											"end": 10015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9838,
											"end": 10015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10021,
											"end": 10387,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 10021,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10163,
											"end": 10166,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 10248,
											"end": 10250,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 10243,
											"end": 10246,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10184,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 10184,
											"end": 10251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10184,
											"end": 10251,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 10184,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10177,
											"end": 10251,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10177,
											"end": 10251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10260,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 10349,
											"end": 10352,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10260,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 10260,
											"end": 10353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10260,
											"end": 10353,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 10260,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10378,
											"end": 10380,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10373,
											"end": 10376,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10381,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10381,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10021,
											"end": 10387,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10021,
											"end": 10387,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10021,
											"end": 10387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10021,
											"end": 10387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10393,
											"end": 10812,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 10393,
											"end": 10812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10559,
											"end": 10563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10597,
											"end": 10599,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10586,
											"end": 10595,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10582,
											"end": 10600,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10574,
											"end": 10600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10574,
											"end": 10600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10646,
											"end": 10655,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10636,
											"end": 10656,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10633,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10621,
											"end": 10630,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10610,
											"end": 10657,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10674,
											"end": 10805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 10800,
											"end": 10804,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10674,
											"end": 10805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 10674,
											"end": 10805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10674,
											"end": 10805,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 10674,
											"end": 10805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10666,
											"end": 10805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10666,
											"end": 10805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10393,
											"end": 10812,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10393,
											"end": 10812,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10393,
											"end": 10812,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10393,
											"end": 10812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10818,
											"end": 11260,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 10818,
											"end": 11260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10967,
											"end": 10971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11005,
											"end": 11007,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10994,
											"end": 11003,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10990,
											"end": 11008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10982,
											"end": 11008,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10982,
											"end": 11008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11018,
											"end": 11089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 11086,
											"end": 11087,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11075,
											"end": 11084,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11071,
											"end": 11088,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11062,
											"end": 11068,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11018,
											"end": 11089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 11018,
											"end": 11089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11018,
											"end": 11089,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 11018,
											"end": 11089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 11167,
											"end": 11169,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11156,
											"end": 11165,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11152,
											"end": 11170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11149,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 11099,
											"end": 11171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11171,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 11099,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11181,
											"end": 11253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 11249,
											"end": 11251,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11238,
											"end": 11247,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11252,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11225,
											"end": 11231,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11181,
											"end": 11253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 11181,
											"end": 11253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11181,
											"end": 11253,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 11181,
											"end": 11253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10818,
											"end": 11260,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 10818,
											"end": 11260,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10818,
											"end": 11260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10818,
											"end": 11260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10818,
											"end": 11260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10818,
											"end": 11260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10818,
											"end": 11260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11266,
											"end": 11446,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 11266,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11314,
											"end": 11391,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11311,
											"end": 11312,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11304,
											"end": 11392,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11411,
											"end": 11415,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 11408,
											"end": 11409,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11401,
											"end": 11416,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11435,
											"end": 11439,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11432,
											"end": 11433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11425,
											"end": 11440,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11452,
											"end": 11643,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 11452,
											"end": 11643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11492,
											"end": 11495,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11511,
											"end": 11531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 11529,
											"end": 11530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11511,
											"end": 11531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 11511,
											"end": 11531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11511,
											"end": 11531,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 11511,
											"end": 11531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11506,
											"end": 11531,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11506,
											"end": 11531,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11545,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 11563,
											"end": 11564,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11545,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 11545,
											"end": 11565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11545,
											"end": 11565,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 11545,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11540,
											"end": 11565,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11540,
											"end": 11565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11588,
											"end": 11589,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11585,
											"end": 11586,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 11590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11574,
											"end": 11590,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11574,
											"end": 11590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11609,
											"end": 11612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11606,
											"end": 11607,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11603,
											"end": 11613,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11600,
											"end": 11636,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11600,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 11600,
											"end": 11636,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11616,
											"end": 11634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 11616,
											"end": 11634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 11616,
											"end": 11634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11616,
											"end": 11634,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 11616,
											"end": 11634,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11600,
											"end": 11636,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 11600,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11452,
											"end": 11643,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11452,
											"end": 11643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11452,
											"end": 11643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11452,
											"end": 11643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11452,
											"end": 11643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								".deps/token.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"AIRDROP_WALLET_AMOUNT()": "72a8a933",
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"MARKETING_WALLET_AMOUNT()": "b3a88c1b",
							"MAX_SUPPLY()": "32cb6b0c",
							"addToBlacklist(address)": "44337ea1",
							"addToWhitelist(address)": "e43252d7",
							"adjustTaxes(uint256,uint256)": "6f0b00ac",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveForDEX(address,uint256)": "6c95702b",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"currentTaxes()": "eb1e7387",
							"decimals()": "313ce567",
							"excludeFromTax(address)": "60d1259e",
							"includeInTax(address)": "e17c4c74",
							"isBlacklisted(address)": "fe575a87",
							"isExcludedFromTax(address)": "cb4ca631",
							"isWhitelisted(address)": "3af32abf",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"removeFromBlacklist(address)": "537df3b6",
							"removeFromWhitelist(address)": "8ab1d681",
							"renounceOwnership()": "715018a6",
							"setTreasuryAddress(address)": "6605bfda",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"treasuryAddress()": "c5f956af",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_treasuryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyTax\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sellTax\",\"type\":\"uint256\"}],\"name\":\"TaxesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AIRDROP_WALLET_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MARKETING_WALLET_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addToBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBuyTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newSellTax\",\"type\":\"uint256\"}],\"name\":\"adjustTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dexAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveForDEX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTaxes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"buyTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellTax\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromTax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newTreasuryAddress\",\"type\":\"address\"}],\"name\":\"setTreasuryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/token.sol\":\"LivingTheDream\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/token.sol\":{\"keccak256\":\"0x2668584db97335e95baf6c887f0cb0441e6f9e1adc1433ea97badfaac4262081\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5895d61de552b56348ce6349f32a03dfb15387c0c965f1b48ea71bde68a919a9\",\"dweb:/ipfs/QmPrjzmqQ8CZUL6dUWuQGo6fMbh11eCsEGajPmBqUzViSe\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 772,
								"contract": ".deps/token.sol:LivingTheDream",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 778,
								"contract": ".deps/token.sol:LivingTheDream",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 780,
								"contract": ".deps/token.sol:LivingTheDream",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 782,
								"contract": ".deps/token.sol:LivingTheDream",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 784,
								"contract": ".deps/token.sol:LivingTheDream",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 408,
								"contract": ".deps/token.sol:LivingTheDream",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 695,
								"contract": ".deps/token.sol:LivingTheDream",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1453,
								"contract": ".deps/token.sol:LivingTheDream",
								"label": "_paused",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 48,
								"contract": ".deps/token.sol:LivingTheDream",
								"label": "isWhitelisted",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 52,
								"contract": ".deps/token.sol:LivingTheDream",
								"label": "isBlacklisted",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 56,
								"contract": ".deps/token.sol:LivingTheDream",
								"label": "isExcludedFromTax",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 64,
								"contract": ".deps/token.sol:LivingTheDream",
								"label": "currentTaxes",
								"offset": 0,
								"slot": "11",
								"type": "t_struct(Taxes)61_storage"
							},
							{
								"astId": 72,
								"contract": ".deps/token.sol:LivingTheDream",
								"label": "treasuryAddress",
								"offset": 0,
								"slot": "13",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Taxes)61_storage": {
								"encoding": "inplace",
								"label": "struct LivingTheDream.Taxes",
								"members": [
									{
										"astId": 58,
										"contract": ".deps/token.sol:LivingTheDream",
										"label": "buyTax",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 60,
										"contract": ".deps/token.sol:LivingTheDream",
										"label": "sellTax",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 408,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 695,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 772,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 778,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 780,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 782,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 784,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 772,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 778,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 780,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 782,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 784,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1453,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/token.sol": {
				"ast": {
					"absolutePath": ".deps/token.sol",
					"exportedSymbols": {
						"Context": [
							1444
						],
						"ERC20": [
							1264
						],
						"ERC20Burnable": [
							1388
						],
						"IERC20": [
							1342
						],
						"IERC20Errors": [
							589
						],
						"IERC20Metadata": [
							1414
						],
						"LivingTheDream": [
							399
						],
						"Ownable": [
							547
						],
						"Pausable": [
							1561
						],
						"ReentrancyGuard": [
							749
						]
					},
					"id": 400,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 400,
							"sourceUnit": 1265,
							"src": "63:55:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 400,
							"sourceUnit": 1389,
							"src": "120:74:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 400,
							"sourceUnit": 548,
							"src": "196:52:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 400,
							"sourceUnit": 750,
							"src": "250:62:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "@openzeppelin/contracts/utils/Pausable.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 400,
							"sourceUnit": 1562,
							"src": "314:52:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "ERC20",
										"nameLocations": [
											"397:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1264,
										"src": "397:5:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "397:5:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ERC20Burnable",
										"nameLocations": [
											"404:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1388,
										"src": "404:13:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "404:13:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "Ownable",
										"nameLocations": [
											"419:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 547,
										"src": "419:7:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "419:7:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"428:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 749,
										"src": "428:15:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "428:15:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "Pausable",
										"nameLocations": [
											"445:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1561,
										"src": "445:8:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "445:8:0"
								}
							],
							"canonicalName": "LivingTheDream",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 399,
							"linearizedBaseContracts": [
								399,
								1561,
								749,
								547,
								1388,
								1264,
								589,
								1414,
								1342,
								1444
							],
							"name": "LivingTheDream",
							"nameLocation": "379:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "32cb6b0c",
									"id": 23,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "485:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 399,
									"src": "461:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 17,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "461:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_333333333333000000000000000000_by_1",
											"typeString": "int_const 333333333333000000000000000000"
										},
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "333333333333333333333333",
											"id": 18,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "498:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_333333333333_by_1",
												"typeString": "int_const 333333333333"
											},
											"value": "333333333333"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 21,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 19,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "513:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 20,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "517:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "513:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "498:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_333333333333000000000000000000_by_1",
											"typeString": "int_const 333333333333000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2ff2e9dc",
									"id": 30,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "551:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 399,
									"src": "527:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "527:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_33333333333000000000000000000_by_1",
											"typeString": "int_const 33333333333000000000000000000"
										},
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3333333333333333333333",
											"id": 25,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "568:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_33333333333_by_1",
												"typeString": "int_const 33333333333"
											},
											"value": "33333333333"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 28,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 26,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "582:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 27,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "586:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "582:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "568:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33333333333000000000000000000_by_1",
											"typeString": "int_const 33333333333000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b3a88c1b",
									"id": 37,
									"mutability": "constant",
									"name": "MARKETING_WALLET_AMOUNT",
									"nameLocation": "619:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 399,
									"src": "595:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 31,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "595:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_5533333333000000000000000000_by_1",
											"typeString": "int_const 5533333333000000000000000000"
										},
										"id": 36,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "35353333333333333333",
											"id": 32,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "645:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5533333333_by_1",
												"typeString": "int_const 5533333333"
											},
											"value": "5533333333"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 35,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 33,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "658:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 34,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "662:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "658:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "645:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5533333333000000000000000000_by_1",
											"typeString": "int_const 5533333333000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "72a8a933",
									"id": 44,
									"mutability": "constant",
									"name": "AIRDROP_WALLET_AMOUNT",
									"nameLocation": "695:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 399,
									"src": "671:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 38,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "671:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_27777777777000000000000000000_by_1",
											"typeString": "int_const 27777777777000000000000000000"
										},
										"id": 43,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3237373737373737373737",
											"id": 39,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "719:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_27777777777_by_1",
												"typeString": "int_const 27777777777"
											},
											"value": "27777777777"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 42,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 40,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "733:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 41,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "737:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "733:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "719:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_27777777777000000000000000000_by_1",
											"typeString": "int_const 27777777777000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3af32abf",
									"id": 48,
									"mutability": "mutable",
									"name": "isWhitelisted",
									"nameLocation": "780:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 399,
									"src": "748:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 47,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 45,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "756:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "748:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 46,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "767:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fe575a87",
									"id": 52,
									"mutability": "mutable",
									"name": "isBlacklisted",
									"nameLocation": "832:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 399,
									"src": "800:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 51,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 49,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "808:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "800:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 50,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "819:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb4ca631",
									"id": 56,
									"mutability": "mutable",
									"name": "isExcludedFromTax",
									"nameLocation": "884:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 399,
									"src": "852:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 55,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 53,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "860:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "852:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 54,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "871:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LivingTheDream.Taxes",
									"id": 61,
									"members": [
										{
											"constant": false,
											"id": 58,
											"mutability": "mutable",
											"name": "buyTax",
											"nameLocation": "943:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 61,
											"src": "935:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 57,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "935:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 60,
											"mutability": "mutable",
											"name": "sellTax",
											"nameLocation": "968:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 61,
											"src": "960:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 59,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "960:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Taxes",
									"nameLocation": "918:5:0",
									"nodeType": "StructDefinition",
									"scope": 399,
									"src": "911:72:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eb1e7387",
									"id": 64,
									"mutability": "mutable",
									"name": "currentTaxes",
									"nameLocation": "1004:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 399,
									"src": "991:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Taxes_$61_storage",
										"typeString": "struct LivingTheDream.Taxes"
									},
									"typeName": {
										"id": 63,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 62,
											"name": "Taxes",
											"nameLocations": [
												"991:5:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 61,
											"src": "991:5:0"
										},
										"referencedDeclaration": 61,
										"src": "991:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Taxes_$61_storage_ptr",
											"typeString": "struct LivingTheDream.Taxes"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5eee0b95930ee59011f34615b0b7dc6cc58c01d1f07d04a01a3a1e70d2554cf0",
									"id": 70,
									"name": "TaxesChanged",
									"nameLocation": "1031:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyTax",
												"nameLocation": "1052:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1044:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": false,
												"mutability": "mutable",
												"name": "sellTax",
												"nameLocation": "1068:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1060:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:33:0"
									},
									"src": "1025:52:0"
								},
								{
									"constant": false,
									"functionSelector": "c5f956af",
									"id": 72,
									"mutability": "mutable",
									"name": "treasuryAddress",
									"nameLocation": "1114:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 399,
									"src": "1091:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 71,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1091:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "1257:558:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 88,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1284:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1288:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1284:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 90,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1296:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 87,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "1278:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1278:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1278:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307833453535654663363034413345303231303639414134383532414235413937373938333031466435",
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1328:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x3E55eFc604A3E021069AA4852AB5A97798301Fd5"
														},
														{
															"id": 95,
															"name": "MARKETING_WALLET_AMOUNT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "1372:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 93,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "1322:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1322:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "1322:74:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307835343431324530383932633533346338394130373632353265333832344631663766353439633532",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1465:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x54412E0892c534c89A076252e3824F1f7f549c52"
														},
														{
															"id": 100,
															"name": "AIRDROP_WALLET_AMOUNT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1509:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 98,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "1459:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1459:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "1459:72:0"
											},
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "currentTaxes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1542:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Taxes_$61_storage",
															"typeString": "struct LivingTheDream.Taxes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "37",
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1563:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7_by_1",
																	"typeString": "int_const 7"
																},
																"value": "7"
															},
															{
																"hexValue": "3130",
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1566:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_7_by_1",
																	"typeString": "int_const 7"
																},
																{
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															],
															"id": 104,
															"name": "Taxes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1557:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Taxes_$61_storage_ptr_$",
																"typeString": "type(struct LivingTheDream.Taxes storage pointer)"
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1557:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Taxes_$61_memory_ptr",
															"typeString": "struct LivingTheDream.Taxes memory"
														}
													},
													"src": "1542:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Taxes_$61_storage",
														"typeString": "struct LivingTheDream.Taxes storage ref"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "1542:27:0"
											},
											{
												"expression": {
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 110,
														"name": "treasuryAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "1580:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 111,
														"name": "_treasuryAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1598:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1580:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1580:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1631:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1641:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "1625:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1625:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "1625:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 120,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1739:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 119,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1721:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "1721:27:0"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4c6976696e672054686520447265616d",
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1210:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c9ff5c4721242a8b6cf21f769c84f45e85a60d5905553fe8a6e4c889a6cd888a",
														"typeString": "literal_string \"Living The Dream\""
													},
													"value": "Living The Dream"
												},
												{
													"hexValue": "4c5444",
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1230:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d7944dcbf6cd66bf136592d9e82753c949b238f4d6695f094aa1779e2926699f",
														"typeString": "literal_string \"LTD\""
													},
													"value": "LTD"
												}
											],
											"id": 81,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 78,
												"name": "ERC20",
												"nameLocations": [
													"1204:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1264,
												"src": "1204:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1204:32:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 83,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1245:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1249:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1245:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 85,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 82,
												"name": "Ownable",
												"nameLocations": [
													"1237:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 547,
												"src": "1237:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1237:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "_treasuryAddress",
												"nameLocation": "1168:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "1152:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1152:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1194:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "1186:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:52:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1257:0:0"
									},
									"scope": 399,
									"src": "1140:675:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "1949:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 134,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "1966:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 135,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "1972:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 133,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "1960:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1960:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "1960:19:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 131,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 130,
												"name": "onlyOwner",
												"nameLocations": [
													"1939:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "1939:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1939:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "1895:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1908:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1900:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1922:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1914:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1899:30:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1949:0:0"
									},
									"scope": 399,
									"src": "1886:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "2101:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 144,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "2112:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2112:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "2112:8:0"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"2091:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "2091:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2091:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "2074:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2079:2:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:0:0"
									},
									"scope": 399,
									"src": "2065:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2224:29:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 153,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "2235:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2235:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2235:10:0"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 151,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 150,
												"name": "onlyOwner",
												"nameLocations": [
													"2214:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "2214:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2214:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "2195:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2202:2:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2224:0:0"
									},
									"scope": 399,
									"src": "2186:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "2377:127:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 167,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "2437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 168,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "2446:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 166,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "2431:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2431:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "2431:22:0"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 164,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 163,
												"name": "onlyOwner",
												"nameLocations": [
													"2367:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "2367:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2367:9:0"
										}
									],
									"name": "burn",
									"nameLocation": "2322:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2335:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2327:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2352:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2344:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:33:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2377:0:0"
									},
									"scope": 399,
									"src": "2313:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "2619:48:0",
										"statements": [
											{
												"expression": {
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 179,
															"name": "isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "2630:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 181,
														"indexExpression": {
															"id": 180,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2644:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2630:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2655:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2630:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "2630:29:0"
											}
										]
									},
									"functionSelector": "e43252d7",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 177,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 176,
												"name": "onlyOwner",
												"nameLocations": [
													"2609:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "2609:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2609:9:0"
										}
									],
									"name": "addToWhitelist",
									"nameLocation": "2568:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2591:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2583:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2582:17:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2619:0:0"
									},
									"scope": 399,
									"src": "2559:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2740:49:0",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 193,
															"name": "isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "2751:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 195,
														"indexExpression": {
															"id": 194,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "2765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2751:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2776:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2751:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2751:30:0"
											}
										]
									},
									"functionSelector": "8ab1d681",
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 190,
												"name": "onlyOwner",
												"nameLocations": [
													"2730:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "2730:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2730:9:0"
										}
									],
									"name": "removeFromWhitelist",
									"nameLocation": "2684:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2712:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2704:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:17:0"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2740:0:0"
									},
									"scope": 399,
									"src": "2675:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "2857:48:0",
										"statements": [
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 207,
															"name": "isBlacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "2868:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 209,
														"indexExpression": {
															"id": 208,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2882:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2868:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2893:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2868:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2868:29:0"
											}
										]
									},
									"functionSelector": "44337ea1",
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 205,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 204,
												"name": "onlyOwner",
												"nameLocations": [
													"2847:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "2847:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2847:9:0"
										}
									],
									"name": "addToBlacklist",
									"nameLocation": "2806:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2829:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2821:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:17:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2857:0:0"
									},
									"scope": 399,
									"src": "2797:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "2978:49:0",
										"statements": [
											{
												"expression": {
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 221,
															"name": "isBlacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "2989:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 223,
														"indexExpression": {
															"id": 222,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3003:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2989:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3014:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2989:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "2989:30:0"
											}
										]
									},
									"functionSelector": "537df3b6",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 219,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 218,
												"name": "onlyOwner",
												"nameLocations": [
													"2968:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "2968:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2968:9:0"
										}
									],
									"name": "removeFromBlacklist",
									"nameLocation": "2922:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2950:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "2942:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2942:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2941:17:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2978:0:0"
									},
									"scope": 399,
									"src": "2913:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "3150:52:0",
										"statements": [
											{
												"expression": {
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 235,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3161:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 237,
														"indexExpression": {
															"id": 236,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "3179:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3161:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3190:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3161:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "3161:33:0"
											}
										]
									},
									"functionSelector": "60d1259e",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 233,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 232,
												"name": "onlyOwner",
												"nameLocations": [
													"3140:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "3140:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3140:9:0"
										}
									],
									"name": "excludeFromTax",
									"nameLocation": "3099:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3122:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "3114:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3113:17:0"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3150:0:0"
									},
									"scope": 399,
									"src": "3090:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "3268:53:0",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 249,
															"name": "isExcludedFromTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3279:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 251,
														"indexExpression": {
															"id": 250,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "3297:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3279:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3308:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3279:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "3279:34:0"
											}
										]
									},
									"functionSelector": "e17c4c74",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 247,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 246,
												"name": "onlyOwner",
												"nameLocations": [
													"3258:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "3258:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3258:9:0"
										}
									],
									"name": "includeInTax",
									"nameLocation": "3219:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3240:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3232:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3231:17:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3268:0:0"
									},
									"scope": 399,
									"src": "3210:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "3421:570:0",
										"statements": [
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "taxAmount",
														"nameLocation": "3463:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "3455:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3455:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"hexValue": "30",
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3475:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3455:21:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3491:24:0",
														"subExpression": {
															"baseExpression": {
																"id": 269,
																"name": "isExcludedFromTax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "3492:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 271,
															"indexExpression": {
																"id": 270,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "3510:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3492:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3519:22:0",
														"subExpression": {
															"baseExpression": {
																"id": 273,
																"name": "isExcludedFromTax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "3520:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 275,
															"indexExpression": {
																"id": 274,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "3538:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3520:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3491:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 313,
												"nodeType": "IfStatement",
												"src": "3487:356:0",
												"trueBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "3543:300:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 278,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "3562:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 281,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3578:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LivingTheDream_$399",
																				"typeString": "contract LivingTheDream"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LivingTheDream_$399",
																				"typeString": "contract LivingTheDream"
																			}
																		],
																		"id": 280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3570:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 279,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3570:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3570:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3562:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "3688:20:0",
																	"subExpression": {
																		"baseExpression": {
																			"id": 295,
																			"name": "isWhitelisted",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "3689:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 297,
																		"indexExpression": {
																			"id": 296,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 258,
																			"src": "3703:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3689:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 310,
																"nodeType": "IfStatement",
																"src": "3684:148:0",
																"trueBody": {
																	"id": 309,
																	"nodeType": "Block",
																	"src": "3710:122:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 299,
																					"name": "taxAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 266,
																					"src": "3768:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 306,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 303,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 300,
																									"name": "amount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 262,
																									"src": "3781:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"expression": {
																										"id": 301,
																										"name": "currentTaxes",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 64,
																										"src": "3790:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Taxes_$61_storage",
																											"typeString": "struct LivingTheDream.Taxes storage ref"
																										}
																									},
																									"id": 302,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "3803:6:0",
																									"memberName": "buyTax",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 58,
																									"src": "3790:19:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "3781:28:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 304,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3780:30:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "313030",
																						"id": 305,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3813:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"src": "3780:36:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3768:48:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 308,
																			"nodeType": "ExpressionStatement",
																			"src": "3768:48:0"
																		}
																	]
																}
															},
															"id": 311,
															"nodeType": "IfStatement",
															"src": "3558:274:0",
															"trueBody": {
																"id": 294,
																"nodeType": "Block",
																"src": "3585:93:0",
																"statements": [
																	{
																		"expression": {
																			"id": 292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 284,
																				"name": "taxAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 266,
																				"src": "3613:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 288,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 285,
																								"name": "amount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 262,
																								"src": "3626:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"expression": {
																									"id": 286,
																									"name": "currentTaxes",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 64,
																									"src": "3635:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Taxes_$61_storage",
																										"typeString": "struct LivingTheDream.Taxes storage ref"
																									}
																								},
																								"id": 287,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "3648:7:0",
																								"memberName": "sellTax",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 60,
																								"src": "3635:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3626:29:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 289,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3625:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "313030",
																					"id": 290,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3659:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "3625:37:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3613:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 293,
																		"nodeType": "ExpressionStatement",
																		"src": "3613:49:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 314,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3859:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3871:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3859:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "3855:129:0",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "3874:110:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 318,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "3899:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 319,
																		"name": "treasuryAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 72,
																		"src": "3905:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 320,
																		"name": "taxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "3922:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 317,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "3889:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3889:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 322,
															"nodeType": "ExpressionStatement",
															"src": "3889:43:0"
														}
													]
												}
											}
										]
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "3342:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3370:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3362:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3362:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3384:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3376:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3396:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3388:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3361:42:0"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3421:0:0"
									},
									"scope": 399,
									"src": "3333:658:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "4160:55:0",
										"statements": [
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 333,
														"name": "treasuryAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "4171:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 334,
														"name": "newTreasuryAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "4189:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4171:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "4171:36:0"
											}
										]
									},
									"functionSelector": "6605bfda",
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 331,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 330,
												"name": "onlyOwner",
												"nameLocations": [
													"4150:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "4150:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4150:9:0"
										}
									],
									"name": "setTreasuryAddress",
									"nameLocation": "4086:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "newTreasuryAddress",
												"nameLocation": "4121:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4105:34:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4105:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4104:36:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4160:0:0"
									},
									"scope": 399,
									"src": "4077:138:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "4302:279:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 348,
																"name": "newBuyTax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "4321:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4334:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "4321:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "427579207461782063616e6e6f74206578636565642031303025",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4339:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a33bfab18a6de612b6b039e5e52eb634385ebc0dbb9f4cdf64abe40396fdc2f3",
																"typeString": "literal_string \"Buy tax cannot exceed 100%\""
															},
															"value": "Buy tax cannot exceed 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a33bfab18a6de612b6b039e5e52eb634385ebc0dbb9f4cdf64abe40396fdc2f3",
																"typeString": "literal_string \"Buy tax cannot exceed 100%\""
															}
														],
														"id": 347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4313:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4313:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "4313:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "newSellTax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "4387:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4401:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "4387:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c6c207461782063616e6e6f74206578636565642031303025",
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4406:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e9b404c3459543b63ed5b86ced3b9da846d3c8c37f19bf2e150da762db1045e0",
																"typeString": "literal_string \"Sell tax cannot exceed 100%\""
															},
															"value": "Sell tax cannot exceed 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e9b404c3459543b63ed5b86ced3b9da846d3c8c37f19bf2e150da762db1045e0",
																"typeString": "literal_string \"Sell tax cannot exceed 100%\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4379:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4379:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "4379:57:0"
											},
											{
												"expression": {
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 361,
															"name": "currentTaxes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "4447:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Taxes_$61_storage",
																"typeString": "struct LivingTheDream.Taxes storage ref"
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4460:6:0",
														"memberName": "buyTax",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 58,
														"src": "4447:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 364,
														"name": "newBuyTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "4469:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4447:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "4447:31:0"
											},
											{
												"expression": {
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 367,
															"name": "currentTaxes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "4489:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Taxes_$61_storage",
																"typeString": "struct LivingTheDream.Taxes storage ref"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4502:7:0",
														"memberName": "sellTax",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 60,
														"src": "4489:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 370,
														"name": "newSellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "4512:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4489:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "4489:33:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 374,
															"name": "newBuyTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "4551:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 375,
															"name": "newSellTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "4562:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 373,
														"name": "TaxesChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "4538:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4538:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "EmitStatement",
												"src": "4533:40:0"
											}
										]
									},
									"functionSelector": "6f0b00ac",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 345,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 344,
												"name": "onlyOwner",
												"nameLocations": [
													"4292:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "4292:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4292:9:0"
										}
									],
									"name": "adjustTaxes",
									"nameLocation": "4232:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "newBuyTax",
												"nameLocation": "4252:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "4244:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "newSellTax",
												"nameLocation": "4271:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "4263:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4243:39:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4302:0:0"
									},
									"scope": 399,
									"src": "4223:358:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "4667:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 391,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4695:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LivingTheDream_$399",
																		"typeString": "contract LivingTheDream"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LivingTheDream_$399",
																		"typeString": "contract LivingTheDream"
																	}
																],
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4687:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 389,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4687:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4687:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "dexAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "4702:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 394,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "4714:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 388,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1155,
															1215
														],
														"referencedDeclaration": 1155,
														"src": "4678:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4678:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "4678:43:0"
											}
										]
									},
									"functionSelector": "6c95702b",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 386,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 385,
												"name": "onlyOwner",
												"nameLocations": [
													"4657:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "4657:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4657:9:0"
										}
									],
									"name": "approveForDEX",
									"nameLocation": "4598:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "dexAddress",
												"nameLocation": "4620:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "4612:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4640:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "4632:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4611:36:0"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:0"
									},
									"scope": 399,
									"src": "4589:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 400,
							"src": "370:4362:0",
							"usedErrors": [
								413,
								418,
								559,
								564,
								569,
								578,
								583,
								588,
								1466,
								1469
							],
							"usedEvents": [
								70,
								424,
								1276,
								1285,
								1458,
								1463
							]
						}
					],
					"src": "35:4701:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1444
						],
						"Ownable": [
							547
						]
					},
					"id": 548,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 401,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 403,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 548,
							"sourceUnit": 1445,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 402,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1444,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 405,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1444,
										"src": "692:7:1"
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 404,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 547,
							"linearizedBaseContracts": [
								547,
								1444
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 408,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 547,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 407,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 413,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 418,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 424,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 444,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 443,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 437,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 436,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 442,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 445,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 450,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 547,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 453,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 456,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 458,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 464,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 408,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 463,
												"id": 465,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 547,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 471,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 473,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 482,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 481,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 477,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 476,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 480,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 547,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 491,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 490,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 488,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 487,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 547,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 506,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 507,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 520,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 519,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 513,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 512,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 518,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 521,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 504,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 503,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 458,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 547,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													533
												],
												"declarations": [
													{
														"constant": false,
														"id": 533,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 532,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"id": 534,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 408,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 536,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 537,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 541,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 542,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 540,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 547,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 548,
							"src": "663:2438:1",
							"usedErrors": [
								413,
								418
							],
							"usedEvents": [
								424
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							684
						],
						"IERC20Errors": [
							589
						],
						"IERC721Errors": [
							637
						]
					},
					"id": 685,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 549,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 550,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 589,
							"linearizedBaseContracts": [
								589
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 559,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 564,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 569,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 578,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 583,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 588,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 685,
							"src": "278:1764:2",
							"usedErrors": [
								559,
								564,
								569,
								578,
								583,
								588
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 590,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 637,
							"linearizedBaseContracts": [
								637
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 595,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 600,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 609,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 614,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 619,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 626,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 631,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 636,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 685,
							"src": "2186:2092:2",
							"usedErrors": [
								595,
								600,
								609,
								614,
								619,
								626,
								631,
								636
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 638,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 684,
							"linearizedBaseContracts": [
								684
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 649,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 654,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 659,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 666,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 671,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 676,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 683,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 685,
							"src": "4424:2107:2",
							"usedErrors": [
								649,
								654,
								659,
								666,
								671,
								676,
								683
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							749
						]
					},
					"id": 750,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 686,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 687,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 749,
							"linearizedBaseContracts": [
								749
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 690,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 749,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 688,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 689,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 693,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 749,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 691,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 692,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 695,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 749,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 694,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 698,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 699,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 703,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 749,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 706,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 709,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 710,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 714,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 718,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 719,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 724,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 725,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 749,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 732,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 733,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 749,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 743,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 744,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 742,
												"id": 746,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 740,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 749,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 750,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1444
						],
						"ERC20": [
							1264
						],
						"IERC20": [
							1342
						],
						"IERC20Errors": [
							589
						],
						"IERC20Metadata": [
							1414
						]
					},
					"id": 1265,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 751,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 753,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1265,
							"sourceUnit": 1343,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 752,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1342,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1265,
							"sourceUnit": 1415,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 754,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1414,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 757,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1265,
							"sourceUnit": 1445,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 756,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1444,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 759,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1265,
							"sourceUnit": 685,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 758,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 589,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 761,
										"name": "Context",
										"nameLocations": [
											"1428:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1444,
										"src": "1428:7:4"
									},
									"id": 762,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:4"
								},
								{
									"baseName": {
										"id": 763,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1342,
										"src": "1437:6:4"
									},
									"id": 764,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:4"
								},
								{
									"baseName": {
										"id": 765,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1414,
										"src": "1445:14:4"
									},
									"id": 766,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:4"
								},
								{
									"baseName": {
										"id": 767,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 589,
										"src": "1461:12:4"
									},
									"id": 768,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 760,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1264,
							"linearizedBaseContracts": [
								1264,
								589,
								1414,
								1342,
								1444
							],
							"name": "ERC20",
							"nameLocation": "1419:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 772,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1264,
									"src": "1480:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 771,
										"keyName": "account",
										"keyNameLocation": "1496:7:4",
										"keyType": {
											"id": 769,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 770,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 778,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1264,
									"src": "1540:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 777,
										"keyName": "account",
										"keyNameLocation": "1556:7:4",
										"keyType": {
											"id": 773,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 776,
											"keyName": "spender",
											"keyNameLocation": "1583:7:4",
											"keyType": {
												"id": 774,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 775,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 780,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1264,
									"src": "1630:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 779,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 782,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1264,
									"src": "1665:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 781,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 784,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1264,
									"src": "1691:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 783,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "1952:57:4",
										"statements": [
											{
												"expression": {
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 792,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "1962:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 793,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "1970:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:4"
											},
											{
												"expression": {
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 796,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "1985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 797,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "1995:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:4"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 801,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "1908:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 786,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "1929:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 788,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:4"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:4"
									},
									"scope": 1264,
									"src": "1896:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1401
									],
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "2134:29:4",
										"statements": [
											{
												"expression": {
													"id": 807,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 782,
													"src": "2151:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 806,
												"id": 808,
												"nodeType": "Return",
												"src": "2144:12:4"
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:4"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "2119:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 804,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:4"
									},
									"scope": 1264,
									"src": "2074:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "2338:31:4",
										"statements": [
											{
												"expression": {
													"id": 816,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 784,
													"src": "2355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 815,
												"id": 817,
												"nodeType": "Return",
												"src": "2348:14:4"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:4"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2323:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 813,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:4"
									},
									"scope": 1264,
									"src": "2276:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1413
									],
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "3058:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 824,
												"id": 826,
												"nodeType": "Return",
												"src": "3068:9:4"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:4"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "3051:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 822,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:4"
									},
									"scope": 1264,
									"src": "3002:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1291
									],
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "3205:36:4",
										"statements": [
											{
												"expression": {
													"id": 834,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 780,
													"src": "3222:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 833,
												"id": 835,
												"nodeType": "Return",
												"src": "3215:19:4"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:4"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "3196:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:4"
									},
									"scope": 1264,
									"src": "3144:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1299
									],
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "3373:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 845,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "3390:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 847,
													"indexExpression": {
														"id": 846,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "3400:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 844,
												"id": 848,
												"nodeType": "Return",
												"src": "3383:25:4"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "3318:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:4"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "3364:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:4"
									},
									"scope": 1264,
									"src": "3299:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1309
									],
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "3685:103:4",
										"statements": [
											{
												"assignments": [
													861
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 873,
														"src": "3695:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 860,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 864,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 862,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "3711:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 866,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "3743:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 867,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "3750:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 868,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "3754:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 865,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "3733:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 859,
												"id": 872,
												"nodeType": "Return",
												"src": "3770:11:4"
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "3628:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "3640:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:4"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "3679:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:4"
									},
									"scope": 1264,
									"src": "3610:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1319
									],
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "3935:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 884,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "3952:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 886,
														"indexExpression": {
															"id": 885,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "3964:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 888,
													"indexExpression": {
														"id": 887,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "3971:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 883,
												"id": 889,
												"nodeType": "Return",
												"src": "3945:34:4"
											}
										]
									},
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "3865:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "3880:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:4"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "3926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:4"
									},
									"scope": 1264,
									"src": "3846:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1329
									],
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "4372:107:4",
										"statements": [
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "4382:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 901,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 903,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "4398:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 907,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "4429:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 908,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "4436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "4445:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 906,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1155,
															1215
														],
														"referencedDeclaration": 1155,
														"src": "4420:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 900,
												"id": 913,
												"nodeType": "Return",
												"src": "4461:11:4"
											}
										]
									},
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "4310:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "4327:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:4"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "4366:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 898,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:4"
									},
									"scope": 1264,
									"src": "4293:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1341
									],
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "5132:151:4",
										"statements": [
											{
												"assignments": [
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 946,
														"src": "5142:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 927,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 931,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 929,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "5160:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 933,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "5198:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "5204:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "5213:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 932,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "5182:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "5239:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "5245:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "5249:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 938,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "5229:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 926,
												"id": 945,
												"nodeType": "Return",
												"src": "5265:11:4"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5061:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5075:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5087:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:4"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5126:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 924,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:4"
									},
									"scope": 1264,
									"src": "5039:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "5725:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 957,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "5739:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 958,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 971,
												"nodeType": "IfStatement",
												"src": "5735:86:4",
												"trueBody": {
													"id": 970,
													"nodeType": "Block",
													"src": "5759:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 966,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 964,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 963,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "5780:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 969,
															"nodeType": "RevertStatement",
															"src": "5773:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 972,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "5834:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 973,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 986,
												"nodeType": "IfStatement",
												"src": "5830:86:4",
												"trueBody": {
													"id": 985,
													"nodeType": "Block",
													"src": "5852:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 979,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 978,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "5873:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 984,
															"nodeType": "RevertStatement",
															"src": "5866:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 988,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "5933:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "5939:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 990,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "5943:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 987,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "5925:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:4"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "5675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "5689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "5701:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:4"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:4"
									},
									"scope": 1264,
									"src": "5656:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "6346:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1004,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "6360:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1005,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1041,
													"nodeType": "Block",
													"src": "6534:362:4",
													"statements": [
														{
															"assignments": [
																1016
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1016,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1041,
																	"src": "6548:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1015,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1020,
															"initialValue": {
																"baseExpression": {
																	"id": 1017,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "6570:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1019,
																"indexExpression": {
																	"id": 1018,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "6580:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1021,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "6603:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1022,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "6617:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1031,
															"nodeType": "IfStatement",
															"src": "6599:115:4",
															"trueBody": {
																"id": 1030,
																"nodeType": "Block",
																"src": "6624:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1025,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 997,
																					"src": "6674:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1026,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1016,
																					"src": "6680:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1027,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1001,
																					"src": "6693:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1024,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 559,
																				"src": "6649:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1029,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:4"
																	}
																]
															}
														},
														{
															"id": 1040,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1032,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 772,
																				"src": "6834:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1034,
																			"indexExpression": {
																				"id": 1033,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "6844:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1035,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1016,
																				"src": "6852:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1036,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1001,
																				"src": "6866:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1039,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:4"
																}
															]
														}
													]
												},
												"id": 1042,
												"nodeType": "IfStatement",
												"src": "6356:540:4",
												"trueBody": {
													"id": 1014,
													"nodeType": "Block",
													"src": "6380:148:4",
													"statements": [
														{
															"expression": {
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1010,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "6496:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "6512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1013,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1043,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "6910:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1044,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1062,
													"nodeType": "Block",
													"src": "7125:206:4",
													"statements": [
														{
															"id": 1061,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1055,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 772,
																				"src": "7284:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1057,
																			"indexExpression": {
																				"id": 1056,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 999,
																				"src": "7294:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1058,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1001,
																			"src": "7301:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1060,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:4"
																}
															]
														}
													]
												},
												"id": 1063,
												"nodeType": "IfStatement",
												"src": "6906:425:4",
												"trueBody": {
													"id": 1054,
													"nodeType": "Block",
													"src": "6928:191:4",
													"statements": [
														{
															"id": 1053,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1049,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 780,
																			"src": "7073:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1050,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1001,
																			"src": "7089:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1052,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1065,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "7355:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "7361:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "7365:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1276,
														"src": "7346:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "EmitStatement",
												"src": "7341:30:4"
											}
										]
									},
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "6288:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "6302:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "6314:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:4"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:4"
									},
									"scope": 1264,
									"src": "6271:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "7777:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1079,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "7791:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1080,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1093,
												"nodeType": "IfStatement",
												"src": "7787:91:4",
												"trueBody": {
													"id": 1092,
													"nodeType": "Block",
													"src": "7814:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1086,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1085,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "7835:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1091,
															"nodeType": "RevertStatement",
															"src": "7828:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1095,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "7907:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1100,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "7916:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1094,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "7887:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:4"
											}
										]
									},
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "7736:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "7753:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:4"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:4"
									},
									"scope": 1264,
									"src": "7721:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "8303:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1112,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "8317:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1113,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1126,
												"nodeType": "IfStatement",
												"src": "8313:89:4",
												"trueBody": {
													"id": 1125,
													"nodeType": "Block",
													"src": "8340:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1119,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1118,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "8361:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1124,
															"nodeType": "RevertStatement",
															"src": "8354:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1128,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "8419:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1133,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "8440:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1127,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "8411:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:4"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "8262:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "8279:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:4"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:4"
									},
									"scope": 1264,
									"src": "8247:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "9063:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1148,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "9082:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1149,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "9089:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1150,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "9098:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1147,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1155,
															1215
														],
														"referencedDeclaration": 1215,
														"src": "9073:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:4"
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "9007:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "9022:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "9039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:4"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:4"
									},
									"scope": 1264,
									"src": "8989:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "10047:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1167,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "10061:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1168,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1181,
												"nodeType": "IfStatement",
												"src": "10057:89:4",
												"trueBody": {
													"id": 1180,
													"nodeType": "Block",
													"src": "10082:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1176,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1174,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1173,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "10103:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1179,
															"nodeType": "RevertStatement",
															"src": "10096:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1182,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "10159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1183,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1196,
												"nodeType": "IfStatement",
												"src": "10155:90:4",
												"trueBody": {
													"id": 1195,
													"nodeType": "Block",
													"src": "10182:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1189,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1188,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "10203:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1194,
															"nodeType": "RevertStatement",
															"src": "10196:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1197,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "10254:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1200,
															"indexExpression": {
																"id": 1198,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "10266:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1201,
														"indexExpression": {
															"id": 1199,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "10273:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1202,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "10284:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:4"
											},
											{
												"condition": {
													"id": 1205,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1164,
													"src": "10303:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1213,
												"nodeType": "IfStatement",
												"src": "10299:76:4",
												"trueBody": {
													"id": 1212,
													"nodeType": "Block",
													"src": "10314:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1207,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "10342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1208,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1160,
																		"src": "10349:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1209,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1162,
																		"src": "10358:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1206,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1285,
																	"src": "10333:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1211,
															"nodeType": "EmitStatement",
															"src": "10328:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "9967:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "9999:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "10014:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:4"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:4"
									},
									"scope": 1264,
									"src": "9949:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "10752:388:4",
										"statements": [
											{
												"assignments": [
													1226
												],
												"declarations": [
													{
														"constant": false,
														"id": 1226,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1262,
														"src": "10762:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1231,
												"initialValue": {
													"arguments": [
														{
															"id": 1228,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "10799:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1229,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "10806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1227,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "10789:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1232,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "10828:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1234,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1233,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1261,
												"nodeType": "IfStatement",
												"src": "10824:310:4",
												"trueBody": {
													"id": 1260,
													"nodeType": "Block",
													"src": "10867:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1239,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "10885:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1240,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "10904:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1249,
															"nodeType": "IfStatement",
															"src": "10881:130:4",
															"trueBody": {
																"id": 1248,
																"nodeType": "Block",
																"src": "10911:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1243,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1220,
																					"src": "10963:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1244,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1226,
																					"src": "10972:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1245,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1222,
																					"src": "10990:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1242,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "10936:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1247,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:4"
																	}
																]
															}
														},
														{
															"id": 1259,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1251,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1218,
																				"src": "11061:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1252,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1220,
																				"src": "11068:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1253,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1226,
																					"src": "11077:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1254,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1222,
																					"src": "11096:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1250,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1155,
																				1215
																			],
																			"referencedDeclaration": 1215,
																			"src": "11052:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1258,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "10688:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "10703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "10720:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:4"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:4"
									},
									"scope": 1264,
									"src": "10663:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1265,
							"src": "1401:9741:4",
							"usedErrors": [
								559,
								564,
								569,
								578,
								583,
								588
							],
							"usedEvents": [
								1276,
								1285
							]
						}
					],
					"src": "105:11038:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1342
						]
					},
					"id": 1343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1267,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1342,
							"linearizedBaseContracts": [
								1342
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1276,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1285,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 1342,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 1342,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 1342,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 1342,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 1342,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 1342,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1343,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1276,
								1285
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1444
						],
						"ERC20": [
							1264
						],
						"ERC20Burnable": [
							1388
						]
					},
					"id": 1389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1344,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1346,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1389,
							"sourceUnit": 1265,
							"src": "150:35:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1345,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1264,
										"src": "158:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1348,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1389,
							"sourceUnit": 1445,
							"src": "186:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1347,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1444,
										"src": "194:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1350,
										"name": "Context",
										"nameLocations": [
											"483:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1444,
										"src": "483:7:6"
									},
									"id": 1351,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:6"
								},
								{
									"baseName": {
										"id": 1352,
										"name": "ERC20",
										"nameLocations": [
											"492:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1264,
										"src": "492:5:6"
									},
									"id": 1353,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:6"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1349,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:6",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1388,
							"linearizedBaseContracts": [
								1388,
								1264,
								589,
								1414,
								1342,
								1444
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1365,
										"nodeType": "Block",
										"src": "662:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1360,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "678:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1362,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "692:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1359,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "672:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1364,
												"nodeType": "ExpressionStatement",
												"src": "672:26:6"
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:6",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "632:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:6"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:6"
									},
									"scope": 1388,
									"src": "618:87:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "1086:93:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1375,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "1112:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1376,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "1121:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1378,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "1135:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1374,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "1096:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1382,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "1157:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1383,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "1166:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1381,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "1151:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:6"
											}
										]
									},
									"documentation": {
										"id": 1367,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:6",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1039:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1056:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:6"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:6"
									},
									"scope": 1388,
									"src": "1021:158:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1389,
							"src": "448:733:6",
							"usedErrors": [
								559,
								564,
								569,
								578,
								583,
								588
							],
							"usedEvents": [
								1276,
								1285
							]
						}
					],
					"src": "124:1058:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1342
						],
						"IERC20Metadata": [
							1414
						]
					},
					"id": 1415,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1415,
							"sourceUnit": 1343,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1391,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1342,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1394,
										"name": "IERC20",
										"nameLocations": [
											"305:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1342,
										"src": "305:6:7"
									},
									"id": 1395,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1393,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:7",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1414,
							"linearizedBaseContracts": [
								1414,
								1342
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:7"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "416:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1398,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:7"
									},
									"scope": 1414,
									"src": "377:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:7"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "539:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:7"
									},
									"scope": 1414,
									"src": "498:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:7"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "673:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1410,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:7"
									},
									"scope": 1414,
									"src": "630:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1415,
							"src": "277:405:7",
							"usedErrors": [],
							"usedEvents": [
								1276,
								1285
							]
						}
					],
					"src": "125:558:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1444
						]
					},
					"id": 1445,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1416,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1417,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1444,
							"linearizedBaseContracts": [
								1444
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1422,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1421,
												"id": 1424,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1444,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1434,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1431,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1430,
												"id": 1433,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1444,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1442,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1439,
												"id": 1441,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1444,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1445,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1444
						],
						"Pausable": [
							1561
						]
					},
					"id": 1562,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1446,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1448,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1562,
							"sourceUnit": 1445,
							"src": "128:45:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1447,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1444,
										"src": "136:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1450,
										"name": "Context",
										"nameLocations": [
											"645:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1444,
										"src": "645:7:9"
									},
									"id": 1451,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:9"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1449,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:9",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1561,
							"linearizedBaseContracts": [
								1561,
								1444
							],
							"name": "Pausable",
							"nameLocation": "633:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1453,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1561,
									"src": "659:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1452,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:9",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1458,
									"name": "Paused",
									"nameLocation": "770:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "777:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:9"
									},
									"src": "764:30:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:9",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1463,
									"name": "Unpaused",
									"nameLocation": "881:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "890:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:9"
									},
									"src": "875:32:9"
								},
								{
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:9",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1466,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:9"
									},
									"src": "994:22:9"
								},
								{
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:9",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1469,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:9"
									},
									"src": "1107:22:9"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "1221:32:9",
										"statements": [
											{
												"expression": {
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1473,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "1231:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:9"
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:9",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1478,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:9"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:9"
									},
									"scope": 1561,
									"src": "1207:46:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "1464:47:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1481,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "1474:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:9"
											},
											{
												"id": 1484,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:9"
											}
										]
									},
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:9",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1486,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:9"
									},
									"src": "1439:72:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "1711:44:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1489,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "1721:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:9"
											},
											{
												"id": 1492,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:9"
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:9",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1494,
									"name": "whenPaused",
									"nameLocation": "1698:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:9"
									},
									"src": "1689:66:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "1903:31:9",
										"statements": [
											{
												"expression": {
													"id": 1500,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1453,
													"src": "1920:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1499,
												"id": 1501,
												"nodeType": "Return",
												"src": "1913:14:9"
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:9",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:9"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "1897:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:9"
									},
									"scope": 1561,
									"src": "1850:84:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "2053:77:9",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1507,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "2067:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1513,
												"nodeType": "IfStatement",
												"src": "2063:61:9",
												"trueBody": {
													"id": 1512,
													"nodeType": "Block",
													"src": "2077:47:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1509,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "2098:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1511,
															"nodeType": "RevertStatement",
															"src": "2091:22:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:9",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:9"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:9"
									},
									"scope": 1561,
									"src": "2002:128:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "2250:78:9",
										"statements": [
											{
												"condition": {
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:9",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1519,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "2265:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1526,
												"nodeType": "IfStatement",
												"src": "2260:62:9",
												"trueBody": {
													"id": 1525,
													"nodeType": "Block",
													"src": "2275:47:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1522,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "2296:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1524,
															"nodeType": "RevertStatement",
															"src": "2289:22:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:9",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:9"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:9"
									},
									"scope": 1561,
									"src": "2202:126:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1543,
										"nodeType": "Block",
										"src": "2512:66:9",
										"statements": [
											{
												"expression": {
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1534,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "2522:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1539,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "2558:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1538,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "2551:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1542,
												"nodeType": "EmitStatement",
												"src": "2546:25:9"
											}
										]
									},
									"documentation": {
										"id": 1529,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:9",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1544,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1532,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1531,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1486,
												"src": "2498:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:9"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:9"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:9"
									},
									"scope": 1561,
									"src": "2463:115:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1559,
										"nodeType": "Block",
										"src": "2758:69:9",
										"statements": [
											{
												"expression": {
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1550,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "2768:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1555,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "2807:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1554,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "2798:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1558,
												"nodeType": "EmitStatement",
												"src": "2793:27:9"
											}
										]
									},
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:9",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1560,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1548,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1547,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1494,
												"src": "2747:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:9"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:9"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:9"
									},
									"scope": 1561,
									"src": "2710:117:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1562,
							"src": "615:2214:9",
							"usedErrors": [
								1466,
								1469
							],
							"usedEvents": [
								1458,
								1463
							]
						}
					],
					"src": "102:2728:9"
				},
				"id": 9
			}
		}
	}
}